[
  {
    "isPartial": true,
    "members": [
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "MIDIOptions"
            }
          }
        ],
        "from": "Navigator",
        "name": "requestMIDIAccess",
        "returnType": {
          "name": "Promise"
        }
      }
    ],
    "name": "Navigator",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "members": [
      {
        "from": "MIDIOptions",
        "name": "sysex",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MIDIOptions",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "args": [
      {
        "name": "access",
        "type": {
          "name": "MIDIAccess"
        }
      },
      {
        "name": "options",
        "type": {
          "name": "MIDIOptions"
        }
      }
    ],
    "name": "MIDISuccessCallback",
    "returnType": {
      "name": "void"
    },
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "args": [
      {
        "name": "error",
        "type": {
          "name": "DOMError"
        }
      }
    ],
    "name": "MIDIErrorCallback",
    "returnType": {
      "name": "void"
    },
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "MIDIAccess",
        "name": "inputs",
        "type": {
          "name": "MIDIInputMap"
        }
      },
      {
        "from": "MIDIAccess",
        "name": "onconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MIDIAccess",
        "name": "ondisconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MIDIAccess",
        "name": "outputs",
        "type": {
          "name": "MIDIOutputMap"
        }
      },
      {
        "from": "MIDIAccess",
        "isReadOnly": true,
        "name": "sysexEnabled",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MIDIAccess",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "name": "MIDIPortType",
    "url": "http://cwilso.github.io/web-midi-api/",
    "value": [
      "input",
      "output"
    ]
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "manufacturer",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MIDIPort",
        "name": "ondisconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "MIDIPortType"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "version",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "MIDIPort",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "inheritsFrom": "MIDIPort",
    "members": [
      {
        "from": "MIDIInput",
        "name": "onmidimessage",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "manufacturer",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MIDIPort",
        "name": "ondisconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "MIDIPortType"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "version",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "MIDIInput",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "inheritsFrom": "MIDIPort",
    "members": [
      {
        "args": [
          {
            "name": "data",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "octet"
                }
              ]
            }
          },
          {
            "name": "timestamp",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "MIDIOutput",
        "name": "send",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "manufacturer",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MIDIPort",
        "name": "ondisconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "MIDIPortType"
        }
      },
      {
        "from": "MIDIPort",
        "isReadOnly": true,
        "name": "version",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "MIDIOutput",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "MIDIMessageEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "MIDIMessageEvent",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "Uint8Array"
        }
      },
      {
        "from": "MIDIMessageEvent",
        "isReadOnly": true,
        "name": "receivedTime",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MIDIMessageEvent",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "members": [
      {
        "from": "MIDIMessageEventInit",
        "name": "data",
        "type": {
          "name": "Uint8Array"
        }
      },
      {
        "from": "MIDIMessageEventInit",
        "name": "receivedTime",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "MIDIMessageEventInit",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "MIDIConnectionEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "MIDIConnectionEvent",
        "isReadOnly": true,
        "name": "port",
        "type": {
          "name": "MIDIPort"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MIDIConnectionEvent",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "members": [
      {
        "from": "MIDIConnectionEventInit",
        "name": "port",
        "type": {
          "name": "MIDIPort"
        }
      }
    ],
    "name": "MIDIConnectionEventInit",
    "url": "http://cwilso.github.io/web-midi-api/"
  },
  {
    "name": "VibratePattern",
    "type": {
      "types": [
        {
          "name": "unsigned long"
        },
        {
          "name": "sequence",
          "params": [
            {
              "name": "unsigned long"
            }
          ]
        }
      ]
    },
    "url": "http://dev.w3.org/2009/dap/vibration/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "animationEventInitDict",
            "optional": true,
            "type": {
              "name": "AnimationEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "AnimationEvent",
        "isReadOnly": true,
        "name": "animationName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "AnimationEvent",
        "isReadOnly": true,
        "name": "elapsedTime",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AnimationEvent",
        "isReadOnly": true,
        "name": "pseudoElement",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "AnimationEvent",
    "url": "http://dev.w3.org/csswg/css-animations/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "",
        "from": "AnimationEventInit",
        "name": "animationName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "AnimationEventInit",
        "name": "elapsedTime",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "",
        "from": "AnimationEventInit",
        "name": "pseudoElement",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "AnimationEventInit",
    "url": "http://dev.w3.org/csswg/css-animations/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSRule",
    "url": "http://dev.w3.org/csswg/css-animations/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "from": "CSSKeyframeRule",
        "name": "keyText",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "CSSKeyframeRule",
        "isReadOnly": true,
        "name": "style",
        "type": {
          "name": "CSSStyleDeclaration"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSKeyframeRule",
    "url": "http://dev.w3.org/csswg/css-animations/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "args": [
          {
            "name": "rule",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CSSKeyframesRule",
        "name": "appendRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "CSSKeyframesRule",
        "isReadOnly": true,
        "name": "cssRules",
        "type": {
          "name": "CSSRuleList"
        }
      },
      {
        "args": [
          {
            "name": "select",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CSSKeyframesRule",
        "name": "deleteRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "select",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CSSKeyframesRule",
        "name": "findRule",
        "returnType": {
          "name": "CSSKeyframeRule",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "CSSKeyframesRule",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSKeyframesRule",
    "url": "http://dev.w3.org/csswg/css-animations/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "GlobalEventHandlers",
        "name": "onanimationcancel",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "GlobalEventHandlers",
        "name": "onanimationend",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "GlobalEventHandlers",
        "name": "onanimationiteration",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "GlobalEventHandlers",
        "name": "onanimationstart",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "GlobalEventHandlers",
    "url": "http://dev.w3.org/csswg/css-animations/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "from": "CSSGroupingRule",
        "isReadOnly": true,
        "name": "cssRules",
        "type": {
          "name": "CSSRuleList"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "deleteRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "rule",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "insertRule",
        "returnType": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSGroupingRule",
    "url": "http://dev.w3.org/csswg/css-conditional/"
  },
  {
    "inheritsFrom": "CSSGroupingRule",
    "members": [
      {
        "from": "CSSConditionRule",
        "name": "conditionText",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "CSSGroupingRule",
        "isReadOnly": true,
        "name": "cssRules",
        "type": {
          "name": "CSSRuleList"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "deleteRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "rule",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "insertRule",
        "returnType": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSConditionRule",
    "url": "http://dev.w3.org/csswg/css-conditional/"
  },
  {
    "inheritsFrom": "CSSConditionRule",
    "members": [
      {
        "from": "CSSMediaRule",
        "isReadOnly": true,
        "name": "media",
        "type": {
          "name": "MediaList"
        }
      },
      {
        "from": "CSSConditionRule",
        "name": "conditionText",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "CSSGroupingRule",
        "isReadOnly": true,
        "name": "cssRules",
        "type": {
          "name": "CSSRuleList"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "deleteRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "rule",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "insertRule",
        "returnType": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSMediaRule",
    "url": "http://dev.w3.org/csswg/css-conditional/"
  },
  {
    "inheritsFrom": "CSSConditionRule",
    "members": [
      {
        "from": "CSSConditionRule",
        "name": "conditionText",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "CSSGroupingRule",
        "isReadOnly": true,
        "name": "cssRules",
        "type": {
          "name": "CSSRuleList"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "deleteRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "rule",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "insertRule",
        "returnType": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSSupportsRule",
    "url": "http://dev.w3.org/csswg/css-conditional/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "args": [
          {
            "name": "property",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CSS",
        "isStatic": true,
        "name": "supports",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "conditionText",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CSS",
        "isStatic": true,
        "name": "supports",
        "returnType": {
          "name": "boolean"
        }
      }
    ],
    "name": "CSS",
    "url": "http://dev.w3.org/csswg/css-conditional/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "from": "CSSViewportRule",
        "isReadOnly": true,
        "name": "style",
        "type": {
          "name": "CSSStyleDeclaration"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSViewportRule",
    "url": "http://dev.w3.org/csswg/css-device-adapt/"
  },
  {
    "name": "BinaryData",
    "type": {
      "types": [
        {
          "name": "ArrayBuffer"
        },
        {
          "name": "ArrayBufferView"
        }
      ]
    },
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "members": [
      {
        "defaultValue": "normal",
        "from": "FontFaceDescriptors",
        "name": "featureSettings",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "normal",
        "from": "FontFaceDescriptors",
        "name": "stretch",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "normal",
        "from": "FontFaceDescriptors",
        "name": "style",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "U+0-10FFFF",
        "from": "FontFaceDescriptors",
        "name": "unicodeRange",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "normal",
        "from": "FontFaceDescriptors",
        "name": "variant",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "normal",
        "from": "FontFaceDescriptors",
        "name": "weight",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "FontFaceDescriptors",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "name": "FontFaceLoadStatus",
    "url": "http://dev.w3.org/csswg/css-font-loading/",
    "value": [
      "unloaded",
      "loading",
      "loaded",
      "error"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "family",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "source",
            "type": {
              "types": [
                {
                  "name": "DOMString"
                },
                {
                  "name": "BinaryData"
                }
              ]
            }
          },
          {
            "name": "descriptors",
            "optional": true,
            "type": {
              "name": "FontFaceDescriptors"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      },
      {
        "name": "Worker"
      }
    ],
    "members": [
      {
        "from": "FontFace",
        "name": "family",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "FontFace",
        "name": "featureSettings",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "FontFace",
        "name": "load",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "FontFace"
            }
          ]
        }
      },
      {
        "from": "FontFace",
        "isReadOnly": true,
        "name": "loaded",
        "type": {
          "name": "Promise",
          "params": [
            {
              "name": "FontFace"
            }
          ]
        }
      },
      {
        "from": "FontFace",
        "isReadOnly": true,
        "name": "status",
        "type": {
          "name": "FontFaceLoadStatus"
        }
      },
      {
        "from": "FontFace",
        "name": "stretch",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "FontFace",
        "name": "style",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "FontFace",
        "name": "unicodeRange",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "FontFace",
        "name": "variant",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "FontFace",
        "name": "weight",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "FontFace",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "FontFaceSetLoadEventInit",
        "name": "fontfaces",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "FontFace"
            }
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FontFaceSetLoadEventInit",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "FontFaceSetLoadEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      },
      {
        "name": "Worker"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "FontFaceSetLoadEvent",
        "isReadOnly": true,
        "name": "fontfaces",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "FontFace"
            }
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FontFaceSetLoadEvent",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "name": "FontFaceSetLoadStatus",
    "url": "http://dev.w3.org/csswg/css-font-loading/",
    "value": [
      "loading",
      "loaded"
    ]
  },
  {
    "args": [
      {
        "name": "font",
        "type": {
          "name": "FontFace"
        }
      },
      {
        "name": "index",
        "type": {
          "name": "long"
        }
      },
      {
        "name": "self",
        "type": {
          "name": "FontFaceSet"
        }
      }
    ],
    "name": "ForEachCallback",
    "returnType": {
      "name": "void"
    },
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "initialFaces",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "FontFace"
                }
              ]
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      },
      {
        "name": "Worker"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "args": [
          {
            "name": "font",
            "type": {
              "name": "FontFace"
            }
          }
        ],
        "from": "FontFaceSet",
        "name": "add",
        "returnType": {
          "name": "FontFaceSet"
        }
      },
      {
        "args": [
          {
            "name": "font",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "defaultValue": " ",
            "name": "text",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "FontFaceSet",
        "name": "check",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "from": "FontFaceSet",
        "name": "clear",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "font",
            "type": {
              "name": "FontFace"
            }
          }
        ],
        "from": "FontFaceSet",
        "name": "delete",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "font",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "defaultValue": " ",
            "name": "text",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "FontFaceSet",
        "name": "load",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "FontFace"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "FontFaceSet",
        "name": "onloading",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FontFaceSet",
        "name": "onloadingdone",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FontFaceSet",
        "name": "onloadingerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FontFaceSet",
        "isReadOnly": true,
        "name": "ready",
        "type": {
          "name": "Promise",
          "params": [
            {
              "name": "FontFaceSet"
            }
          ]
        }
      },
      {
        "from": "FontFaceSet",
        "isReadOnly": true,
        "name": "status",
        "type": {
          "name": "FontFaceSetLoadStatus"
        }
      },
      {
        "from": "FontFaceSet",
        "type": {
          "name": "FontFace"
        }
      }
    ],
    "name": "FontFaceSet",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "FontFaceSource",
        "isReadOnly": true,
        "name": "fonts",
        "type": {
          "name": "FontFaceSet"
        }
      }
    ],
    "name": "FontFaceSource",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "implemented": "FontFaceSource",
    "implementer": "Document",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "implemented": "FontFaceSource",
    "implementer": "WorkerGlobalScope",
    "url": "http://dev.w3.org/csswg/css-font-loading/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "transitionEventInitDict",
            "optional": true,
            "type": {
              "name": "TransitionEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "TransitionEvent",
        "isReadOnly": true,
        "name": "elapsedTime",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "TransitionEvent",
        "isReadOnly": true,
        "name": "propertyName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "TransitionEvent",
        "isReadOnly": true,
        "name": "pseudoElement",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "TransitionEvent",
    "url": "http://dev.w3.org/csswg/css-transitions/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "0.0",
        "from": "TransitionEventInit",
        "name": "elapsedTime",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "",
        "from": "TransitionEventInit",
        "name": "propertyName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "",
        "from": "TransitionEventInit",
        "name": "pseudoElement",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "TransitionEventInit",
    "url": "http://dev.w3.org/csswg/css-transitions/"
  },
  {
    "attrs": [
      {
        "name": "LegacyArrayClass"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "medium",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "MediaList",
        "name": "appendMedium",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "medium",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "MediaList",
        "name": "deleteMedium",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "MediaList",
        "name": "item",
        "returnType": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "MediaList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "attrs": [
          {
            "name": "TreatNullAs",
            "value": "EmptyString"
          }
        ],
        "from": "MediaList",
        "name": "mediaText",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "MediaList",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "members": [
      {
        "from": "StyleSheet",
        "name": "disabled",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "href",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "PutForwards",
            "value": "mediaText"
          },
          {
            "name": "SameObject"
          }
        ],
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "media",
        "type": {
          "name": "MediaList"
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "ownerNode",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "Element"
            },
            {
              "name": "ProcessingInstruction"
            }
          ]
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "parentStyleSheet",
        "type": {
          "name": "StyleSheet",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "title",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "StyleSheet",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "inheritsFrom": "StyleSheet",
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "CSSStyleSheet",
        "isReadOnly": true,
        "name": "cssRules",
        "type": {
          "name": "CSSRuleList"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSStyleSheet",
        "name": "deleteRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "rule",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSStyleSheet",
        "name": "insertRule",
        "returnType": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CSSStyleSheet",
        "isReadOnly": true,
        "name": "ownerRule",
        "type": {
          "name": "CSSRule",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "StyleSheet",
        "name": "disabled",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "href",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "PutForwards",
            "value": "mediaText"
          },
          {
            "name": "SameObject"
          }
        ],
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "media",
        "type": {
          "name": "MediaList"
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "ownerNode",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "Element"
            },
            {
              "name": "ProcessingInstruction"
            }
          ]
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "parentStyleSheet",
        "type": {
          "name": "StyleSheet",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "title",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "StyleSheet",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "CSSStyleSheet",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "attrs": [
      {
        "name": "LegacyArrayClass"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "StyleSheetList",
        "name": "item",
        "returnType": {
          "name": "StyleSheet",
          "params": [
            "nullable"
          ]
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "StyleSheetList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "StyleSheetList",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "LinkStyle",
        "isReadOnly": true,
        "name": "sheet",
        "type": {
          "name": "StyleSheet",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "LinkStyle",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "implemented": "LinkStyle",
    "implementer": "ProcessingInstruction",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "attrs": [
      {
        "name": "LegacyArrayClass"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSRuleList",
        "name": "item",
        "returnType": {
          "name": "CSSRule",
          "params": [
            "nullable"
          ]
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "CSSRuleList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "CSSRuleList",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "from": "CSSStyleRule",
        "name": "selectorText",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "attrs": [
          {
            "name": "PutForwards",
            "value": "cssText"
          },
          {
            "name": "SameObject"
          }
        ],
        "from": "CSSStyleRule",
        "isReadOnly": true,
        "name": "style",
        "type": {
          "name": "CSSStyleDeclaration"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSStyleRule",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "from": "CSSImportRule",
        "isReadOnly": true,
        "name": "href",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "attrs": [
          {
            "name": "PutForwards",
            "value": "mediaText"
          },
          {
            "name": "SameObject"
          }
        ],
        "from": "CSSImportRule",
        "isReadOnly": true,
        "name": "media",
        "type": {
          "name": "MediaList"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "CSSImportRule",
        "isReadOnly": true,
        "name": "styleSheet",
        "type": {
          "name": "CSSStyleSheet"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSImportRule",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "inheritsFrom": "CSSGroupingRule",
    "members": [
      {
        "from": "CSSPageRule",
        "name": "selectorText",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "attrs": [
          {
            "name": "PutForwards",
            "value": "cssText"
          },
          {
            "name": "SameObject"
          }
        ],
        "from": "CSSPageRule",
        "isReadOnly": true,
        "name": "style",
        "type": {
          "name": "CSSStyleDeclaration"
        }
      },
      {
        "from": "CSSGroupingRule",
        "isReadOnly": true,
        "name": "cssRules",
        "type": {
          "name": "CSSRuleList"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "deleteRule",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "rule",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSGroupingRule",
        "name": "insertRule",
        "returnType": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSPageRule",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "from": "CSSMarginRule",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "attrs": [
          {
            "name": "PutForwards",
            "value": "cssText"
          },
          {
            "name": "SameObject"
          }
        ],
        "from": "CSSMarginRule",
        "isReadOnly": true,
        "name": "style",
        "type": {
          "name": "CSSStyleDeclaration"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSMarginRule",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "inheritsFrom": "CSSRule",
    "members": [
      {
        "from": "CSSNamespaceRule",
        "isReadOnly": true,
        "name": "namespaceURI",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "CSSNamespaceRule",
        "isReadOnly": true,
        "name": "prefix",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAMES_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "7"
      },
      {
        "from": "CSSRule",
        "isConst": true,
        "name": "KEYFRAME_RULE",
        "type": {
          "name": "unsigned short"
        },
        "value": "8"
      }
    ],
    "name": "CSSNamespaceRule",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "CEReactions"
          },
          {
            "name": "TreatNullAs",
            "value": "EmptyString"
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "cssFloat",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "cssText",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "property",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "getPropertyPriority",
        "returnType": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "property",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "getPropertyValue",
        "returnType": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "item",
        "returnType": {
          "name": "DOMString"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "CSSStyleDeclaration",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CSSStyleDeclaration",
        "isReadOnly": true,
        "name": "parentRule",
        "type": {
          "name": "CSSRule",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "property",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "removeProperty",
        "returnType": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "property",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "attrs": [
              {
                "name": "TreatNullAs",
                "value": "EmptyString"
              }
            ],
            "name": "value",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "attrs": [
              {
                "name": "TreatNullAs",
                "value": "EmptyString"
              }
            ],
            "defaultValue": "",
            "name": "priority",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "setProperty",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "property",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "attrs": [
              {
                "name": "TreatNullAs",
                "value": "EmptyString"
              }
            ],
            "name": "priority",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "setPropertyPriority",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "property",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "attrs": [
              {
                "name": "TreatNullAs",
                "value": "EmptyString"
              }
            ],
            "name": "value",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "CSSStyleDeclaration",
        "name": "setPropertyValue",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "CSSStyleDeclaration",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "attrs": [
          {
            "name": "PutForwards",
            "value": "cssText"
          },
          {
            "name": "SameObject"
          }
        ],
        "from": "ElementCSSInlineStyle",
        "isReadOnly": true,
        "name": "style",
        "type": {
          "name": "CSSStyleDeclaration"
        }
      }
    ],
    "name": "ElementCSSInlineStyle",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "implemented": "ElementCSSInlineStyle",
    "implementer": "HTMLElement",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "implemented": "ElementCSSInlineStyle",
    "implementer": "SVGElement",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "args": [
          {
            "name": "elt",
            "type": {
              "name": "Element"
            }
          },
          {
            "name": "pseudoElt",
            "optional": true,
            "type": {
              "name": "DOMString",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Window",
        "name": "getComputedStyle",
        "returnType": {
          "name": "CSSStyleDeclaration"
        }
      }
    ],
    "name": "Window",
    "url": "http://dev.w3.org/csswg/cssom-1/"
  },
  {
    "name": "ScrollBehavior",
    "url": "http://dev.w3.org/csswg/cssom-view/",
    "value": [
      "auto",
      "instant",
      "smooth"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "auto",
        "from": "ScrollOptions",
        "name": "behavior",
        "type": {
          "name": "ScrollBehavior"
        }
      }
    ],
    "name": "ScrollOptions",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "inheritsFrom": "ScrollOptions",
    "members": [
      {
        "from": "ScrollToOptions",
        "name": "left",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "ScrollToOptions",
        "name": "top",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "auto",
        "from": "ScrollOptions",
        "name": "behavior",
        "type": {
          "name": "ScrollBehavior"
        }
      }
    ],
    "name": "ScrollToOptions",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "args": [
          {
            "name": "listener",
            "type": {
              "name": "EventListener",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "MediaQueryList",
        "name": "addListener",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaQueryList",
        "isReadOnly": true,
        "name": "matches",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaQueryList",
        "isReadOnly": true,
        "name": "media",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaQueryList",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "listener",
            "type": {
              "name": "EventListener",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "MediaQueryList",
        "name": "removeListener",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "MediaQueryList",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "MediaQueryListEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "MediaQueryListEvent",
        "isReadOnly": true,
        "name": "matches",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaQueryListEvent",
        "isReadOnly": true,
        "name": "media",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaQueryListEvent",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "false",
        "from": "MediaQueryListEventInit",
        "name": "matches",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "",
        "from": "MediaQueryListEventInit",
        "name": "media",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaQueryListEventInit",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "members": [
      {
        "from": "Screen",
        "isReadOnly": true,
        "name": "availHeight",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Screen",
        "isReadOnly": true,
        "name": "availWidth",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Screen",
        "isReadOnly": true,
        "name": "colorDepth",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Screen",
        "isReadOnly": true,
        "name": "height",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Screen",
        "isReadOnly": true,
        "name": "pixelDepth",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Screen",
        "isReadOnly": true,
        "name": "width",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "Screen",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "CaretPosition",
        "name": "getClientRect",
        "returnType": {
          "name": "DOMRect",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "CaretPosition",
        "isReadOnly": true,
        "name": "offset",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "CaretPosition",
        "isReadOnly": true,
        "name": "offsetNode",
        "type": {
          "name": "Node"
        }
      }
    ],
    "name": "CaretPosition",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "name": "ScrollLogicalPosition",
    "url": "http://dev.w3.org/csswg/cssom-view/",
    "value": [
      "start",
      "center",
      "end",
      "nearest"
    ]
  },
  {
    "inheritsFrom": "ScrollOptions",
    "members": [
      {
        "defaultValue": "center",
        "from": "ScrollIntoViewOptions",
        "name": "block",
        "type": {
          "name": "ScrollLogicalPosition"
        }
      },
      {
        "defaultValue": "center",
        "from": "ScrollIntoViewOptions",
        "name": "inline",
        "type": {
          "name": "ScrollLogicalPosition"
        }
      },
      {
        "defaultValue": "auto",
        "from": "ScrollOptions",
        "name": "behavior",
        "type": {
          "name": "ScrollBehavior"
        }
      }
    ],
    "name": "ScrollIntoViewOptions",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "Element",
        "isReadOnly": true,
        "name": "clientHeight",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Element",
        "isReadOnly": true,
        "name": "clientLeft",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Element",
        "isReadOnly": true,
        "name": "clientTop",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Element",
        "isReadOnly": true,
        "name": "clientWidth",
        "type": {
          "name": "long"
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Element",
        "name": "getBoundingClientRect",
        "returnType": {
          "name": "DOMRect"
        }
      },
      {
        "from": "Element",
        "name": "getClientRects",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMRect"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "Element",
        "name": "scroll",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ScrollToOptions"
            }
          }
        ],
        "from": "Element",
        "name": "scroll",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "Element",
        "name": "scrollBy",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ScrollToOptions"
            }
          }
        ],
        "from": "Element",
        "name": "scrollBy",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Element",
        "isReadOnly": true,
        "name": "scrollHeight",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Element",
        "name": "scrollIntoView",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "arg",
            "type": {
              "types": [
                {
                  "name": "boolean"
                },
                {
                  "name": "object"
                }
              ]
            }
          }
        ],
        "from": "Element",
        "name": "scrollIntoView",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Element",
        "name": "scrollLeft",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "Element",
        "name": "scrollTo",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ScrollToOptions"
            }
          }
        ],
        "from": "Element",
        "name": "scrollTo",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Element",
        "name": "scrollTop",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "Element",
        "isReadOnly": true,
        "name": "scrollWidth",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "Element",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "HTMLImageElement",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "HTMLImageElement",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "HTMLImageElement",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Range",
        "name": "getBoundingClientRect",
        "returnType": {
          "name": "DOMRect"
        }
      },
      {
        "from": "Range",
        "name": "getClientRects",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMRect"
            }
          ]
        }
      }
    ],
    "name": "Range",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "clientX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "clientY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "offsetX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "offsetY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "pageX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "pageY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "screenX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "screenY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "MouseEvent",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "clientX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "clientY",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "screenX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "screenY",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "MouseEventInit",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "name": "CSSBoxType",
    "url": "http://dev.w3.org/csswg/cssom-view/",
    "value": [
      "margin",
      "border",
      "padding",
      "content"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "border",
        "from": "BoxQuadOptions",
        "name": "box",
        "type": {
          "name": "CSSBoxType"
        }
      },
      {
        "from": "BoxQuadOptions",
        "name": "relativeTo",
        "type": {
          "name": "GeometryNode"
        }
      }
    ],
    "name": "BoxQuadOptions",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "members": [
      {
        "defaultValue": "border",
        "from": "ConvertCoordinateOptions",
        "name": "fromBox",
        "type": {
          "name": "CSSBoxType"
        }
      },
      {
        "defaultValue": "border",
        "from": "ConvertCoordinateOptions",
        "name": "toBox",
        "type": {
          "name": "CSSBoxType"
        }
      }
    ],
    "name": "ConvertCoordinateOptions",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "point",
            "type": {
              "name": "DOMPointInit"
            }
          },
          {
            "name": "from",
            "type": {
              "name": "GeometryNode"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ConvertCoordinateOptions"
            }
          }
        ],
        "from": "GeometryUtils",
        "name": "convertPointFromNode",
        "returnType": {
          "name": "DOMPoint"
        }
      },
      {
        "args": [
          {
            "name": "quad",
            "type": {
              "name": "DOMQuadInit"
            }
          },
          {
            "name": "from",
            "type": {
              "name": "GeometryNode"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ConvertCoordinateOptions"
            }
          }
        ],
        "from": "GeometryUtils",
        "name": "convertQuadFromNode",
        "returnType": {
          "name": "DOMQuad"
        }
      },
      {
        "args": [
          {
            "name": "rect",
            "type": {
              "name": "DOMRectReadOnly"
            }
          },
          {
            "name": "from",
            "type": {
              "name": "GeometryNode"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ConvertCoordinateOptions"
            }
          }
        ],
        "from": "GeometryUtils",
        "name": "convertRectFromNode",
        "returnType": {
          "name": "DOMQuad"
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "BoxQuadOptions"
            }
          }
        ],
        "from": "GeometryUtils",
        "name": "getBoxQuads",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMQuad"
            }
          ]
        }
      }
    ],
    "name": "GeometryUtils",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "implemented": "GeometryUtils",
    "implementer": "Text",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "implemented": "GeometryUtils",
    "implementer": "CSSPseudoElement",
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "name": "GeometryNode",
    "type": {
      "types": [
        {
          "name": "Text"
        },
        {
          "name": "Element"
        },
        {
          "name": "CSSPseudoElement"
        },
        {
          "name": "Document"
        }
      ]
    },
    "url": "http://dev.w3.org/csswg/cssom-view/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "z",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "1",
            "name": "w",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMPointReadOnly",
        "isStatic": true,
        "name": "fromPoint",
        "returnType": {
          "name": "DOMPointReadOnly"
        }
      },
      {
        "args": [
          {
            "name": "matrix",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "from": "DOMPointReadOnly",
        "name": "matrixTransform",
        "returnType": {
          "name": "DOMPoint"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "w",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "z",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "DOMPointReadOnly",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "z",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "1",
            "name": "w",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "DOMPointReadOnly",
    "members": [
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMPoint",
        "isStatic": true,
        "name": "fromPoint",
        "returnType": {
          "name": "DOMPoint"
        }
      },
      {
        "from": "DOMPoint",
        "isInherited": true,
        "name": "w",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPoint",
        "isInherited": true,
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPoint",
        "isInherited": true,
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPoint",
        "isInherited": true,
        "name": "z",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMPointReadOnly",
        "isStatic": true,
        "name": "fromPoint",
        "returnType": {
          "name": "DOMPointReadOnly"
        }
      },
      {
        "args": [
          {
            "name": "matrix",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "from": "DOMPointReadOnly",
        "name": "matrixTransform",
        "returnType": {
          "name": "DOMPoint"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "w",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "isReadOnly": true,
        "name": "z",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMPointReadOnly",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "DOMPoint",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "members": [
      {
        "defaultValue": "1",
        "from": "DOMPointInit",
        "name": "w",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMPointInit",
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMPointInit",
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMPointInit",
        "name": "z",
        "type": {
          "name": "unrestricted double"
        }
      }
    ],
    "name": "DOMPointInit",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "width",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "height",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "bottom",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMRectInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMRectReadOnly",
        "isStatic": true,
        "name": "fromRect",
        "returnType": {
          "name": "DOMRectReadOnly"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "height",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "left",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "right",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "top",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "width",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "DOMRectReadOnly",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "width",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "height",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "DOMRectReadOnly",
    "members": [
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMRectInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMRect",
        "isStatic": true,
        "name": "fromRect",
        "returnType": {
          "name": "DOMRect"
        }
      },
      {
        "from": "DOMRect",
        "isInherited": true,
        "name": "height",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRect",
        "isInherited": true,
        "name": "width",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRect",
        "isInherited": true,
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRect",
        "isInherited": true,
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "bottom",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMRectInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMRectReadOnly",
        "isStatic": true,
        "name": "fromRect",
        "returnType": {
          "name": "DOMRectReadOnly"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "height",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "left",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "right",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "top",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "width",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMRectReadOnly",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "DOMRect",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "members": [
      {
        "defaultValue": "0",
        "from": "DOMRectInit",
        "name": "height",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMRectInit",
        "name": "width",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMRectInit",
        "name": "x",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMRectInit",
        "name": "y",
        "type": {
          "name": "unrestricted double"
        }
      }
    ],
    "name": "DOMRectInit",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "p1",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          },
          {
            "name": "p2",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          },
          {
            "name": "p3",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          },
          {
            "name": "p4",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMQuadInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMQuad",
        "isStatic": true,
        "name": "fromQuad",
        "returnType": {
          "name": "DOMQuad"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMRectInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMQuad",
        "isStatic": true,
        "name": "fromRect",
        "returnType": {
          "name": "DOMQuad"
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMQuad",
        "name": "getBounds",
        "returnType": {
          "name": "DOMRect"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "DOMQuad",
        "isReadOnly": true,
        "name": "p1",
        "type": {
          "name": "DOMPoint"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "DOMQuad",
        "isReadOnly": true,
        "name": "p2",
        "type": {
          "name": "DOMPoint"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "DOMQuad",
        "isReadOnly": true,
        "name": "p3",
        "type": {
          "name": "DOMPoint"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "DOMQuad",
        "isReadOnly": true,
        "name": "p4",
        "type": {
          "name": "DOMPoint"
        }
      },
      {
        "from": "DOMQuad",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "DOMQuad",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "members": [
      {
        "from": "DOMQuadInit",
        "name": "p1",
        "type": {
          "name": "DOMPointInit"
        }
      },
      {
        "from": "DOMQuadInit",
        "name": "p2",
        "type": {
          "name": "DOMPointInit"
        }
      },
      {
        "from": "DOMQuadInit",
        "name": "p3",
        "type": {
          "name": "DOMPointInit"
        }
      },
      {
        "from": "DOMQuadInit",
        "name": "p4",
        "type": {
          "name": "DOMPointInit"
        }
      }
    ],
    "name": "DOMQuadInit",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "transformList",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "numberSequence",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "unrestricted double"
                }
              ]
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "a",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "b",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "c",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "d",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "e",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "f",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "flipX",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "flipY",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "name": "array32",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrixReadOnly",
        "isStatic": true,
        "name": "fromFloat32Array",
        "returnType": {
          "name": "DOMMatrixReadOnly"
        }
      },
      {
        "args": [
          {
            "name": "array64",
            "type": {
              "name": "Float64Array"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrixReadOnly",
        "isStatic": true,
        "name": "fromFloat64Array",
        "returnType": {
          "name": "DOMMatrixReadOnly"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrixReadOnly",
        "isStatic": true,
        "name": "fromMatrix",
        "returnType": {
          "name": "DOMMatrixReadOnly"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "inverse",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "is2D",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "isIdentity",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m11",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m12",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m13",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m14",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m21",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m22",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m23",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m24",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m31",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m32",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m33",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m34",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m41",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m42",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m43",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m44",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "multiply",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "rotX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "rotY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "rotZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "rotate",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "z",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "angle",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "rotateAxisAngle",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "rotateFromVector",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "1",
            "name": "scaleX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "scaleY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "1",
            "name": "scaleZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "scale",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "1",
            "name": "scale",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "scale3d",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "sx",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "skewX",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "sy",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "skewY",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "toFloat32Array",
        "returnType": {
          "name": "Float32Array"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "toFloat64Array",
        "returnType": {
          "name": "Float64Array"
        }
      },
      {
        "args": [
          {
            "name": "point",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "transformPoint",
        "returnType": {
          "name": "DOMPoint"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "tx",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "ty",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "tz",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "translate",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "mapPattern": [
          "attribute"
        ]
      },
      {
        "from": "DOMMatrixReadOnly"
      }
    ],
    "name": "DOMMatrixReadOnly",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "transformList",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "numberSequence",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "unrestricted double"
                }
              ]
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "DOMMatrixReadOnly",
    "members": [
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "a",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "b",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "c",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "d",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "e",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "f",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "array32",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrix",
        "isStatic": true,
        "name": "fromFloat32Array",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "name": "array64",
            "type": {
              "name": "Float64Array"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrix",
        "isStatic": true,
        "name": "fromFloat64Array",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrix",
        "isStatic": true,
        "name": "fromMatrix",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrix",
        "name": "invertSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m11",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m12",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m13",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m14",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m21",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m22",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m23",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m24",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m31",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m32",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m33",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m34",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m41",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m42",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m43",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrix",
        "isInherited": true,
        "name": "m44",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "multiplySelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "preMultiplySelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "z",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "angle",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "rotateAxisAngleSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "rotateFromVectorSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "rotX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "rotY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "rotZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "rotateSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "1",
            "name": "scale",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "scale3dSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "1",
            "name": "scaleX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "scaleY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "1",
            "name": "scaleZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "scaleSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "name": "transformList",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "setMatrixValue",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "sx",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "skewXSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "sy",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "skewYSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "tx",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "ty",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "tz",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrix",
        "name": "translateSelf",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "a",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "b",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "c",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "d",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "e",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "f",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "flipX",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "flipY",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "name": "array32",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrixReadOnly",
        "isStatic": true,
        "name": "fromFloat32Array",
        "returnType": {
          "name": "DOMMatrixReadOnly"
        }
      },
      {
        "args": [
          {
            "name": "array64",
            "type": {
              "name": "Float64Array"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrixReadOnly",
        "isStatic": true,
        "name": "fromFloat64Array",
        "returnType": {
          "name": "DOMMatrixReadOnly"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "DOMMatrixReadOnly",
        "isStatic": true,
        "name": "fromMatrix",
        "returnType": {
          "name": "DOMMatrixReadOnly"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "inverse",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "is2D",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "isIdentity",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m11",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m12",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m13",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m14",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m21",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m22",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m23",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m24",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m31",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m32",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m33",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m34",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m41",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m42",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m43",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "isReadOnly": true,
        "name": "m44",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "other",
            "optional": true,
            "type": {
              "name": "DOMMatrixInit"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "multiply",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "rotX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "rotY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "rotZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "rotate",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "z",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "angle",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "rotateAxisAngle",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "x",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "y",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "rotateFromVector",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "1",
            "name": "scaleX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "name": "scaleY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "1",
            "name": "scaleZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "scale",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "1",
            "name": "scale",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originX",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originY",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "originZ",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "scale3d",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "sx",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "skewX",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "sy",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "skewY",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "toFloat32Array",
        "returnType": {
          "name": "Float32Array"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "name": "toFloat64Array",
        "returnType": {
          "name": "Float64Array"
        }
      },
      {
        "args": [
          {
            "name": "point",
            "optional": true,
            "type": {
              "name": "DOMPointInit"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "transformPoint",
        "returnType": {
          "name": "DOMPoint"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "tx",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "ty",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          },
          {
            "defaultValue": "0",
            "name": "tz",
            "optional": true,
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "DOMMatrixReadOnly",
        "name": "translate",
        "returnType": {
          "name": "DOMMatrix"
        }
      },
      {
        "from": "DOMMatrixReadOnly",
        "mapPattern": [
          "attribute"
        ]
      },
      {
        "from": "DOMMatrixReadOnly"
      }
    ],
    "name": "DOMMatrix",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "members": [
      {
        "from": "DOMMatrixInit",
        "name": "a",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "b",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "c",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "d",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "e",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "f",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "is2D",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "m11",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "m12",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m13",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m14",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "m21",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "m22",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m23",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m24",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m31",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m32",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "1",
        "from": "DOMMatrixInit",
        "name": "m33",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m34",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "m41",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "DOMMatrixInit",
        "name": "m42",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "0",
        "from": "DOMMatrixInit",
        "name": "m43",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "defaultValue": "1",
        "from": "DOMMatrixInit",
        "name": "m44",
        "type": {
          "name": "unrestricted double"
        }
      }
    ],
    "name": "DOMMatrixInit",
    "url": "http://dev.w3.org/fxtf/geometry/"
  },
  {
    "name": "AutoKeyword",
    "url": "http://dev.w3.org/html5/webvtt/",
    "value": [
      "auto"
    ]
  },
  {
    "name": "DirectionSetting",
    "url": "http://dev.w3.org/html5/webvtt/",
    "value": [
      "",
      "rl",
      "lr"
    ]
  },
  {
    "name": "LineAlignSetting",
    "url": "http://dev.w3.org/html5/webvtt/",
    "value": [
      "start",
      "center",
      "end"
    ]
  },
  {
    "name": "PositionAlignSetting",
    "url": "http://dev.w3.org/html5/webvtt/",
    "value": [
      "line-left",
      "center",
      "line-right",
      "auto"
    ]
  },
  {
    "name": "AlignSetting",
    "url": "http://dev.w3.org/html5/webvtt/",
    "value": [
      "start",
      "center",
      "end",
      "left",
      "right"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "startTime",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "endTime",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "text",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "TextTrackCue",
    "members": [
      {
        "from": "VTTCue",
        "name": "align",
        "type": {
          "name": "AlignSetting"
        }
      },
      {
        "from": "VTTCue",
        "name": "getCueAsHTML",
        "returnType": {
          "name": "DocumentFragment"
        }
      },
      {
        "from": "VTTCue",
        "name": "line",
        "type": {
          "types": [
            {
              "name": "double"
            },
            {
              "name": "AutoKeyword"
            }
          ]
        }
      },
      {
        "from": "VTTCue",
        "name": "lineAlign",
        "type": {
          "name": "LineAlignSetting"
        }
      },
      {
        "from": "VTTCue",
        "name": "position",
        "type": {
          "types": [
            {
              "name": "double"
            },
            {
              "name": "AutoKeyword"
            }
          ]
        }
      },
      {
        "from": "VTTCue",
        "name": "positionAlign",
        "type": {
          "name": "PositionAlignSetting"
        }
      },
      {
        "from": "VTTCue",
        "name": "region",
        "type": {
          "name": "VTTRegion",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "VTTCue",
        "name": "size",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VTTCue",
        "name": "snapToLines",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "VTTCue",
        "name": "text",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "VTTCue",
        "name": "vertical",
        "type": {
          "name": "DirectionSetting"
        }
      }
    ],
    "name": "VTTCue",
    "url": "http://dev.w3.org/html5/webvtt/"
  },
  {
    "name": "ScrollSetting",
    "url": "http://dev.w3.org/html5/webvtt/",
    "value": [
      "",
      "up"
    ]
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "VTTRegion",
        "name": "lines",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "VTTRegion",
        "name": "regionAnchorX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VTTRegion",
        "name": "regionAnchorY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VTTRegion",
        "name": "scroll",
        "type": {
          "name": "ScrollSetting"
        }
      },
      {
        "from": "VTTRegion",
        "name": "viewportAnchorX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VTTRegion",
        "name": "viewportAnchorY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VTTRegion",
        "name": "width",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "VTTRegion",
    "url": "http://dev.w3.org/html5/webvtt/"
  },
  {
    "attrs": [
      {
        "name": "extended_attributes"
      }
    ],
    "members": [
    ],
    "name": "identifier",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "Paint",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "Paint",
    "members": [
      {
        "from": "SolidColor",
        "name": "blue",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "SolidColor",
        "name": "green",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "SolidColor",
        "name": "red",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "SolidColor",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "Paint",
    "members": [
      {
        "from": "Pattern",
        "name": "imageURL",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Pattern",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "GraphicalWindow",
        "name": "currentPaint",
        "type": {
          "name": "Paint"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "GraphicalWindow",
        "name": "drawRectangle",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "text",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "GraphicalWindow",
        "name": "drawText",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "GraphicalWindow",
        "isReadOnly": true,
        "name": "height",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "GraphicalWindow",
        "isReadOnly": true,
        "name": "width",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "GraphicalWindow",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "interface_identifier",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "namespace_identifier",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "dictionary_identifier",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "enumeration_identifier",
    "url": "http://heycam.github.io/webidl/",
    "value": [
      "enum",
      "values"
    ]
  },
  {
    "name": "callback_identifier",
    "returnType": {
      "name": "return_type"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "typedef_identifier",
    "type": {
      "name": "type"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "A",
    "members": [
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "SequenceOfLongs"
            }
          }
        ],
        "from": "B",
        "name": "f",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "B",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "A",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "SequenceOfLongs",
    "type": {
      "name": "sequence",
      "params": [
        {
          "name": "long"
        }
      ]
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "number",
    "type": {
      "name": "double"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "_interface",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "System",
        "name": "createObject",
        "returnType": {
          "name": "object"
        }
      },
      {
        "args": [
          {
            "name": "interface",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "System",
        "name": "getObjects",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "object"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "keyName",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "System",
        "returnType": {
          "name": "DOMString"
        },
        "specials": [
          "getter"
        ]
      }
    ],
    "name": "System",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "TextField",
        "name": "_const",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "TextField",
        "name": "_value",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "TextField",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Options",
        "name": "option1",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Options",
        "name": "option2",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Options",
        "name": "option3",
        "type": {
          "name": "long",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "Options",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "SomeInterface",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Animal",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Animal",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "Animal",
    "members": [
      {
        "from": "Human",
        "name": "pet",
        "type": {
          "name": "Dog",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Animal",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Human",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "Animal",
    "members": [
      {
        "from": "Dog",
        "name": "owner",
        "type": {
          "name": "Human",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Animal",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Dog",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "listener",
            "type": {
              "name": "EventListener"
            }
          }
        ],
        "from": "Node",
        "name": "addEventListener",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "newChild",
            "type": {
              "name": "Node"
            }
          }
        ],
        "from": "Node",
        "name": "appendChild",
        "returnType": {
          "name": "Node"
        }
      },
      {
        "from": "Node",
        "isReadOnly": true,
        "name": "nodeName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Node",
        "isReadOnly": true,
        "name": "parentNode",
        "type": {
          "name": "Node",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "Node",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "event",
            "type": {
              "name": "Event"
            }
          }
        ],
        "from": "EventListener",
        "name": "handleEvent",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "EventListener",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Util",
        "isConst": true,
        "name": "AVOGADRO",
        "type": {
          "name": "double"
        },
        "value": "6.022e23"
      },
      {
        "from": "Util",
        "isConst": true,
        "name": "BIT_MASK",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x0000fc00"
      },
      {
        "from": "Util",
        "isConst": true,
        "name": "DEBUG",
        "type": {
          "name": "boolean"
        },
        "value": "false"
      },
      {
        "from": "Util",
        "isConst": true,
        "name": "LF",
        "type": {
          "name": "octet"
        },
        "value": "10"
      }
    ],
    "name": "Util",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Ancestor",
        "isReadOnly": true,
        "name": "theIdentifier",
        "type": {
          "name": "TheType"
        }
      }
    ],
    "name": "Ancestor",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "Ancestor",
    "members": [
      {
        "from": "Derived",
        "isInherited": true,
        "name": "theIdentifier",
        "type": {
          "name": "TheType"
        }
      },
      {
        "from": "Ancestor",
        "isReadOnly": true,
        "name": "theIdentifier",
        "type": {
          "name": "TheType"
        }
      }
    ],
    "name": "Derived",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "Animal",
    "members": [
      {
        "from": "Person",
        "isInherited": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Animal",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Person",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Dimensions",
        "name": "height",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Dimensions",
        "name": "width",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "Dimensions",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Button",
        "name": "isMouseOver",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "size",
            "type": {
              "name": "Dimensions"
            }
          }
        ],
        "from": "Button",
        "name": "setDimensions",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "width",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Button",
        "name": "setDimensions",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "Button",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "IntegerSet",
        "isReadOnly": true,
        "name": "cardinality",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "isVariadic": true,
            "name": "ints",
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "IntegerSet",
        "name": "intersection",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "isVariadic": true,
            "name": "ints",
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "IntegerSet",
        "name": "union",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "IntegerSet",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "v1",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "v2",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "v3",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "alpha",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "ColorCreator",
        "name": "createColor",
        "returnType": {
          "name": "object"
        }
      }
    ],
    "name": "ColorCreator",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Dictionary",
        "isReadOnly": true,
        "name": "propertyCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "propertyName",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "Dictionary",
        "returnType": {
          "name": "double"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "args": [
          {
            "name": "propertyName",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "propertyValue",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "Dictionary",
        "returnType": {
          "name": "void"
        },
        "specials": [
          "setter"
        ]
      }
    ],
    "name": "Dictionary",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "NumberQuadrupler",
        "name": "compute",
        "returnType": {
          "name": "double"
        },
        "specials": [
          "legacycaller"
        ]
      }
    ],
    "name": "NumberQuadrupler",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "Student",
        "name": "id",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Student",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Student",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Transaction",
        "isReadOnly": true,
        "name": "amount",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Transaction",
        "isReadOnly": true,
        "name": "description",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Transaction",
        "isReadOnly": true,
        "name": "from",
        "type": {
          "name": "Account"
        }
      },
      {
        "from": "Transaction",
        "isReadOnly": true,
        "name": "number",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Transaction",
        "isReadOnly": true,
        "name": "to",
        "type": {
          "name": "Account"
        }
      },
      {
        "from": "Transaction"
      }
    ],
    "name": "Transaction",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Account",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Account",
        "name": "number",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "Account",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "OrderedMap",
        "name": "get",
        "returnType": {
          "name": "any"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "OrderedMap",
        "name": "getByIndex",
        "returnType": {
          "name": "any"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "OrderedMap",
        "name": "set",
        "returnType": {
          "name": "void"
        },
        "specials": [
          "setter"
        ]
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "OrderedMap",
        "name": "setByIndex",
        "returnType": {
          "name": "void"
        },
        "specials": [
          "setter"
        ]
      },
      {
        "from": "OrderedMap",
        "isReadOnly": true,
        "name": "size",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "OrderedMap",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "Point",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Circle",
        "name": "cx",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Circle",
        "name": "cy",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Circle",
        "name": "radius",
        "type": {
          "name": "double"
        }
      },
      {
        "args": [
          {
            "name": "c1",
            "type": {
              "name": "Circle"
            }
          },
          {
            "name": "c2",
            "type": {
              "name": "Circle"
            }
          },
          {
            "name": "c3",
            "type": {
              "name": "Circle"
            }
          }
        ],
        "from": "Circle",
        "isStatic": true,
        "name": "triangulate",
        "returnType": {
          "name": "Point"
        }
      },
      {
        "from": "Circle",
        "isReadOnly": true,
        "isStatic": true,
        "name": "triangulationCount",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "Circle",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "CBIface",
        "name": "attr1",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "CBIface",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Iface",
        "name": "attr2",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Iface",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Dict",
        "name": "field1",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Dict",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "username",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "SessionManager",
        "name": "getSessionForUser",
        "returnType": {
          "name": "Session"
        }
      },
      {
        "from": "SessionManager",
        "isReadOnly": true,
        "name": "sessionCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "SessionManager",
        "valueType": {
          "name": "Session"
        }
      }
    ],
    "name": "SessionManager",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Session",
        "isReadOnly": true,
        "name": "username",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Session",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "SomeNamespace",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "Vector"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "Vector"
            }
          }
        ],
        "from": "VectorUtils",
        "name": "crossProduct",
        "returnType": {
          "name": "Vector"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "Vector"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "Vector"
            }
          }
        ],
        "from": "VectorUtils",
        "name": "dotProduct",
        "returnType": {
          "name": "double"
        }
      }
    ],
    "name": "VectorUtils",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "Base",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "SomeDictionary",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "B",
    "members": [
      {
        "from": "C",
        "name": "e",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "C",
        "name": "f",
        "type": {
          "name": "long"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "SequenceOfLongs"
            }
          }
        ],
        "from": "B",
        "name": "f",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "C",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "a",
            "type": {
              "name": "A"
            }
          }
        ],
        "from": "Something",
        "name": "f",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "Something",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "defaultValue": "black",
        "from": "PaintOptions",
        "name": "fillPattern",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaintOptions",
        "name": "position",
        "type": {
          "name": "Point"
        }
      },
      {
        "defaultValue": "null",
        "from": "PaintOptions",
        "name": "strokePattern",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "PaintOptions",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "width",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "PaintOptions"
            }
          }
        ],
        "from": "GraphicsContext",
        "name": "drawRectangle",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "GraphicsContext",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "MealType",
    "url": "http://heycam.github.io/webidl/",
    "value": [
      "rice",
      "noodles",
      "other"
    ]
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "MealType"
            }
          },
          {
            "name": "size",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "Meal",
        "name": "initialize",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Meal",
        "name": "size",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Meal",
        "name": "type",
        "type": {
          "name": "MealType"
        }
      }
    ],
    "name": "Meal",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "args": [
      {
        "name": "status",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AsyncOperationCallback",
    "returnType": {
      "name": "void"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "whenFinished",
            "type": {
              "name": "AsyncOperationCallback"
            }
          }
        ],
        "from": "AsyncOperations",
        "name": "performOperation",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "AsyncOperations",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "Points",
    "type": {
      "name": "sequence",
      "params": [
        {
          "name": "Point"
        }
      ]
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "ps",
            "type": {
              "name": "Points"
            }
          }
        ],
        "from": "Widget",
        "name": "allPointsWithinBounds",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "p",
            "type": {
              "name": "Point"
            }
          }
        ],
        "from": "Widget",
        "name": "pointWithinBounds",
        "returnType": {
          "name": "boolean"
        }
      }
    ],
    "name": "Widget",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "implemented": "identifier_B",
    "implementer": "identifier_A",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "SomeFunctionality",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "Gizmo",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "MoreFunctionality",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "D",
        "name": "y",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "D",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "D",
    "members": [
      {
        "from": "D",
        "name": "y",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "E",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
    ],
    "name": "F",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "H",
        "name": "z",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "H",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "I",
        "name": "z",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "I",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Entry",
        "isReadOnly": true,
        "name": "entryType",
        "type": {
          "name": "unsigned short"
        }
      }
    ],
    "name": "Entry",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "listener",
            "type": {
              "name": "EventListener"
            }
          },
          {
            "name": "useCapture",
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "Observable",
        "name": "addEventListener",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "Observable",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "MyConstants",
        "isConst": true,
        "name": "ARE_WE_THERE_YET",
        "type": {
          "name": "boolean",
          "params": [
            "nullable"
          ]
        },
        "value": "false"
      }
    ],
    "name": "MyConstants",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "coordinates",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          }
        ],
        "from": "Canvas",
        "name": "drawPolygon",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Canvas",
        "name": "getLastDrawnPolygon",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      },
      {
        "from": "Canvas",
        "name": "getSupportedImageCodecs",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      }
    ],
    "name": "Canvas",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "NodeList",
        "name": "item",
        "returnType": {
          "name": "Node"
        }
      },
      {
        "from": "NodeList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "NodeList",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "Global",
        "value": "Worker"
      }
    ],
    "inheritsFrom": "WorkerGlobalScope",
    "members": [
    ],
    "name": "SharedWorkerGlobalScope",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "Global",
        "value": "Worker"
      }
    ],
    "inheritsFrom": "WorkerGlobalScope",
    "members": [
    ],
    "name": "DedicatedWorkerGlobalScope",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Worker"
      }
    ],
    "members": [
    ],
    "name": "WorkerNavigator",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "MathUtils",
        "name": "someComplicatedFunction",
        "returnType": {
          "name": "double"
        }
      }
    ],
    "name": "MathUtils",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Worker"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "WorkerUtils",
        "name": "setPriority",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "WorkerUtils",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "node",
            "type": {
              "name": "Node"
            }
          }
        ],
        "from": "NodeUtils",
        "name": "getAllText",
        "returnType": {
          "name": "DOMString"
        }
      }
    ],
    "name": "NodeUtils",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "LegacyArrayClass"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "ItemList",
        "name": "getItem",
        "returnType": {
          "name": "object"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "ItemList",
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "item",
            "type": {
              "name": "object"
            }
          }
        ],
        "from": "ItemList",
        "name": "setItem",
        "returnType": {
          "name": "object"
        },
        "specials": [
          "setter"
        ]
      }
    ],
    "name": "ItemList",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "LegacyArrayClass"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "ImmutableItemList",
        "name": "getItem",
        "returnType": {
          "name": "object"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "ImmutableItemList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "ImmutableItemList",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "LenientSetter"
          }
        ],
        "from": "Example",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Example",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Example",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "NamedConstructor",
        "value": "Audio"
      },
      {
        "args": [
          {
            "name": "src",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "name": "NamedConstructor",
        "opName": "Audio"
      }
    ],
    "inheritsFrom": "HTMLMediaElement",
    "members": [
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "HTMLMediaElement",
        "isReadOnly": true,
        "name": "mediaKeys",
        "type": {
          "name": "MediaKeys",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "HTMLMediaElement",
        "name": "onencrypted",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "HTMLMediaElement",
        "name": "onwaitingforkey",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "mediaKeys",
            "type": {
              "name": "MediaKeys",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "HTMLMediaElement",
        "name": "setMediaKeys",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "HTMLAudioElement",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "key",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "Storage",
        "name": "addEntry",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "Storage",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "key",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Query",
        "name": "lookupEntry",
        "returnType": {
          "name": "any"
        }
      }
    ],
    "name": "Query",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "StringMap",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "key",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "StringMap",
        "name": "lookup",
        "returnType": {
          "name": "DOMString"
        },
        "specials": [
          "getter"
        ]
      }
    ],
    "name": "StringMap",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "OverrideBuiltins"
      }
    ],
    "members": [
      {
        "from": "StringMap2",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "key",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "StringMap2",
        "name": "lookup",
        "returnType": {
          "name": "DOMString"
        },
        "specials": [
          "getter"
        ]
      }
    ],
    "name": "StringMap2",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Name",
        "name": "family",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Name",
        "name": "full",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Name",
        "name": "given",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Name",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Counter",
        "name": "increment",
        "returnType": {
          "name": "void"
        }
      },
      {
        "attrs": [
          {
            "name": "Replaceable"
          }
        ],
        "from": "Counter",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "Counter",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "PowerfulFeature",
        "name": "calculateNotSoSecretResult",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "Result"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "PowerfulFeature",
        "name": "calculateSecretResult",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "Result"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "PowerfulFeature",
        "isReadOnly": true,
        "name": "secretBoolean",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PowerfulFeature",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "args": [
      {
        "name": "details",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "OccurrenceHandler",
    "returnType": {
      "name": "void"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "args": [
      {
        "name": "details",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "attrs": [
      {
        "name": "TreatNonObjectAsNull"
      }
    ],
    "name": "ErrorHandler",
    "returnType": {
      "name": "void"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Manager",
        "name": "handler1",
        "type": {
          "name": "OccurrenceHandler",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Manager",
        "name": "handler2",
        "type": {
          "name": "ErrorHandler",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "Manager",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "Unforgeable"
          }
        ],
        "from": "A1",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "A1",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "A1",
    "members": [
      {
        "from": "B1",
        "name": "x",
        "returnType": {
          "name": "void"
        }
      },
      {
        "attrs": [
          {
            "name": "Unforgeable"
          }
        ],
        "from": "A1",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "B1",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "inheritsFrom": "A1",
    "members": [
      {
        "attrs": [
          {
            "name": "Unforgeable"
          }
        ],
        "from": "A1",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "B2",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Mixin",
        "name": "x",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "Mixin",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Thing",
        "name": "f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "attrs": [
          {
            "name": "Unscopable"
          }
        ],
        "from": "Thing",
        "returnType": {
          "name": "g"
        }
      }
    ],
    "name": "Thing",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
    ],
    "name": "Foo",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "callback",
            "type": {
              "name": "Function"
            }
          },
          {
            "name": "thisArg",
            "optional": true,
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "Iterable",
        "name": "forEach",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "Iterable",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "Dahut",
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Dahut",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "members": [
      {
        "from": "ExceptionThrower",
        "name": "valueOf",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "ExceptionThrower",
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "ArrayBufferView",
    "type": {
      "types": [
        {
          "name": "Int8Array"
        },
        {
          "name": "Int16Array"
        },
        {
          "name": "Int32Array"
        },
        {
          "name": "Uint8Array"
        },
        {
          "name": "Uint16Array"
        },
        {
          "name": "Uint32Array"
        },
        {
          "name": "Uint8ClampedArray"
        },
        {
          "name": "Float32Array"
        },
        {
          "name": "Float64Array"
        },
        {
          "name": "DataView"
        }
      ]
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "BufferSource",
    "type": {
      "types": [
        {
          "name": "ArrayBufferView"
        },
        {
          "name": "ArrayBuffer"
        }
      ]
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "DOMTimeStamp",
    "type": {
      "name": "unsigned long long"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "args": [
      {
        "isVariadic": true,
        "name": "arguments",
        "type": {
          "name": "any"
        }
      }
    ],
    "name": "Function",
    "returnType": {
      "name": "any"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "name": "VoidFunction",
    "returnType": {
      "name": "void"
    },
    "url": "http://heycam.github.io/webidl/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "ServiceWorker",
        "name": "onstatechange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "message",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "transfer",
            "optional": true,
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "object"
                }
              ]
            }
          }
        ],
        "from": "ServiceWorker",
        "name": "postMessage",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "ServiceWorker",
        "isReadOnly": true,
        "name": "scriptURL",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "ServiceWorker",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "ServiceWorkerState"
        }
      }
    ],
    "name": "ServiceWorker",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "name": "ServiceWorkerState",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/",
    "value": [
      "installing",
      "installed",
      "activating",
      "activated",
      "redundant"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "ServiceWorkerRegistration",
        "isReadOnly": true,
        "name": "active",
        "type": {
          "name": "ServiceWorker",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "ServiceWorkerRegistration",
        "isReadOnly": true,
        "name": "installing",
        "type": {
          "name": "ServiceWorker",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "ServiceWorkerRegistration",
        "name": "onupdatefound",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceWorkerRegistration",
        "isReadOnly": true,
        "name": "scope",
        "type": {
          "name": "USVString"
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "ServiceWorkerRegistration",
        "name": "unregister",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "ServiceWorkerRegistration",
        "name": "update",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "ServiceWorkerRegistration",
        "isReadOnly": true,
        "name": "waiting",
        "type": {
          "name": "ServiceWorker",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "ServiceWorkerRegistration",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      },
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "ServiceWorkerContainer",
        "isReadOnly": true,
        "name": "controller",
        "type": {
          "name": "ServiceWorker",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "defaultValue": "",
            "name": "clientURL",
            "optional": true,
            "type": {
              "name": "USVString"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "ServiceWorkerContainer",
        "name": "getRegistration",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "ServiceWorkerContainer",
        "name": "getRegistrations",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "ServiceWorkerRegistration"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "ServiceWorkerContainer",
        "name": "oncontrollerchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceWorkerContainer",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceWorkerContainer",
        "name": "onmessage",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "ServiceWorkerContainer",
        "isReadOnly": true,
        "name": "ready",
        "type": {
          "name": "Promise",
          "params": [
            {
              "name": "ServiceWorkerRegistration"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "scriptURL",
            "type": {
              "name": "USVString"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "RegistrationOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "ServiceWorkerContainer",
        "name": "register",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "ServiceWorkerRegistration"
            }
          ]
        }
      }
    ],
    "name": "ServiceWorkerContainer",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "members": [
      {
        "from": "RegistrationOptions",
        "name": "scope",
        "type": {
          "name": "USVString"
        }
      },
      {
        "defaultValue": "classic",
        "from": "RegistrationOptions",
        "name": "type",
        "type": {
          "name": "WorkerType"
        }
      }
    ],
    "name": "RegistrationOptions",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "ServiceWorkerMessageEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "ServiceWorkerMessageEvent",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "ServiceWorkerMessageEvent",
        "isReadOnly": true,
        "name": "lastEventId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ServiceWorkerMessageEvent",
        "isReadOnly": true,
        "name": "origin",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ServiceWorkerMessageEvent",
        "isReadOnly": true,
        "name": "ports",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "MessagePort"
            },
            [
              "nullable"
            ]
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "ServiceWorkerMessageEvent",
        "isReadOnly": true,
        "name": "source",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "ServiceWorker"
            },
            {
              "name": "MessagePort"
            }
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ServiceWorkerMessageEvent",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "ServiceWorkerMessageEventInit",
        "name": "data",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "ServiceWorkerMessageEventInit",
        "name": "lastEventId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ServiceWorkerMessageEventInit",
        "name": "origin",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ServiceWorkerMessageEventInit",
        "name": "ports",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "MessagePort"
            },
            [
              "nullable"
            ]
          ]
        }
      },
      {
        "from": "ServiceWorkerMessageEventInit",
        "name": "source",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "ServiceWorker"
            },
            {
              "name": "MessagePort"
            }
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ServiceWorkerMessageEventInit",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      },
      {
        "identifiers": [
          "Worker",
          "ServiceWorker"
        ],
        "name": "Global"
      }
    ],
    "inheritsFrom": "WorkerGlobalScope",
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "ServiceWorkerGlobalScope",
        "isReadOnly": true,
        "name": "clients",
        "type": {
          "name": "Clients"
        }
      },
      {
        "from": "ServiceWorkerGlobalScope",
        "name": "onactivate",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceWorkerGlobalScope",
        "name": "onfetch",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceWorkerGlobalScope",
        "name": "onforeignfetch",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceWorkerGlobalScope",
        "name": "oninstall",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceWorkerGlobalScope",
        "name": "onmessage",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "ServiceWorkerGlobalScope",
        "isReadOnly": true,
        "name": "registration",
        "type": {
          "name": "ServiceWorkerRegistration"
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "ServiceWorkerGlobalScope",
        "name": "skipWaiting",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "ServiceWorkerGlobalScope",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "members": [
      {
        "from": "Client",
        "isReadOnly": true,
        "name": "frameType",
        "type": {
          "name": "FrameType"
        }
      },
      {
        "from": "Client",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "message",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "transfer",
            "optional": true,
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "object"
                }
              ]
            }
          }
        ],
        "from": "Client",
        "name": "postMessage",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Client",
        "isReadOnly": true,
        "name": "url",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "Client",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "Client",
    "members": [
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "WindowClient",
        "name": "focus",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "WindowClient"
            }
          ]
        }
      },
      {
        "from": "WindowClient",
        "isReadOnly": true,
        "name": "focused",
        "type": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "url",
            "type": {
              "name": "USVString"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "WindowClient",
        "name": "navigate",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "WindowClient"
            }
          ]
        }
      },
      {
        "from": "WindowClient",
        "isReadOnly": true,
        "name": "visibilityState",
        "type": {
          "name": "VisibilityState"
        }
      },
      {
        "from": "Client",
        "isReadOnly": true,
        "name": "frameType",
        "type": {
          "name": "FrameType"
        }
      },
      {
        "from": "Client",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "message",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "transfer",
            "optional": true,
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "object"
                }
              ]
            }
          }
        ],
        "from": "Client",
        "name": "postMessage",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Client",
        "isReadOnly": true,
        "name": "url",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "WindowClient",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "name": "FrameType",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/",
    "value": [
      "auxiliary",
      "top-level",
      "nested",
      "none"
    ]
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "members": [
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Clients",
        "name": "claim",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "id",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Clients",
        "name": "get",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ClientQueryOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Clients",
        "name": "matchAll",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "Client"
                }
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "url",
            "type": {
              "name": "USVString"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Clients",
        "name": "openWindow",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "WindowClient",
              "params": [
                "nullable"
              ]
            }
          ]
        }
      }
    ],
    "name": "Clients",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "ClientQueryOptions",
        "name": "includeUncontrolled",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "window",
        "from": "ClientQueryOptions",
        "name": "type",
        "type": {
          "name": "ClientType"
        }
      }
    ],
    "name": "ClientQueryOptions",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "name": "ClientType",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/",
    "value": [
      "window",
      "worker",
      "sharedworker",
      "all"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "ExtendableEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ExtendableEvent",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ExtendableEventInit",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "ExtendableEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "args": [
          {
            "name": "options",
            "type": {
              "name": "ForeignFetchOptions"
            }
          }
        ],
        "from": "InstallEvent",
        "name": "registerForeignFetch",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "InstallEvent",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "members": [
      {
        "from": "ForeignFetchOptions",
        "isRequired": true,
        "name": "origins",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "USVString"
            }
          ]
        }
      },
      {
        "from": "ForeignFetchOptions",
        "isRequired": true,
        "name": "scopes",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "USVString"
            }
          ]
        }
      }
    ],
    "name": "ForeignFetchOptions",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "FetchEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "from": "FetchEvent",
        "isReadOnly": true,
        "name": "clientId",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "FetchEvent",
        "isReadOnly": true,
        "name": "isReload",
        "type": {
          "name": "boolean"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "FetchEvent",
        "isReadOnly": true,
        "name": "request",
        "type": {
          "name": "Request"
        }
      },
      {
        "args": [
          {
            "name": "r",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "Response"
                }
              ]
            }
          }
        ],
        "from": "FetchEvent",
        "name": "respondWith",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FetchEvent",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "inheritsFrom": "ExtendableEventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "FetchEventInit",
        "name": "clientId",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "FetchEventInit",
        "name": "isReload",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "FetchEventInit",
        "isRequired": true,
        "name": "request",
        "type": {
          "name": "Request"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FetchEventInit",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "ForeignFetchEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "from": "ForeignFetchEvent",
        "isReadOnly": true,
        "name": "origin",
        "type": {
          "name": "USVString"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "ForeignFetchEvent",
        "isReadOnly": true,
        "name": "request",
        "type": {
          "name": "Request"
        }
      },
      {
        "args": [
          {
            "name": "r",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "ForeignFetchResponse"
                }
              ]
            }
          }
        ],
        "from": "ForeignFetchEvent",
        "name": "respondWith",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ForeignFetchEvent",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "inheritsFrom": "ExtendableEventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "ForeignFetchEventInit",
        "name": "origin",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "ForeignFetchEventInit",
        "isRequired": true,
        "name": "request",
        "type": {
          "name": "Request"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ForeignFetchEventInit",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "members": [
      {
        "from": "ForeignFetchResponse",
        "name": "headers",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "ByteString"
            }
          ]
        }
      },
      {
        "from": "ForeignFetchResponse",
        "name": "origin",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "ForeignFetchResponse",
        "isRequired": true,
        "name": "response",
        "type": {
          "name": "Response"
        }
      }
    ],
    "name": "ForeignFetchResponse",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "ExtendableMessageEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "from": "ExtendableMessageEvent",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "ExtendableMessageEvent",
        "isReadOnly": true,
        "name": "lastEventId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ExtendableMessageEvent",
        "isReadOnly": true,
        "name": "origin",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ExtendableMessageEvent",
        "isReadOnly": true,
        "name": "ports",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "MessagePort"
            },
            [
              "nullable"
            ]
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "ExtendableMessageEvent",
        "isReadOnly": true,
        "name": "source",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "Client"
            },
            {
              "name": "ServiceWorker"
            },
            {
              "name": "MessagePort"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ExtendableMessageEvent",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "inheritsFrom": "ExtendableEventInit",
    "members": [
      {
        "from": "ExtendableMessageEventInit",
        "name": "data",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "ExtendableMessageEventInit",
        "name": "lastEventId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ExtendableMessageEventInit",
        "name": "origin",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "ExtendableMessageEventInit",
        "name": "ports",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "MessagePort"
            },
            [
              "nullable"
            ]
          ]
        }
      },
      {
        "from": "ExtendableMessageEventInit",
        "name": "source",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "Client"
            },
            {
              "name": "ServiceWorker"
            },
            {
              "name": "MessagePort"
            }
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ExtendableMessageEventInit",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "HTMLLinkElement",
        "name": "scope",
        "type": {
          "name": "USVString"
        }
      },
      {
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "HTMLLinkElement",
        "name": "workerType",
        "type": {
          "name": "WorkerType"
        }
      }
    ],
    "name": "HTMLLinkElement",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "request",
            "type": {
              "name": "RequestInfo"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Cache",
        "name": "add",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "requests",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "RequestInfo"
                }
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Cache",
        "name": "addAll",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "name": "RequestInfo"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "CacheQueryOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Cache",
        "name": "delete",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "request",
            "optional": true,
            "type": {
              "name": "RequestInfo"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "CacheQueryOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Cache",
        "name": "keys",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "Request"
                }
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "name": "RequestInfo"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "CacheQueryOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Cache",
        "name": "match",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "request",
            "optional": true,
            "type": {
              "name": "RequestInfo"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "CacheQueryOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Cache",
        "name": "matchAll",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "Response"
                }
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "name": "RequestInfo"
            }
          },
          {
            "name": "response",
            "type": {
              "name": "Response"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "Cache",
        "name": "put",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "Cache",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "members": [
      {
        "from": "CacheQueryOptions",
        "name": "cacheName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "CacheQueryOptions",
        "name": "ignoreMethod",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "CacheQueryOptions",
        "name": "ignoreSearch",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "CacheQueryOptions",
        "name": "ignoreVary",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "CacheQueryOptions",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "members": [
      {
        "from": "CacheBatchOperation",
        "name": "options",
        "type": {
          "name": "CacheQueryOptions"
        }
      },
      {
        "from": "CacheBatchOperation",
        "name": "request",
        "type": {
          "name": "Request"
        }
      },
      {
        "from": "CacheBatchOperation",
        "name": "response",
        "type": {
          "name": "Response"
        }
      },
      {
        "from": "CacheBatchOperation",
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "CacheBatchOperation",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      },
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "cacheName",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "CacheStorage",
        "name": "delete",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "cacheName",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "CacheStorage",
        "name": "has",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "CacheStorage",
        "name": "keys",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "DOMString"
                }
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "request",
            "type": {
              "name": "RequestInfo"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "CacheQueryOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "CacheStorage",
        "name": "match",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "cacheName",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "CacheStorage",
        "name": "open",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "Cache"
            }
          ]
        }
      }
    ],
    "name": "CacheStorage",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FunctionalEvent",
    "url": "http://mkruisselbrink.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "args": [
          {
            "name": "handle",
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "VRDisplay",
        "name": "cancelAnimationFrame",
        "returnType": {
          "name": "void"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "VRDisplay",
        "isReadOnly": true,
        "name": "capabilities",
        "type": {
          "name": "VRDisplayCapabilities"
        }
      },
      {
        "from": "VRDisplay",
        "name": "depthFar",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VRDisplay",
        "name": "depthNear",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VRDisplay",
        "isReadOnly": true,
        "name": "displayId",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "VRDisplay",
        "isReadOnly": true,
        "name": "displayName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "VRDisplay",
        "name": "exitPresent",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "whichEye",
            "type": {
              "name": "VREye"
            }
          }
        ],
        "from": "VRDisplay",
        "name": "getEyeParameters",
        "returnType": {
          "name": "VREyeParameters"
        }
      },
      {
        "args": [
          {
            "name": "frameData",
            "type": {
              "name": "VRFrameData"
            }
          }
        ],
        "from": "VRDisplay",
        "name": "getFrameData",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "from": "VRDisplay",
        "name": "getLayers",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "VRLayer"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "NewObject"
          }
        ],
        "from": "VRDisplay",
        "name": "getPose",
        "returnType": {
          "name": "VRPose"
        }
      },
      {
        "from": "VRDisplay",
        "isReadOnly": true,
        "name": "isConnected",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "VRDisplay",
        "isReadOnly": true,
        "name": "isPresenting",
        "type": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "callback",
            "type": {
              "name": "FrameRequestCallback"
            }
          }
        ],
        "from": "VRDisplay",
        "name": "requestAnimationFrame",
        "returnType": {
          "name": "long"
        }
      },
      {
        "args": [
          {
            "name": "layers",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "VRLayerInit"
                }
              ]
            }
          }
        ],
        "from": "VRDisplay",
        "name": "requestPresent",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "VRDisplay",
        "name": "resetPose",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "VRDisplay",
        "isReadOnly": true,
        "name": "stageParameters",
        "type": {
          "name": "VRStageParameters",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "VRDisplay",
        "name": "submitFrame",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "VRDisplay",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "name": "VRSource",
    "type": {
      "types": [
        {
          "name": "HTMLCanvasElement"
        },
        {
          "name": "OffscreenCanvas"
        }
      ]
    },
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "layer",
            "optional": true,
            "type": {
              "name": "VRLayerInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "VRLayer",
        "isReadOnly": true,
        "name": "leftBounds",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "float"
            }
          ]
        }
      },
      {
        "from": "VRLayer",
        "isReadOnly": true,
        "name": "rightBounds",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "float"
            }
          ]
        }
      },
      {
        "from": "VRLayer",
        "isReadOnly": true,
        "name": "source",
        "type": {
          "name": "VRSource",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "VRLayer",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "members": [
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "VRLayerInit",
        "name": "leftBounds",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "float"
            }
          ]
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "VRLayerInit",
        "name": "rightBounds",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "float"
            }
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "VRLayerInit",
        "name": "source",
        "type": {
          "name": "VRSource",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "VRLayerInit",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "members": [
      {
        "from": "VRDisplayCapabilities",
        "isReadOnly": true,
        "name": "canPresent",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "VRDisplayCapabilities",
        "isReadOnly": true,
        "name": "hasExternalDisplay",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "VRDisplayCapabilities",
        "isReadOnly": true,
        "name": "hasOrientation",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "VRDisplayCapabilities",
        "isReadOnly": true,
        "name": "hasPosition",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "VRDisplayCapabilities",
        "isReadOnly": true,
        "name": "maxLayers",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "VRDisplayCapabilities",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "name": "VREye",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html",
    "value": [
      "left",
      "right"
    ]
  },
  {
    "members": [
      {
        "from": "VRFieldOfView",
        "isReadOnly": true,
        "name": "downDegrees",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VRFieldOfView",
        "isReadOnly": true,
        "name": "leftDegrees",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VRFieldOfView",
        "isReadOnly": true,
        "name": "rightDegrees",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "VRFieldOfView",
        "isReadOnly": true,
        "name": "upDegrees",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "VRFieldOfView",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "members": [
      {
        "from": "VRPose",
        "isReadOnly": true,
        "name": "angularAcceleration",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "VRPose",
        "isReadOnly": true,
        "name": "angularVelocity",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "VRPose",
        "isReadOnly": true,
        "name": "linearAcceleration",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "VRPose",
        "isReadOnly": true,
        "name": "linearVelocity",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "VRPose",
        "isReadOnly": true,
        "name": "orientation",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "VRPose",
        "isReadOnly": true,
        "name": "position",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "VRPose",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "VRFrameData",
        "isReadOnly": true,
        "name": "leftProjectionMatrix",
        "type": {
          "name": "Float32Array"
        }
      },
      {
        "from": "VRFrameData",
        "isReadOnly": true,
        "name": "leftViewMatrix",
        "type": {
          "name": "Float32Array"
        }
      },
      {
        "from": "VRFrameData",
        "isReadOnly": true,
        "name": "pose",
        "type": {
          "name": "VRPose"
        }
      },
      {
        "from": "VRFrameData",
        "isReadOnly": true,
        "name": "rightProjectionMatrix",
        "type": {
          "name": "Float32Array"
        }
      },
      {
        "from": "VRFrameData",
        "isReadOnly": true,
        "name": "rightViewMatrix",
        "type": {
          "name": "Float32Array"
        }
      },
      {
        "from": "VRFrameData",
        "isReadOnly": true,
        "name": "timestamp",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      }
    ],
    "name": "VRFrameData",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "VREyeParameters",
        "isReadOnly": true,
        "name": "fieldOfView",
        "type": {
          "name": "VRFieldOfView"
        }
      },
      {
        "from": "VREyeParameters",
        "isReadOnly": true,
        "name": "offset",
        "type": {
          "name": "Float32Array"
        }
      },
      {
        "from": "VREyeParameters",
        "isReadOnly": true,
        "name": "renderHeight",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "VREyeParameters",
        "isReadOnly": true,
        "name": "renderWidth",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "VREyeParameters",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "members": [
      {
        "from": "VRStageParameters",
        "isReadOnly": true,
        "name": "sittingToStandingTransform",
        "type": {
          "name": "Float32Array"
        }
      },
      {
        "from": "VRStageParameters",
        "isReadOnly": true,
        "name": "sizeX",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "VRStageParameters",
        "isReadOnly": true,
        "name": "sizeZ",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "VRStageParameters",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "name": "VRDisplayEventReason",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html",
    "value": [
      "mounted",
      "navigation",
      "requested",
      "unmounted"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "VRDisplayEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "VRDisplayEvent",
        "isReadOnly": true,
        "name": "display",
        "type": {
          "name": "VRDisplay"
        }
      },
      {
        "from": "VRDisplayEvent",
        "isReadOnly": true,
        "name": "reason",
        "type": {
          "name": "VRDisplayEventReason",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "VRDisplayEvent",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "VRDisplayEventInit",
        "isRequired": true,
        "name": "display",
        "type": {
          "name": "VRDisplay"
        }
      },
      {
        "from": "VRDisplayEventInit",
        "name": "reason",
        "type": {
          "name": "VRDisplayEventReason"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "VRDisplayEventInit",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "HTMLIFrameElement",
        "name": "allowvr",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "HTMLIFrameElement",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "Gamepad",
        "isReadOnly": true,
        "name": "displayId",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "Gamepad",
    "url": "http://mozvr.github.io/webvr-spec/webvr.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "DeviceOrientationEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "DeviceOrientationEvent",
        "isReadOnly": true,
        "name": "absolute",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "DeviceOrientationEvent",
        "isReadOnly": true,
        "name": "alpha",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceOrientationEvent",
        "isReadOnly": true,
        "name": "beta",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceOrientationEvent",
        "isReadOnly": true,
        "name": "gamma",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "DeviceOrientationEvent",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "false",
        "from": "DeviceOrientationEventInit",
        "name": "absolute",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceOrientationEventInit",
        "name": "alpha",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceOrientationEventInit",
        "name": "beta",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceOrientationEventInit",
        "name": "gamma",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "DeviceOrientationEventInit",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "DeviceAcceleration",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceAcceleration",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceAcceleration",
        "isReadOnly": true,
        "name": "z",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "DeviceAcceleration",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "DeviceRotationRate",
        "isReadOnly": true,
        "name": "alpha",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceRotationRate",
        "isReadOnly": true,
        "name": "beta",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceRotationRate",
        "isReadOnly": true,
        "name": "gamma",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "DeviceRotationRate",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "DeviceMotionEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "DeviceMotionEvent",
        "isReadOnly": true,
        "name": "acceleration",
        "type": {
          "name": "DeviceAcceleration",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceMotionEvent",
        "isReadOnly": true,
        "name": "accelerationIncludingGravity",
        "type": {
          "name": "DeviceAcceleration",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceMotionEvent",
        "isReadOnly": true,
        "name": "interval",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceMotionEvent",
        "isReadOnly": true,
        "name": "rotationRate",
        "type": {
          "name": "DeviceRotationRate",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "DeviceMotionEvent",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "members": [
      {
        "defaultValue": "null",
        "from": "DeviceAccelerationInit",
        "name": "x",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceAccelerationInit",
        "name": "y",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceAccelerationInit",
        "name": "z",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "DeviceAccelerationInit",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "members": [
      {
        "defaultValue": "null",
        "from": "DeviceRotationRateInit",
        "name": "alpha",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceRotationRateInit",
        "name": "beta",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceRotationRateInit",
        "name": "gamma",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "DeviceRotationRateInit",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "DeviceMotionEventInit",
        "name": "acceleration",
        "type": {
          "name": "DeviceAccelerationInit",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceMotionEventInit",
        "name": "accelerationIncludingGravity",
        "type": {
          "name": "DeviceAccelerationInit",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "null",
        "from": "DeviceMotionEventInit",
        "name": "interval",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DeviceMotionEventInit",
        "name": "rotationRate",
        "type": {
          "name": "DeviceRotationRateInit",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "DeviceMotionEventInit",
    "url": "http://w3c.github.io/deviceorientation/spec-source-orientation.html"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "range",
            "type": {
              "name": "Range"
            }
          }
        ],
        "from": "Selection",
        "name": "addRange",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Selection",
        "isReadOnly": true,
        "name": "anchorNode",
        "type": {
          "name": "Node",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Selection",
        "isReadOnly": true,
        "name": "anchorOffset",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "node",
            "type": {
              "name": "Node",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "defaultValue": "0",
            "name": "offset",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Selection",
        "name": "collapse",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Selection",
        "name": "collapseToEnd",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Selection",
        "name": "collapseToStart",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "node",
            "type": {
              "name": "Node"
            }
          },
          {
            "defaultValue": "false",
            "name": "allowPartialContainment",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "Selection",
        "name": "containsNode",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "Selection",
        "name": "deleteFromDocument",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Selection",
        "name": "empty",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "node",
            "type": {
              "name": "Node"
            }
          },
          {
            "defaultValue": "0",
            "name": "offset",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Selection",
        "name": "extend",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Selection",
        "isReadOnly": true,
        "name": "focusNode",
        "type": {
          "name": "Node",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Selection",
        "isReadOnly": true,
        "name": "focusOffset",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Selection",
        "name": "getRangeAt",
        "returnType": {
          "name": "Range"
        }
      },
      {
        "from": "Selection",
        "isReadOnly": true,
        "name": "isCollapsed",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "Selection",
        "isReadOnly": true,
        "name": "rangeCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Selection",
        "name": "removeAllRanges",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "range",
            "type": {
              "name": "Range"
            }
          }
        ],
        "from": "Selection",
        "name": "removeRange",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "node",
            "type": {
              "name": "Node"
            }
          }
        ],
        "from": "Selection",
        "name": "selectAllChildren",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "anchorNode",
            "type": {
              "name": "Node"
            }
          },
          {
            "name": "anchorOffset",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "focusNode",
            "type": {
              "name": "Node"
            }
          },
          {
            "name": "focusOffset",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Selection",
        "name": "setBaseAndExtent",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "node",
            "type": {
              "name": "Node",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "defaultValue": "0",
            "name": "offset",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Selection",
        "name": "setPosition",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Selection",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Selection",
        "returnType": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Selection",
    "url": "http://w3c.github.io/selection-api/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "constructor",
            "type": {
              "name": "Function"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ElementDefinitionOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "CEReactions"
          }
        ],
        "from": "CustomElementRegistry",
        "name": "define",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CustomElementRegistry",
        "name": "get",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "CustomElementRegistry",
        "name": "whenDefined",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "CustomElementRegistry",
    "url": "http://w3c.github.io/webcomponents/spec/custom/"
  },
  {
    "members": [
      {
        "from": "ElementDefinitionOptions",
        "name": "extends",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "ElementDefinitionOptions",
    "url": "http://w3c.github.io/webcomponents/spec/custom/"
  },
  {
    "members": [
      {
        "from": "MIDIInputMap",
        "isReadOnly": true,
        "keyType": {
          "name": "DOMString"
        },
        "valueType": {
          "name": "MIDIInput"
        }
      }
    ],
    "name": "MIDIInputMap",
    "url": "http://webaudio.github.io/web-midi-api/"
  },
  {
    "members": [
      {
        "from": "MIDIOutputMap",
        "isReadOnly": true,
        "keyType": {
          "name": "DOMString"
        },
        "valueType": {
          "name": "MIDIOutput"
        }
      }
    ],
    "name": "MIDIOutputMap",
    "url": "http://webaudio.github.io/web-midi-api/"
  },
  {
    "name": "MIDIPortDeviceState",
    "url": "http://webaudio.github.io/web-midi-api/",
    "value": [
      "disconnected",
      "connected"
    ]
  },
  {
    "name": "MIDIPortConnectionState",
    "url": "http://webaudio.github.io/web-midi-api/",
    "value": [
      "open",
      "closed",
      "pending"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      },
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "NavigatorBudget",
        "isReadOnly": true,
        "name": "budget",
        "type": {
          "name": "BudgetService"
        }
      }
    ],
    "name": "NavigatorBudget",
    "url": "https://beverloo.github.io/budget-api/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "BudgetService",
        "name": "getBudget",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BudgetState"
                }
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "operation",
            "type": {
              "name": "OperationType"
            }
          }
        ],
        "from": "BudgetService",
        "name": "getCost",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "operation",
            "type": {
              "name": "OperationType"
            }
          }
        ],
        "from": "BudgetService",
        "name": "reserve",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      }
    ],
    "name": "BudgetService",
    "url": "https://beverloo.github.io/budget-api/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "BudgetState",
        "isReadOnly": true,
        "name": "budgetAt",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "BudgetState",
        "isReadOnly": true,
        "name": "time",
        "type": {
          "name": "DOMTimeStamp"
        }
      }
    ],
    "name": "BudgetState",
    "url": "https://beverloo.github.io/budget-api/"
  },
  {
    "name": "OperationType",
    "url": "https://beverloo.github.io/budget-api/",
    "value": [
      "silent-push"
    ]
  },
  {
    "name": "AddressSpace",
    "url": "https://mikewest.github.io/cors-rfc1918/",
    "value": [
      "local",
      "private",
      "public"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "isPartial": true,
    "members": [
      {
        "args": [
          {
            "name": "permission",
            "type": {
              "types": [
                {
                  "name": "PermissionDescriptor"
                },
                {
                  "name": "sequence",
                  "params": [
                    {
                      "name": "PermissionDescriptor"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "from": "Permissions",
        "name": "delegate",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "permission",
            "type": {
              "name": "PermissionDescriptor"
            }
          }
        ],
        "from": "Permissions",
        "name": "isDelegated",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "permission",
            "type": {
              "types": [
                {
                  "name": "PermissionDescriptor"
                },
                {
                  "name": "sequence",
                  "params": [
                    {
                      "name": "PermissionDescriptor"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "from": "Permissions",
        "name": "undelegate",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "Permissions",
    "url": "https://noncombatant.github.io/permission-delegation-api/"
  },
  {
    "members": [
      {
        "from": "PermissionDescriptor",
        "name": "embedee",
        "type": {
          "name": "HTMLIFrameElement"
        }
      },
      {
        "from": "PermissionDescriptor",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "PermissionName"
        }
      }
    ],
    "name": "PermissionDescriptor",
    "url": "https://noncombatant.github.io/permission-delegation-api/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          },
          {
            "name": "SecureContext"
          }
        ],
        "from": "WindowOrWorkerGlobalScope",
        "isReadOnly": true,
        "name": "caches",
        "type": {
          "name": "CacheStorage"
        }
      }
    ],
    "name": "WindowOrWorkerGlobalScope",
    "url": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "blobParts",
            "optional": true,
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "BlobPart"
                }
              ]
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "BlobPropertyBag"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "Blob",
        "name": "close",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Blob",
        "isReadOnly": true,
        "name": "isClosed",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "Blob",
        "isReadOnly": true,
        "name": "size",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "args": [
          {
            "attrs": [
              {
                "name": "Clamp"
              }
            ],
            "name": "start",
            "optional": true,
            "type": {
              "name": "long long"
            }
          },
          {
            "attrs": [
              {
                "name": "Clamp"
              }
            ],
            "name": "end",
            "optional": true,
            "type": {
              "name": "long long"
            }
          },
          {
            "name": "contentType",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "Blob",
        "name": "slice",
        "returnType": {
          "name": "Blob"
        }
      },
      {
        "from": "Blob",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Blob",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "members": [
      {
        "defaultValue": "",
        "from": "BlobPropertyBag",
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "BlobPropertyBag",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "name": "BlobPart",
    "type": {
      "types": [
        {
          "name": "BufferSource"
        },
        {
          "name": "Blob"
        },
        {
          "name": "USVString"
        }
      ]
    },
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "fileBits",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "BlobPart"
                }
              ]
            }
          },
          {
            "attrs": [
              {
                "name": "EnsureUTF16"
              }
            ],
            "name": "fileName",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "FilePropertyBag"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "Blob",
    "members": [
      {
        "from": "File",
        "isReadOnly": true,
        "name": "lastModified",
        "type": {
          "name": "long long"
        }
      },
      {
        "from": "File",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Blob",
        "name": "close",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Blob",
        "isReadOnly": true,
        "name": "isClosed",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "Blob",
        "isReadOnly": true,
        "name": "size",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "args": [
          {
            "attrs": [
              {
                "name": "Clamp"
              }
            ],
            "name": "start",
            "optional": true,
            "type": {
              "name": "long long"
            }
          },
          {
            "attrs": [
              {
                "name": "Clamp"
              }
            ],
            "name": "end",
            "optional": true,
            "type": {
              "name": "long long"
            }
          },
          {
            "name": "contentType",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "Blob",
        "name": "slice",
        "returnType": {
          "name": "Blob"
        }
      },
      {
        "from": "Blob",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "File",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "inheritsFrom": "BlobPropertyBag",
    "members": [
      {
        "from": "FilePropertyBag",
        "name": "lastModified",
        "type": {
          "name": "long long"
        }
      },
      {
        "defaultValue": "",
        "from": "BlobPropertyBag",
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "FilePropertyBag",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "FileList",
        "name": "item",
        "returnType": {
          "name": "File",
          "params": [
            "nullable"
          ]
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "FileList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "FileList",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "FileReader",
        "isConst": true,
        "name": "DONE",
        "type": {
          "name": "unsigned short"
        },
        "value": "2"
      },
      {
        "from": "FileReader",
        "isConst": true,
        "name": "EMPTY",
        "type": {
          "name": "unsigned short"
        },
        "value": "0"
      },
      {
        "from": "FileReader",
        "isConst": true,
        "name": "LOADING",
        "type": {
          "name": "unsigned short"
        },
        "value": "1"
      },
      {
        "from": "FileReader",
        "name": "abort",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "FileReader",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "DOMError",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "FileReader",
        "name": "onabort",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FileReader",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FileReader",
        "name": "onload",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FileReader",
        "name": "onloadend",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FileReader",
        "name": "onloadstart",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "FileReader",
        "name": "onprogress",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "FileReader",
        "name": "readAsArrayBuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "FileReader",
        "name": "readAsBinaryString",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "FileReader",
        "name": "readAsDataURL",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          },
          {
            "name": "label",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "FileReader",
        "name": "readAsText",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "FileReader",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "FileReader",
        "isReadOnly": true,
        "name": "result",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "DOMString"
            },
            {
              "name": "ArrayBuffer"
            }
          ]
        }
      }
    ],
    "name": "FileReader",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Worker"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "FileReaderSync",
        "name": "readAsArrayBuffer",
        "returnType": {
          "name": "ArrayBuffer"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "FileReaderSync",
        "name": "readAsBinaryString",
        "returnType": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "FileReaderSync",
        "name": "readAsDataURL",
        "returnType": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          },
          {
            "name": "label",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "FileReaderSync",
        "name": "readAsText",
        "returnType": {
          "name": "DOMString"
        }
      }
    ],
    "name": "FileReaderSync",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "DedicatedWorker",
          "SharedWorker"
        ],
        "name": "Exposed"
      }
    ],
    "isPartial": true,
    "members": [
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "URL",
        "isStatic": true,
        "name": "createFor",
        "returnType": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "blob",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "URL",
        "isStatic": true,
        "name": "createObjectURL",
        "returnType": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "url",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "URL",
        "isStatic": true,
        "name": "revokeObjectURL",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "URL",
    "url": "https://w3c.github.io/FileAPI/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "DOMException",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "IDBRequest",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBRequest",
        "name": "onsuccess",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "IDBRequestReadyState"
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "result",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "source",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "IDBObjectStore"
            },
            {
              "name": "IDBIndex"
            },
            {
              "name": "IDBCursor"
            }
          ]
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "transaction",
        "type": {
          "name": "IDBTransaction",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "IDBRequest",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "name": "IDBRequestReadyState",
    "url": "https://w3c.github.io/IndexedDB/",
    "value": [
      "pending",
      "done"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "IDBRequest",
    "members": [
      {
        "from": "IDBOpenDBRequest",
        "name": "onblocked",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBOpenDBRequest",
        "name": "onupgradeneeded",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "DOMException",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "IDBRequest",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBRequest",
        "name": "onsuccess",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "IDBRequestReadyState"
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "result",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "source",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "IDBObjectStore"
            },
            {
              "name": "IDBIndex"
            },
            {
              "name": "IDBCursor"
            }
          ]
        }
      },
      {
        "from": "IDBRequest",
        "isReadOnly": true,
        "name": "transaction",
        "type": {
          "name": "IDBTransaction",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "IDBOpenDBRequest",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "IDBVersionChangeEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "IDBVersionChangeEvent",
        "isReadOnly": true,
        "name": "newVersion",
        "type": {
          "name": "unsigned long long",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "IDBVersionChangeEvent",
        "isReadOnly": true,
        "name": "oldVersion",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "IDBVersionChangeEvent",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "IDBVersionChangeEventInit",
        "name": "newVersion",
        "type": {
          "name": "unsigned long long",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "0",
        "from": "IDBVersionChangeEventInit",
        "name": "oldVersion",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "IDBVersionChangeEventInit",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "first",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "second",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBFactory",
        "name": "cmp",
        "returnType": {
          "name": "short"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "IDBFactory",
        "name": "deleteDatabase",
        "returnType": {
          "name": "IDBOpenDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "version",
            "optional": true,
            "type": {
              "name": "unsigned long long"
            }
          }
        ],
        "from": "IDBFactory",
        "name": "open",
        "returnType": {
          "name": "IDBOpenDBRequest"
        }
      }
    ],
    "name": "IDBFactory",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "IDBDatabase",
        "name": "close",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "IDBObjectStoreParameters"
            }
          }
        ],
        "from": "IDBDatabase",
        "name": "createObjectStore",
        "returnType": {
          "name": "IDBObjectStore"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "IDBDatabase",
        "name": "deleteObjectStore",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "IDBDatabase",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "IDBDatabase",
        "isReadOnly": true,
        "name": "objectStoreNames",
        "type": {
          "name": "DOMStringList"
        }
      },
      {
        "from": "IDBDatabase",
        "name": "onabort",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBDatabase",
        "name": "onclose",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBDatabase",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBDatabase",
        "name": "onversionchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "storeNames",
            "type": {
              "types": [
                {
                  "name": "DOMString"
                },
                {
                  "name": "sequence",
                  "params": [
                    {
                      "name": "DOMString"
                    }
                  ]
                }
              ]
            }
          },
          {
            "defaultValue": "readonly",
            "name": "mode",
            "optional": true,
            "type": {
              "name": "IDBTransactionMode"
            }
          }
        ],
        "from": "IDBDatabase",
        "name": "transaction",
        "returnType": {
          "name": "IDBTransaction"
        }
      },
      {
        "from": "IDBDatabase",
        "isReadOnly": true,
        "name": "version",
        "type": {
          "name": "unsigned long long"
        }
      }
    ],
    "name": "IDBDatabase",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "IDBObjectStoreParameters",
        "name": "autoIncrement",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "null",
        "from": "IDBObjectStoreParameters",
        "name": "keyPath",
        "type": {
          "params": [
            "nullable"
          ],
          "types": [
            {
              "name": "DOMString"
            },
            {
              "name": "sequence",
              "params": [
                {
                  "name": "DOMString"
                }
              ]
            }
          ]
        }
      }
    ],
    "name": "IDBObjectStoreParameters",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "key",
            "optional": true,
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "add",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "from": "IDBObjectStore",
        "isReadOnly": true,
        "name": "autoIncrement",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "IDBObjectStore",
        "name": "clear",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "count",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "keyPath",
            "type": {
              "types": [
                {
                  "name": "DOMString"
                },
                {
                  "name": "sequence",
                  "params": [
                    {
                      "name": "DOMString"
                    }
                  ]
                }
              ]
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "IDBIndexParameters"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "createIndex",
        "returnType": {
          "name": "IDBIndex"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "delete",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "indexName",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "deleteIndex",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "get",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "count",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "getAll",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "count",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "getAllKeys",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "getKey",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "index",
        "returnType": {
          "name": "IDBIndex"
        }
      },
      {
        "from": "IDBObjectStore",
        "isReadOnly": true,
        "name": "indexNames",
        "type": {
          "name": "DOMStringList"
        }
      },
      {
        "from": "IDBObjectStore",
        "isReadOnly": true,
        "name": "keyPath",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBObjectStore",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "defaultValue": "next",
            "name": "direction",
            "optional": true,
            "type": {
              "name": "IDBCursorDirection"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "openCursor",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "defaultValue": "next",
            "name": "direction",
            "optional": true,
            "type": {
              "name": "IDBCursorDirection"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "openKeyCursor",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "key",
            "optional": true,
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBObjectStore",
        "name": "put",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "from": "IDBObjectStore",
        "isReadOnly": true,
        "name": "transaction",
        "type": {
          "name": "IDBTransaction"
        }
      }
    ],
    "name": "IDBObjectStore",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "IDBIndexParameters",
        "name": "multiEntry",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "IDBIndexParameters",
        "name": "unique",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "IDBIndexParameters",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBIndex",
        "name": "count",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBIndex",
        "name": "get",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "count",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "IDBIndex",
        "name": "getAll",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "count",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "IDBIndex",
        "name": "getAllKeys",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBIndex",
        "name": "getKey",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "from": "IDBIndex",
        "isReadOnly": true,
        "name": "keyPath",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBIndex",
        "isReadOnly": true,
        "name": "multiEntry",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "IDBIndex",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "IDBIndex",
        "isReadOnly": true,
        "name": "objectStore",
        "type": {
          "name": "IDBObjectStore"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "defaultValue": "next",
            "name": "direction",
            "optional": true,
            "type": {
              "name": "IDBCursorDirection"
            }
          }
        ],
        "from": "IDBIndex",
        "name": "openCursor",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "args": [
          {
            "name": "query",
            "optional": true,
            "type": {
              "name": "any"
            }
          },
          {
            "defaultValue": "next",
            "name": "direction",
            "optional": true,
            "type": {
              "name": "IDBCursorDirection"
            }
          }
        ],
        "from": "IDBIndex",
        "name": "openKeyCursor",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "from": "IDBIndex",
        "isReadOnly": true,
        "name": "unique",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "IDBIndex",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "lower",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "upper",
            "type": {
              "name": "any"
            }
          },
          {
            "defaultValue": "false",
            "name": "lowerOpen",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          },
          {
            "defaultValue": "false",
            "name": "upperOpen",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "IDBKeyRange",
        "isStatic": true,
        "name": "bound",
        "returnType": {
          "name": "IDBKeyRange"
        }
      },
      {
        "args": [
          {
            "name": "key",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBKeyRange",
        "name": "includes",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "from": "IDBKeyRange",
        "isReadOnly": true,
        "name": "lower",
        "type": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "lower",
            "type": {
              "name": "any"
            }
          },
          {
            "defaultValue": "false",
            "name": "open",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "IDBKeyRange",
        "isStatic": true,
        "name": "lowerBound",
        "returnType": {
          "name": "IDBKeyRange"
        }
      },
      {
        "from": "IDBKeyRange",
        "isReadOnly": true,
        "name": "lowerOpen",
        "type": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBKeyRange",
        "isStatic": true,
        "name": "only",
        "returnType": {
          "name": "IDBKeyRange"
        }
      },
      {
        "from": "IDBKeyRange",
        "isReadOnly": true,
        "name": "upper",
        "type": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "upper",
            "type": {
              "name": "any"
            }
          },
          {
            "defaultValue": "false",
            "name": "open",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "IDBKeyRange",
        "isStatic": true,
        "name": "upperBound",
        "returnType": {
          "name": "IDBKeyRange"
        }
      },
      {
        "from": "IDBKeyRange",
        "isReadOnly": true,
        "name": "upperOpen",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "IDBKeyRange",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "count",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "advance",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "key",
            "optional": true,
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "continue",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "key",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "primaryKey",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "continuePrimaryKey",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "IDBCursor",
        "name": "delete",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "direction",
        "type": {
          "name": "IDBCursorDirection"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "key",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "primaryKey",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "source",
        "type": {
          "types": [
            {
              "name": "IDBObjectStore"
            },
            {
              "name": "IDBIndex"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "update",
        "returnType": {
          "name": "IDBRequest"
        }
      }
    ],
    "name": "IDBCursor",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "name": "IDBCursorDirection",
    "url": "https://w3c.github.io/IndexedDB/",
    "value": [
      "next",
      "nextunique",
      "prev",
      "prevunique"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "IDBCursor",
    "members": [
      {
        "from": "IDBCursorWithValue",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "count",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "advance",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "key",
            "optional": true,
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "continue",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "key",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "primaryKey",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "continuePrimaryKey",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "IDBCursor",
        "name": "delete",
        "returnType": {
          "name": "IDBRequest"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "direction",
        "type": {
          "name": "IDBCursorDirection"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "key",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "primaryKey",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "IDBCursor",
        "isReadOnly": true,
        "name": "source",
        "type": {
          "types": [
            {
              "name": "IDBObjectStore"
            },
            {
              "name": "IDBIndex"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "IDBCursor",
        "name": "update",
        "returnType": {
          "name": "IDBRequest"
        }
      }
    ],
    "name": "IDBCursorWithValue",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "IDBTransaction",
        "name": "abort",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "IDBTransaction",
        "isReadOnly": true,
        "name": "db",
        "type": {
          "name": "IDBDatabase"
        }
      },
      {
        "from": "IDBTransaction",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "DOMException"
        }
      },
      {
        "from": "IDBTransaction",
        "isReadOnly": true,
        "name": "mode",
        "type": {
          "name": "IDBTransactionMode"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "IDBTransaction",
        "name": "objectStore",
        "returnType": {
          "name": "IDBObjectStore"
        }
      },
      {
        "from": "IDBTransaction",
        "isReadOnly": true,
        "name": "objectStoreNames",
        "type": {
          "name": "DOMStringList"
        }
      },
      {
        "from": "IDBTransaction",
        "name": "onabort",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBTransaction",
        "name": "oncomplete",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "IDBTransaction",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "IDBTransaction",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "name": "IDBTransactionMode",
    "url": "https://w3c.github.io/IndexedDB/",
    "value": [
      "readonly",
      "readwrite",
      "versionchange"
    ]
  },
  {
    "members": [
      {
        "from": "DOMStringList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "DOMStringList",
        "returnType": {
          "name": "DOMString"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "args": [
          {
            "name": "str",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "DOMStringList",
        "name": "contains",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "DOMStringList",
        "name": "item",
        "returnType": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "DOMStringList",
    "url": "https://w3c.github.io/IndexedDB/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "sensorOptions",
            "optional": true,
            "type": {
              "name": "SensorOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Sensor",
    "members": [
      {
        "from": "Sensor",
        "name": "onactivate",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "isReadOnly": true,
        "name": "reading",
        "type": {
          "name": "SensorReading",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Sensor",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Sensor",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "SensorState"
        }
      },
      {
        "from": "Sensor",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "AmbientLightSensor",
    "url": "https://w3c.github.io/ambient-light/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "ambientLightSensorReadingInit",
            "type": {
              "name": "AmbientLightSensorReadingInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "SensorReading",
    "members": [
      {
        "from": "AmbientLightSensorReading",
        "isReadOnly": true,
        "name": "illuminance",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "SensorReading",
        "isReadOnly": true,
        "name": "timeStamp",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      }
    ],
    "name": "AmbientLightSensorReading",
    "url": "https://w3c.github.io/ambient-light/"
  },
  {
    "members": [
      {
        "from": "AmbientLightSensorReadingInit",
        "isRequired": true,
        "name": "illuminance",
        "type": {
          "name": "unrestricted double"
        }
      }
    ],
    "name": "AmbientLightSensorReadingInit",
    "url": "https://w3c.github.io/ambient-light/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "methodData",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "PaymentMethodData"
                }
              ]
            }
          },
          {
            "name": "details",
            "type": {
              "name": "PaymentDetails"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "PaymentOptions"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "PaymentRequest",
        "name": "abort",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "PaymentRequest",
        "name": "onshippingaddresschange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PaymentRequest",
        "name": "onshippingoptionchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PaymentRequest",
        "isReadOnly": true,
        "name": "shippingAddress",
        "type": {
          "name": "PaymentAddress",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentRequest",
        "isReadOnly": true,
        "name": "shippingOption",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentRequest",
        "isReadOnly": true,
        "name": "shippingType",
        "type": {
          "name": "PaymentShippingType",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentRequest",
        "name": "show",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PaymentResponse"
            }
          ]
        }
      }
    ],
    "name": "PaymentRequest",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "members": [
      {
        "from": "PaymentMethodData",
        "name": "data",
        "type": {
          "name": "object"
        }
      },
      {
        "from": "PaymentMethodData",
        "isRequired": true,
        "name": "supportedMethods",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      }
    ],
    "name": "PaymentMethodData",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "members": [
      {
        "from": "PaymentCurrencyAmount",
        "isRequired": true,
        "name": "currency",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "urn:iso:std:iso:4217",
        "from": "PaymentCurrencyAmount",
        "name": "currencySystem",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentCurrencyAmount",
        "isRequired": true,
        "name": "value",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "PaymentCurrencyAmount",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "members": [
      {
        "from": "PaymentDetails",
        "name": "displayItems",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "PaymentItem"
            }
          ]
        }
      },
      {
        "from": "PaymentDetails",
        "name": "error",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentDetails",
        "name": "modifiers",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "PaymentDetailsModifier"
            }
          ]
        }
      },
      {
        "from": "PaymentDetails",
        "name": "shippingOptions",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "PaymentShippingOption"
            }
          ]
        }
      },
      {
        "from": "PaymentDetails",
        "name": "total",
        "type": {
          "name": "PaymentItem"
        }
      }
    ],
    "name": "PaymentDetails",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "members": [
      {
        "from": "PaymentDetailsModifier",
        "name": "additionalDisplayItems",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "PaymentItem"
            }
          ]
        }
      },
      {
        "from": "PaymentDetailsModifier",
        "name": "data",
        "type": {
          "name": "object"
        }
      },
      {
        "from": "PaymentDetailsModifier",
        "isRequired": true,
        "name": "supportedMethods",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      },
      {
        "from": "PaymentDetailsModifier",
        "name": "total",
        "type": {
          "name": "PaymentItem"
        }
      }
    ],
    "name": "PaymentDetailsModifier",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "name": "PaymentShippingType",
    "url": "https://w3c.github.io/browser-payment-api/",
    "value": [
      "shipping",
      "delivery",
      "pickup"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "PaymentOptions",
        "name": "requestPayerEmail",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "PaymentOptions",
        "name": "requestPayerName",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "PaymentOptions",
        "name": "requestPayerPhone",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "PaymentOptions",
        "name": "requestShipping",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "shipping",
        "from": "PaymentOptions",
        "name": "shippingType",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "PaymentOptions",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "members": [
      {
        "from": "PaymentItem",
        "isRequired": true,
        "name": "amount",
        "type": {
          "name": "PaymentCurrencyAmount"
        }
      },
      {
        "from": "PaymentItem",
        "isRequired": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "PaymentItem",
        "name": "pending",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PaymentItem",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "addressLine",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "city",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "country",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "dependentLocality",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "languageCode",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "organization",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "phone",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "postalCode",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "recipient",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "region",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "isReadOnly": true,
        "name": "sortingCode",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentAddress",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PaymentAddress",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "members": [
      {
        "from": "PaymentShippingOption",
        "isRequired": true,
        "name": "amount",
        "type": {
          "name": "PaymentCurrencyAmount"
        }
      },
      {
        "from": "PaymentShippingOption",
        "isRequired": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentShippingOption",
        "isRequired": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "PaymentShippingOption",
        "name": "selected",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PaymentShippingOption",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "name": "PaymentComplete",
    "url": "https://w3c.github.io/browser-payment-api/",
    "value": [
      "success",
      "fail",
      ""
    ]
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "args": [
          {
            "defaultValue": "",
            "name": "result",
            "optional": true,
            "type": {
              "name": "PaymentComplete"
            }
          }
        ],
        "from": "PaymentResponse",
        "name": "complete",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "PaymentResponse",
        "isReadOnly": true,
        "name": "details",
        "type": {
          "name": "object"
        }
      },
      {
        "from": "PaymentResponse",
        "isReadOnly": true,
        "name": "methodName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PaymentResponse",
        "isReadOnly": true,
        "name": "payerEmail",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentResponse",
        "isReadOnly": true,
        "name": "payerName",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentResponse",
        "isReadOnly": true,
        "name": "payerPhone",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentResponse",
        "isReadOnly": true,
        "name": "shippingAddress",
        "type": {
          "name": "PaymentAddress",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentResponse",
        "isReadOnly": true,
        "name": "shippingOption",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PaymentResponse",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PaymentResponse",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "PaymentRequestUpdateEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "args": [
          {
            "name": "d",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "PaymentDetails"
                }
              ]
            }
          }
        ],
        "from": "PaymentRequestUpdateEvent",
        "name": "updateWith",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PaymentRequestUpdateEvent",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PaymentRequestUpdateEventInit",
    "url": "https://w3c.github.io/browser-payment-api/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "ClipboardEventInit",
        "name": "clipboardData",
        "type": {
          "name": "DataTransfer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ClipboardEventInit",
    "url": "https://w3c.github.io/clipboard-apis/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "ClipboardEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "ClipboardEvent",
        "isReadOnly": true,
        "name": "clipboardData",
        "type": {
          "name": "DataTransfer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ClipboardEvent",
    "url": "https://w3c.github.io/clipboard-apis/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "typeArg",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "inputEventInitDict",
            "optional": true,
            "type": {
              "name": "InputEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "isPartial": true,
    "members": [
      {
        "from": "InputEvent",
        "isReadOnly": true,
        "name": "dataTransfer",
        "type": {
          "name": "DataTransfer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "InputEvent",
        "name": "getTargetRanges",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "StaticRange"
            }
          ]
        }
      },
      {
        "from": "InputEvent",
        "isReadOnly": true,
        "name": "inputType",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "InputEvent",
    "url": "https://w3c.github.io/editing/input-events.html"
  },
  {
    "members": [
      {
        "from": "StaticRange",
        "name": "endContainer",
        "type": {
          "name": "Node"
        }
      },
      {
        "from": "StaticRange",
        "name": "endOffset",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "StaticRange",
        "name": "startContainer",
        "type": {
          "name": "Node"
        }
      },
      {
        "from": "StaticRange",
        "name": "startOffset",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "StaticRange",
    "url": "https://w3c.github.io/editing/input-events.html"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "name": "MediaKeysRequirement",
    "url": "https://w3c.github.io/encrypted-media/",
    "value": [
      "required",
      "optional",
      "not-allowed"
    ]
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "MediaKeySystemConfiguration",
        "name": "audioCapabilities",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "MediaKeySystemMediaCapability"
            }
          ]
        }
      },
      {
        "defaultValue": "optional",
        "from": "MediaKeySystemConfiguration",
        "name": "distinctiveIdentifier",
        "type": {
          "name": "MediaKeysRequirement"
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "MediaKeySystemConfiguration",
        "name": "initDataTypes",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      },
      {
        "defaultValue": "",
        "from": "MediaKeySystemConfiguration",
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "optional",
        "from": "MediaKeySystemConfiguration",
        "name": "persistentState",
        "type": {
          "name": "MediaKeysRequirement"
        }
      },
      {
        "from": "MediaKeySystemConfiguration",
        "name": "sessionTypes",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "MediaKeySystemConfiguration",
        "name": "videoCapabilities",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "MediaKeySystemMediaCapability"
            }
          ]
        }
      }
    ],
    "name": "MediaKeySystemConfiguration",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "defaultValue": "",
        "from": "MediaKeySystemMediaCapability",
        "name": "contentType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "",
        "from": "MediaKeySystemMediaCapability",
        "name": "robustness",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "MediaKeySystemMediaCapability",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "from": "MediaKeySystemAccess",
        "name": "createMediaKeys",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "MediaKeys"
            }
          ]
        }
      },
      {
        "from": "MediaKeySystemAccess",
        "name": "getConfiguration",
        "returnType": {
          "name": "MediaKeySystemConfiguration"
        }
      },
      {
        "from": "MediaKeySystemAccess",
        "isReadOnly": true,
        "name": "keySystem",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "MediaKeySystemAccess",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "name": "MediaKeySessionType",
    "url": "https://w3c.github.io/encrypted-media/",
    "value": [
      "temporary",
      "persistent-license"
    ]
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "args": [
          {
            "defaultValue": "temporary",
            "name": "sessionType",
            "optional": true,
            "type": {
              "name": "MediaKeySessionType"
            }
          }
        ],
        "from": "MediaKeys",
        "name": "createSession",
        "returnType": {
          "name": "MediaKeySession"
        }
      },
      {
        "args": [
          {
            "name": "serverCertificate",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "MediaKeys",
        "name": "setServerCertificate",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      }
    ],
    "name": "MediaKeys",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "MediaKeySession",
        "name": "close",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaKeySession",
        "isReadOnly": true,
        "name": "closed",
        "type": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaKeySession",
        "isReadOnly": true,
        "name": "expiration",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "initDataType",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "initData",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "MediaKeySession",
        "name": "generateRequest",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaKeySession",
        "isReadOnly": true,
        "name": "keyStatuses",
        "type": {
          "name": "MediaKeyStatusMap"
        }
      },
      {
        "args": [
          {
            "name": "sessionId",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "MediaKeySession",
        "name": "load",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "from": "MediaKeySession",
        "name": "onkeystatuseschange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaKeySession",
        "name": "onmessage",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaKeySession",
        "name": "remove",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaKeySession",
        "isReadOnly": true,
        "name": "sessionId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "args": [
          {
            "name": "response",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "MediaKeySession",
        "name": "update",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "MediaKeySession",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "from": "MediaKeyStatusMap",
        "isReadOnly": true,
        "name": "size",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "MediaKeyStatusMap",
        "keyType": {
          "name": "BufferSource"
        },
        "valueType": {
          "name": "MediaKeyStatus"
        }
      },
      {
        "args": [
          {
            "name": "keyId",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "MediaKeyStatusMap",
        "name": "get",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "keyId",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "MediaKeyStatusMap",
        "name": "has",
        "returnType": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaKeyStatusMap",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "name": "MediaKeyStatus",
    "url": "https://w3c.github.io/encrypted-media/",
    "value": [
      "usable",
      "expired",
      "released",
      "output-restricted",
      "output-downscaled",
      "status-pending",
      "internal-error"
    ]
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "name": "MediaKeyMessageType",
    "url": "https://w3c.github.io/encrypted-media/",
    "value": [
      "license-request",
      "license-renewal",
      "license-release",
      "individualization-request"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "MediaKeyMessageEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "MediaKeyMessageEvent",
        "isReadOnly": true,
        "name": "message",
        "type": {
          "name": "ArrayBuffer"
        }
      },
      {
        "from": "MediaKeyMessageEvent",
        "isReadOnly": true,
        "name": "messageType",
        "type": {
          "name": "MediaKeyMessageType"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaKeyMessageEvent",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "MediaKeyMessageEventInit",
        "isRequired": true,
        "name": "message",
        "type": {
          "name": "ArrayBuffer"
        }
      },
      {
        "from": "MediaKeyMessageEventInit",
        "isRequired": true,
        "name": "messageType",
        "type": {
          "name": "MediaKeyMessageType"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaKeyMessageEventInit",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "HTMLMediaElement",
        "isReadOnly": true,
        "name": "mediaKeys",
        "type": {
          "name": "MediaKeys",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "HTMLMediaElement",
        "name": "onencrypted",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "HTMLMediaElement",
        "name": "onwaitingforkey",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "mediaKeys",
            "type": {
              "name": "MediaKeys",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "HTMLMediaElement",
        "name": "setMediaKeys",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "HTMLMediaElement",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "MediaEncryptedEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "MediaEncryptedEvent",
        "isReadOnly": true,
        "name": "initData",
        "type": {
          "name": "ArrayBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaEncryptedEvent",
        "isReadOnly": true,
        "name": "initDataType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaEncryptedEvent",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "MediaEncryptedEventInit",
        "name": "initData",
        "type": {
          "name": "ArrayBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "",
        "from": "MediaEncryptedEventInit",
        "name": "initDataType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaEncryptedEventInit",
    "url": "https://w3c.github.io/encrypted-media/"
  },
  {
    "inheritsFrom": "PerformanceEntry",
    "members": [
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "duration",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "entryType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "startTime",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PerformanceFrameTiming",
    "url": "https://w3c.github.io/frame-timing/"
  },
  {
    "members": [
      {
        "from": "GamepadButton",
        "isReadOnly": true,
        "name": "pressed",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "GamepadButton",
        "isReadOnly": true,
        "name": "touched",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "GamepadButton",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "GamepadButton",
    "url": "https://w3c.github.io/gamepad/"
  },
  {
    "name": "GamepadMappingType",
    "url": "https://w3c.github.io/gamepad/",
    "value": [
      "_",
      "standard"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "eventInitDict",
            "type": {
              "name": "GamepadEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "GamepadEvent",
        "isReadOnly": true,
        "name": "gamepad",
        "type": {
          "name": "Gamepad"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "GamepadEvent",
    "url": "https://w3c.github.io/gamepad/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "GamepadEventInit",
        "isRequired": true,
        "name": "gamepad",
        "type": {
          "name": "Gamepad"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "GamepadEventInit",
    "url": "https://w3c.github.io/gamepad/"
  },
  {
    "name": "GamepadHand",
    "url": "https://w3c.github.io/gamepad/extensions.html",
    "value": [
      "",
      "left",
      "right"
    ]
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "GamepadHapticActuator",
        "name": "pulse",
        "returnType": {
          "name": "Promise"
        }
      },
      {
        "from": "GamepadHapticActuator",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "GamepadHapticActuatorType"
        }
      }
    ],
    "name": "GamepadHapticActuator",
    "url": "https://w3c.github.io/gamepad/extensions.html"
  },
  {
    "name": "GamepadHapticActuatorType",
    "url": "https://w3c.github.io/gamepad/extensions.html",
    "value": [
      "vibration"
    ]
  },
  {
    "members": [
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "angularAcceleration",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "angularVelocity",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "hasOrientation",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "hasPosition",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "linearAcceleration",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "linearVelocity",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "orientation",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "GamepadPose",
        "isReadOnly": true,
        "name": "position",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "GamepadPose",
    "url": "https://w3c.github.io/gamepad/extensions.html"
  },
  {
    "name": "DOMHighResTimeStamp",
    "type": {
      "name": "double"
    },
    "url": "https://w3c.github.io/hr-time/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "Performance",
        "name": "now",
        "returnType": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "Performance",
        "isReadOnly": true,
        "name": "timeOrigin",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "Performance",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "Performance",
    "url": "https://w3c.github.io/hr-time/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      },
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "attrs": [
          {
            "name": "Replaceable"
          }
        ],
        "from": "GlobalPerformance",
        "isReadOnly": true,
        "name": "performance",
        "type": {
          "name": "Performance"
        }
      }
    ],
    "name": "GlobalPerformance",
    "url": "https://w3c.github.io/hr-time/"
  },
  {
    "name": "ReadyState",
    "url": "https://w3c.github.io/media-source/",
    "value": [
      "closed",
      "open",
      "ended"
    ]
  },
  {
    "name": "EndOfStreamError",
    "url": "https://w3c.github.io/media-source/",
    "value": [
      "network",
      "decode"
    ]
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "MediaSource",
        "isReadOnly": true,
        "name": "activeSourceBuffers",
        "type": {
          "name": "SourceBufferList"
        }
      },
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "MediaSource",
        "name": "addSourceBuffer",
        "returnType": {
          "name": "SourceBuffer"
        }
      },
      {
        "from": "MediaSource",
        "name": "clearLiveSeekableRange",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaSource",
        "name": "duration",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "args": [
          {
            "name": "error",
            "optional": true,
            "type": {
              "name": "EndOfStreamError"
            }
          }
        ],
        "from": "MediaSource",
        "name": "endOfStream",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "MediaSource",
        "isStatic": true,
        "name": "isTypeSupported",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaSource",
        "name": "onsourceclose",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSource",
        "name": "onsourceended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSource",
        "name": "onsourceopen",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSource",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "ReadyState"
        }
      },
      {
        "args": [
          {
            "name": "sourceBuffer",
            "type": {
              "name": "SourceBuffer"
            }
          }
        ],
        "from": "MediaSource",
        "name": "removeSourceBuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "start",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "end",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "MediaSource",
        "name": "setLiveSeekableRange",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaSource",
        "isReadOnly": true,
        "name": "sourceBuffers",
        "type": {
          "name": "SourceBufferList"
        }
      }
    ],
    "name": "MediaSource",
    "url": "https://w3c.github.io/media-source/"
  },
  {
    "name": "AppendMode",
    "url": "https://w3c.github.io/media-source/",
    "value": [
      "segments",
      "sequence"
    ]
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "SourceBuffer",
        "name": "abort",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "SourceBuffer",
        "name": "appendBuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "appendWindowEnd",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "appendWindowStart",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "SourceBuffer",
        "isReadOnly": true,
        "name": "audioTracks",
        "type": {
          "name": "AudioTrackList"
        }
      },
      {
        "from": "SourceBuffer",
        "isReadOnly": true,
        "name": "buffered",
        "type": {
          "name": "TimeRanges"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "mode",
        "type": {
          "name": "AppendMode"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "onabort",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "onupdate",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "onupdateend",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "onupdatestart",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "start",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "end",
            "type": {
              "name": "unrestricted double"
            }
          }
        ],
        "from": "SourceBuffer",
        "name": "remove",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "SourceBuffer",
        "isReadOnly": true,
        "name": "textTracks",
        "type": {
          "name": "TextTrackList"
        }
      },
      {
        "from": "SourceBuffer",
        "name": "timestampOffset",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "SourceBuffer",
        "isReadOnly": true,
        "name": "updating",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "SourceBuffer",
        "isReadOnly": true,
        "name": "videoTracks",
        "type": {
          "name": "VideoTrackList"
        }
      }
    ],
    "name": "SourceBuffer",
    "url": "https://w3c.github.io/media-source/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "SourceBufferList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "SourceBufferList",
        "name": "onaddsourcebuffer",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "SourceBufferList",
        "name": "onremovesourcebuffer",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "SourceBufferList",
        "returnType": {
          "name": "SourceBuffer"
        },
        "specials": [
          "getter"
        ]
      }
    ],
    "name": "SourceBufferList",
    "url": "https://w3c.github.io/media-source/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "AudioTrack",
        "isReadOnly": true,
        "name": "sourceBuffer",
        "type": {
          "name": "SourceBuffer",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "AudioTrack",
    "url": "https://w3c.github.io/media-source/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "VideoTrack",
        "isReadOnly": true,
        "name": "sourceBuffer",
        "type": {
          "name": "SourceBuffer",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "VideoTrack",
    "url": "https://w3c.github.io/media-source/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "TextTrack",
        "isReadOnly": true,
        "name": "sourceBuffer",
        "type": {
          "name": "SourceBuffer",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "TextTrack",
    "url": "https://w3c.github.io/media-source/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "args": [
          {
            "name": "frameRate",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "HTMLCanvasElement",
        "name": "captureStream",
        "returnType": {
          "name": "MediaStream"
        }
      }
    ],
    "name": "HTMLCanvasElement",
    "url": "https://w3c.github.io/mediacapture-fromelement/"
  },
  {
    "inheritsFrom": "MediaStreamTrack",
    "members": [
      {
        "from": "CanvasCaptureMediaStreamTrack",
        "isReadOnly": true,
        "name": "canvas",
        "type": {
          "name": "HTMLCanvasElement"
        }
      },
      {
        "from": "CanvasCaptureMediaStreamTrack",
        "name": "requestFrame",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "MediaTrackConstraints"
            }
          }
        ],
        "from": "MediaStreamTrack",
        "name": "applyConstraints",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "clone",
        "returnType": {
          "name": "MediaStreamTrack"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "enabled",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getCapabilities",
        "returnType": {
          "name": "MediaTrackCapabilities"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getConstraints",
        "returnType": {
          "name": "MediaTrackConstraints"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getSettings",
        "returnType": {
          "name": "MediaTrackSettings"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "kind",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "muted",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onoverconstrained",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onunmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "MediaStreamTrackState"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "CanvasCaptureMediaStreamTrack",
    "url": "https://w3c.github.io/mediacapture-fromelement/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "track",
            "type": {
              "name": "MediaStreamTrack"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "ImageCapture",
        "name": "getPhotoCapabilities",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PhotoCapabilities"
            }
          ]
        }
      },
      {
        "from": "ImageCapture",
        "name": "grabFrame",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "ImageBitmap"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "photoSettings",
            "type": {
              "name": "PhotoSettings",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "ImageCapture",
        "name": "setOptions",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "ImageCapture",
        "name": "takePhoto",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "Blob"
            }
          ]
        }
      },
      {
        "from": "ImageCapture",
        "isReadOnly": true,
        "name": "videoStreamTrack",
        "type": {
          "name": "MediaStreamTrack"
        }
      }
    ],
    "name": "ImageCapture",
    "url": "https://w3c.github.io/mediacapture-image/index.html"
  },
  {
    "members": [
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "brightness",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "colorTemperature",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "contrast",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "exposureCompensation",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "exposureMode",
        "type": {
          "name": "MeteringMode"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "fillLightMode",
        "type": {
          "name": "FillLightMode"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "focusMode",
        "type": {
          "name": "MeteringMode"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "imageHeight",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "imageWidth",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "iso",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "redEyeReduction",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "saturation",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "sharpness",
        "type": {
          "name": "MediaSettingsRange"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "whiteBalanceMode",
        "type": {
          "name": "MeteringMode"
        }
      },
      {
        "from": "PhotoCapabilities",
        "isReadOnly": true,
        "name": "zoom",
        "type": {
          "name": "MediaSettingsRange"
        }
      }
    ],
    "name": "PhotoCapabilities",
    "url": "https://w3c.github.io/mediacapture-image/index.html"
  },
  {
    "members": [
      {
        "from": "PhotoSettings",
        "name": "brightness",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "colorTemperature",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "contrast",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "exposureCompensation",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "exposureMode",
        "type": {
          "name": "MeteringMode"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "fillLightMode",
        "type": {
          "name": "FillLightMode"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "focusMode",
        "type": {
          "name": "MeteringMode"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "imageHeight",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "imageWidth",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "iso",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "pointsOfInterest",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "Point2D"
            }
          ]
        }
      },
      {
        "from": "PhotoSettings",
        "name": "redEyeReduction",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "saturation",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "sharpness",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "whiteBalanceMode",
        "type": {
          "name": "MeteringMode"
        }
      },
      {
        "from": "PhotoSettings",
        "name": "zoom",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "PhotoSettings",
    "url": "https://w3c.github.io/mediacapture-image/index.html"
  },
  {
    "members": [
      {
        "from": "MediaSettingsRange",
        "isReadOnly": true,
        "name": "current",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MediaSettingsRange",
        "isReadOnly": true,
        "name": "max",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MediaSettingsRange",
        "isReadOnly": true,
        "name": "min",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MediaSettingsRange",
        "isReadOnly": true,
        "name": "step",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "MediaSettingsRange",
    "url": "https://w3c.github.io/mediacapture-image/index.html"
  },
  {
    "name": "FillLightMode",
    "url": "https://w3c.github.io/mediacapture-image/index.html",
    "value": [
      "unavailable",
      "auto",
      "off",
      "flash",
      "torch"
    ]
  },
  {
    "name": "MeteringMode",
    "url": "https://w3c.github.io/mediacapture-image/index.html",
    "value": [
      "none",
      "manual",
      "single-shot",
      "continuous"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "0",
        "from": "Point2D",
        "name": "x",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "Point2D",
        "name": "y",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "Point2D",
    "url": "https://w3c.github.io/mediacapture-image/index.html"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "stream",
            "type": {
              "name": "MediaStream"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "tracks",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "MediaStreamTrack"
                }
              ]
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "MediaStream",
        "isReadOnly": true,
        "name": "active",
        "type": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "track",
            "type": {
              "name": "MediaStreamTrack"
            }
          }
        ],
        "from": "MediaStream",
        "name": "addTrack",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaStream",
        "name": "clone",
        "returnType": {
          "name": "MediaStream"
        }
      },
      {
        "from": "MediaStream",
        "name": "getAudioTracks",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "MediaStreamTrack"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "trackId",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "MediaStream",
        "name": "getTrackById",
        "returnType": {
          "name": "MediaStreamTrack",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaStream",
        "name": "getTracks",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "MediaStreamTrack"
            }
          ]
        }
      },
      {
        "from": "MediaStream",
        "name": "getVideoTracks",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "MediaStreamTrack"
            }
          ]
        }
      },
      {
        "from": "MediaStream",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStream",
        "name": "onaddtrack",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStream",
        "name": "onremovetrack",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "track",
            "type": {
              "name": "MediaStreamTrack"
            }
          }
        ],
        "from": "MediaStream",
        "name": "removeTrack",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "MediaStream",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "args": [
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "MediaTrackConstraints"
            }
          }
        ],
        "from": "MediaStreamTrack",
        "name": "applyConstraints",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "clone",
        "returnType": {
          "name": "MediaStreamTrack"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "enabled",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getCapabilities",
        "returnType": {
          "name": "MediaTrackCapabilities"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getConstraints",
        "returnType": {
          "name": "MediaTrackConstraints"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getSettings",
        "returnType": {
          "name": "MediaTrackSettings"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "kind",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "muted",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onoverconstrained",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onunmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "MediaStreamTrackState"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "MediaStreamTrack",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "MediaStreamTrackState",
    "url": "https://w3c.github.io/mediacapture-main/",
    "value": [
      "live",
      "ended"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "aspectRatio",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "channelCount",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "deviceId",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "echoCancellation",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "facingMode",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "frameRate",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "groupId",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "height",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "latency",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "sampleRate",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "sampleSize",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "volume",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "MediaTrackSupportedConstraints",
        "name": "width",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaTrackSupportedConstraints",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "from": "MediaTrackCapabilities",
        "name": "aspectRatio",
        "type": {
          "types": [
            {
              "name": "double"
            },
            {
              "name": "DoubleRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "channelCount",
        "type": {
          "types": [
            {
              "name": "long"
            },
            {
              "name": "LongRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "deviceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "echoCancellation",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "facingMode",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "frameRate",
        "type": {
          "types": [
            {
              "name": "double"
            },
            {
              "name": "DoubleRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "groupId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "height",
        "type": {
          "types": [
            {
              "name": "long"
            },
            {
              "name": "LongRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "latency",
        "type": {
          "types": [
            {
              "name": "double"
            },
            {
              "name": "DoubleRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "sampleRate",
        "type": {
          "types": [
            {
              "name": "long"
            },
            {
              "name": "LongRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "sampleSize",
        "type": {
          "types": [
            {
              "name": "long"
            },
            {
              "name": "LongRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "volume",
        "type": {
          "types": [
            {
              "name": "double"
            },
            {
              "name": "DoubleRange"
            }
          ]
        }
      },
      {
        "from": "MediaTrackCapabilities",
        "name": "width",
        "type": {
          "types": [
            {
              "name": "long"
            },
            {
              "name": "LongRange"
            }
          ]
        }
      }
    ],
    "name": "MediaTrackCapabilities",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "inheritsFrom": "MediaTrackConstraintSet",
    "members": [
      {
        "from": "MediaTrackConstraints",
        "name": "advanced",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "MediaTrackConstraintSet"
            }
          ]
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "aspectRatio",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "channelCount",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "deviceId",
        "type": {
          "name": "ConstrainDOMString"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "echoCancellation",
        "type": {
          "name": "ConstrainBoolean"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "facingMode",
        "type": {
          "name": "ConstrainDOMString"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "frameRate",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "groupId",
        "type": {
          "name": "ConstrainDOMString"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "height",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "latency",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "sampleRate",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "sampleSize",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "volume",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "width",
        "type": {
          "name": "ConstrainLong"
        }
      }
    ],
    "name": "MediaTrackConstraints",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "from": "MediaTrackConstraintSet",
        "name": "aspectRatio",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "channelCount",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "deviceId",
        "type": {
          "name": "ConstrainDOMString"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "echoCancellation",
        "type": {
          "name": "ConstrainBoolean"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "facingMode",
        "type": {
          "name": "ConstrainDOMString"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "frameRate",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "groupId",
        "type": {
          "name": "ConstrainDOMString"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "height",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "latency",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "sampleRate",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "sampleSize",
        "type": {
          "name": "ConstrainLong"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "volume",
        "type": {
          "name": "ConstrainDouble"
        }
      },
      {
        "from": "MediaTrackConstraintSet",
        "name": "width",
        "type": {
          "name": "ConstrainLong"
        }
      }
    ],
    "name": "MediaTrackConstraintSet",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "from": "MediaTrackSettings",
        "name": "aspectRatio",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "channelCount",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "deviceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "echoCancellation",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "facingMode",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "frameRate",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "groupId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "height",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "latency",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "sampleRate",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "sampleSize",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "volume",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MediaTrackSettings",
        "name": "width",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "MediaTrackSettings",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "VideoFacingModeEnum",
    "url": "https://w3c.github.io/mediacapture-main/",
    "value": [
      "user",
      "environment",
      "left",
      "right"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "MediaStreamTrackEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "MediaStreamTrackEvent",
        "isReadOnly": true,
        "name": "track",
        "type": {
          "name": "MediaStreamTrack"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaStreamTrackEvent",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "MediaStreamTrackEventInit",
        "isRequired": true,
        "name": "track",
        "type": {
          "name": "MediaStreamTrack"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaStreamTrackEventInit",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "OverconstrainedErrorEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "OverconstrainedErrorEvent",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "OverconstrainedError",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "OverconstrainedErrorEvent",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "OverconstrainedErrorEventInit",
        "name": "error",
        "type": {
          "name": "OverconstrainedError",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "OverconstrainedErrorEventInit",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Window"
      },
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "NavigatorUserMedia",
        "isReadOnly": true,
        "name": "mediaDevices",
        "type": {
          "name": "MediaDevices"
        }
      }
    ],
    "name": "NavigatorUserMedia",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "MediaDevices",
        "name": "enumerateDevices",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "MediaDeviceInfo"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "MediaDevices",
        "name": "ondevicechange",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "MediaDevices",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "members": [
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "deviceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "groupId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "kind",
        "type": {
          "name": "MediaDeviceKind"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "MediaDeviceInfo",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "MediaDeviceKind",
    "url": "https://w3c.github.io/mediacapture-main/",
    "value": [
      "audioinput",
      "audiooutput",
      "videoinput"
    ]
  },
  {
    "inheritsFrom": "MediaDeviceInfo",
    "members": [
      {
        "from": "InputDeviceInfo",
        "name": "getCapabilities",
        "returnType": {
          "name": "MediaTrackCapabilities"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "deviceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "groupId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "kind",
        "type": {
          "name": "MediaDeviceKind"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "isReadOnly": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaDeviceInfo",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "InputDeviceInfo",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "MediaStreamConstraints",
        "name": "audio",
        "type": {
          "types": [
            {
              "name": "boolean"
            },
            {
              "name": "MediaTrackConstraints"
            }
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "MediaStreamConstraints",
        "name": "video",
        "type": {
          "types": [
            {
              "name": "boolean"
            },
            {
              "name": "MediaTrackConstraints"
            }
          ]
        }
      }
    ],
    "name": "MediaStreamConstraints",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "args": [
      {
        "name": "stream",
        "type": {
          "name": "MediaStream"
        }
      }
    ],
    "name": "NavigatorUserMediaSuccessCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "args": [
      {
        "name": "error",
        "type": {
          "name": "MediaStreamError"
        }
      }
    ],
    "name": "NavigatorUserMediaErrorCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "MediaStreamError",
    "type": {
      "name": "object"
    },
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "Constraints"
            }
          }
        ],
        "from": "ConstrainablePattern",
        "name": "applyConstraints",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "ConstrainablePattern",
        "name": "getCapabilities",
        "returnType": {
          "name": "Capabilities"
        }
      },
      {
        "from": "ConstrainablePattern",
        "name": "getConstraints",
        "returnType": {
          "name": "Constraints"
        }
      },
      {
        "from": "ConstrainablePattern",
        "name": "getSettings",
        "returnType": {
          "name": "Settings"
        }
      },
      {
        "from": "ConstrainablePattern",
        "name": "onoverconstrained",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "ConstrainablePattern",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "from": "DoubleRange",
        "name": "max",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "DoubleRange",
        "name": "min",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "DoubleRange",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "inheritsFrom": "DoubleRange",
    "members": [
      {
        "from": "ConstrainDoubleRange",
        "name": "exact",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "ConstrainDoubleRange",
        "name": "ideal",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "DoubleRange",
        "name": "max",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "DoubleRange",
        "name": "min",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "ConstrainDoubleRange",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "from": "LongRange",
        "name": "max",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "LongRange",
        "name": "min",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "LongRange",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "inheritsFrom": "LongRange",
    "members": [
      {
        "from": "ConstrainLongRange",
        "name": "exact",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "ConstrainLongRange",
        "name": "ideal",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "LongRange",
        "name": "max",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "LongRange",
        "name": "min",
        "type": {
          "name": "long"
        }
      }
    ],
    "name": "ConstrainLongRange",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "from": "ConstrainBooleanParameters",
        "name": "exact",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "ConstrainBooleanParameters",
        "name": "ideal",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ConstrainBooleanParameters",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
      {
        "from": "ConstrainDOMStringParameters",
        "name": "exact",
        "type": {
          "types": [
            {
              "name": "DOMString"
            },
            {
              "name": "sequence",
              "params": [
                {
                  "name": "DOMString"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "ConstrainDOMStringParameters",
        "name": "ideal",
        "type": {
          "types": [
            {
              "name": "DOMString"
            },
            {
              "name": "sequence",
              "params": [
                {
                  "name": "DOMString"
                }
              ]
            }
          ]
        }
      }
    ],
    "name": "ConstrainDOMStringParameters",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "ConstrainLong",
    "type": {
      "types": [
        {
          "name": "long"
        },
        {
          "name": "ConstrainLongRange"
        }
      ]
    },
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "ConstrainDouble",
    "type": {
      "types": [
        {
          "name": "double"
        },
        {
          "name": "ConstrainDoubleRange"
        }
      ]
    },
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "ConstrainBoolean",
    "type": {
      "types": [
        {
          "name": "boolean"
        },
        {
          "name": "ConstrainBooleanParameters"
        }
      ]
    },
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "ConstrainDOMString",
    "type": {
      "types": [
        {
          "name": "DOMString"
        },
        {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        },
        {
          "name": "ConstrainDOMStringParameters"
        }
      ]
    },
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
    ],
    "name": "Capabilities",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
    ],
    "name": "Settings",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "members": [
    ],
    "name": "ConstraintSet",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "inheritsFrom": "ConstraintSet",
    "members": [
      {
        "from": "Constraints",
        "name": "advanced",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "ConstraintSet"
            }
          ]
        }
      }
    ],
    "name": "Constraints",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  {
    "name": "SourceTypeEnum",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html",
    "value": [
      "none",
      "camera",
      "microphone"
    ]
  },
  {
    "args": [
      {
        "name": "sourceInfoList",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "SourceInfo"
            }
          ]
        }
      }
    ],
    "name": "SourceInfoCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "members": [
      {
        "from": "SourceInfo",
        "name": "kind",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SourceInfo",
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SourceInfo",
        "name": "sourceId",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "SourceInfo",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "videoConstraints",
            "optional": true,
            "type": {
              "name": "MediaTrackConstraints"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "MediaStreamTrack",
    "members": [
      {
        "args": [
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "MediaTrackConstraints"
            }
          }
        ],
        "from": "MediaStreamTrack",
        "name": "applyConstraints",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "clone",
        "returnType": {
          "name": "MediaStreamTrack"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "enabled",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getCapabilities",
        "returnType": {
          "name": "MediaTrackCapabilities"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getConstraints",
        "returnType": {
          "name": "MediaTrackConstraints"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getSettings",
        "returnType": {
          "name": "MediaTrackSettings"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "kind",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "muted",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onoverconstrained",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onunmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "MediaStreamTrackState"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "VideoStreamTrack",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "audioConstraints",
            "optional": true,
            "type": {
              "name": "MediaTrackConstraints"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "MediaStreamTrack",
    "members": [
      {
        "args": [
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "MediaTrackConstraints"
            }
          }
        ],
        "from": "MediaStreamTrack",
        "name": "applyConstraints",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "clone",
        "returnType": {
          "name": "MediaStreamTrack"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "enabled",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getCapabilities",
        "returnType": {
          "name": "MediaTrackCapabilities"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getConstraints",
        "returnType": {
          "name": "MediaTrackConstraints"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "getSettings",
        "returnType": {
          "name": "MediaTrackSettings"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "kind",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "label",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "muted",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onoverconstrained",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "onunmute",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaStreamTrack",
        "isReadOnly": true,
        "name": "readyState",
        "type": {
          "name": "MediaStreamTrackState"
        }
      },
      {
        "from": "MediaStreamTrack",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "AudioStreamTrack",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "members": [
      {
        "from": "MediaSourceStates",
        "name": "aspectRatio",
        "type": {
          "name": "float",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaSourceStates",
        "name": "facingMode",
        "type": {
          "name": "VideoFacingModeEnum",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaSourceStates",
        "name": "frameRate",
        "type": {
          "name": "float",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaSourceStates",
        "name": "height",
        "type": {
          "name": "unsigned long",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaSourceStates",
        "name": "sourceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaSourceStates",
        "name": "sourceType",
        "type": {
          "name": "SourceTypeEnum"
        }
      },
      {
        "from": "MediaSourceStates",
        "name": "volume",
        "type": {
          "name": "unsigned long",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaSourceStates",
        "name": "width",
        "type": {
          "name": "unsigned long",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "MediaSourceStates",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "members": [
      {
        "from": "CapabilityRange",
        "name": "max",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "CapabilityRange",
        "name": "min",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "CapabilityRange",
        "name": "supported",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "CapabilityRange",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "name": "CapabilityList",
    "type": {
      "name": "sequence",
      "params": [
        {
          "name": "DOMString"
        }
      ]
    },
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "members": [
      {
        "from": "AllVideoCapabilities",
        "name": "aspectRatio",
        "type": {
          "name": "CapabilityRange",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "AllVideoCapabilities",
        "name": "facingMode",
        "type": {
          "name": "CapabilityList",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "AllVideoCapabilities",
        "name": "frameRate",
        "type": {
          "name": "CapabilityRange",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "AllVideoCapabilities",
        "name": "height",
        "type": {
          "name": "CapabilityRange",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "AllVideoCapabilities",
        "name": "sourceId",
        "type": {
          "name": "CapabilityList",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "AllVideoCapabilities",
        "name": "sourceType",
        "type": {
          "name": "CapabilityList",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "AllVideoCapabilities",
        "name": "width",
        "type": {
          "name": "CapabilityRange",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "AllVideoCapabilities",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "members": [
      {
        "from": "AllAudioCapabilities",
        "name": "volume",
        "type": {
          "name": "CapabilityRange",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "AllAudioCapabilities",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "inheritsFrom": "DOMError",
    "members": [
      {
        "from": "NavigatorUserMediaError",
        "isReadOnly": true,
        "name": "constraintName",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "NavigatorUserMediaError",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "members": [
      {
        "from": "MinMaxConstraint",
        "name": "max",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "MinMaxConstraint",
        "name": "min",
        "type": {
          "name": "any"
        }
      }
    ],
    "name": "MinMaxConstraint",
    "url": "https://w3c.github.io/mediacapture-main/archives/20131017/getusermedia.html"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "MediaStreamErrorEventInit",
        "name": "error",
        "type": {
          "name": "MediaStreamError",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaStreamErrorEventInit",
    "url": "https://w3c.github.io/mediacapture-main/archives/20150629/getusermedia.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "MediaStreamErrorEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "MediaStreamErrorEvent",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "MediaStreamError",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MediaStreamErrorEvent",
    "url": "https://w3c.github.io/mediacapture-main/archives/20150629/getusermedia.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "stream",
            "type": {
              "name": "MediaStream"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "MediaRecorderOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "MediaRecorder",
        "isReadOnly": true,
        "name": "audioBitsPerSecond",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "ignoreMutedMedia",
        "type": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "MediaRecorder",
        "isStatic": true,
        "name": "isTypeSupported",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "from": "MediaRecorder",
        "isReadOnly": true,
        "name": "mimeType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "ondataavailable",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "onpause",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "onresume",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "onstart",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "onstop",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "pause",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "requestData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "resume",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "timeslice",
            "optional": true,
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "MediaRecorder",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaRecorder",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "RecordingState"
        }
      },
      {
        "from": "MediaRecorder",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MediaRecorder",
        "isReadOnly": true,
        "name": "stream",
        "type": {
          "name": "MediaStream"
        }
      },
      {
        "from": "MediaRecorder",
        "isReadOnly": true,
        "name": "videoBitsPerSecond",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "MediaRecorder",
    "url": "https://w3c.github.io/mediacapture-record/MediaRecorder.html"
  },
  {
    "members": [
      {
        "from": "MediaRecorderOptions",
        "name": "audioBitsPerSecond",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "MediaRecorderOptions",
        "name": "bitsPerSecond",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "MediaRecorderOptions",
        "name": "mimeType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaRecorderOptions",
        "name": "videoBitsPerSecond",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "MediaRecorderOptions",
    "url": "https://w3c.github.io/mediacapture-record/MediaRecorder.html"
  },
  {
    "name": "RecordingState",
    "url": "https://w3c.github.io/mediacapture-record/MediaRecorder.html",
    "value": [
      "inactive",
      "recording",
      "paused"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "BlobEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "BlobEvent",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "Blob"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "BlobEvent",
    "url": "https://w3c.github.io/mediacapture-record/MediaRecorder.html"
  },
  {
    "members": [
      {
        "from": "BlobEventInit",
        "isRequired": true,
        "name": "data",
        "type": {
          "name": "Blob"
        }
      }
    ],
    "name": "BlobEventInit",
    "url": "https://w3c.github.io/mediacapture-record/MediaRecorder.html"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "ErrorEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "ErrorEvent",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "DOMException",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ErrorEvent",
    "url": "https://w3c.github.io/mediacapture-record/MediaRecorder.html"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "ErrorEventInit",
        "name": "error",
        "type": {
          "name": "Error",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ErrorEventInit",
    "url": "https://w3c.github.io/mediacapture-record/MediaRecorder.html"
  },
  {
    "inheritsFrom": "PerformanceResourceTiming",
    "members": [
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "domComplete",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "domContentLoadedEventEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "domContentLoadedEventStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "domInteractive",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "loadEventEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "loadEventStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "redirectCount",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "NavigationType"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "unloadEventEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "isReadOnly": true,
        "name": "unloadEventStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceNavigationTiming",
        "mapPattern": [
          "inherit",
          "attribute"
        ]
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "connectEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "connectStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "decodedBodySize",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "domainLookupEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "domainLookupStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "encodedBodySize",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "fetchStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "initiatorType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "nextHopProtocol",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "redirectEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "redirectStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "requestStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "responseEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "responseStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "secureConnectionStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "transferSize",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "workerStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "mapPattern": [
          "inherit",
          "attribute"
        ]
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "duration",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "entryType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "startTime",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PerformanceNavigationTiming",
    "url": "https://w3c.github.io/navigation-timing/"
  },
  {
    "name": "NavigationType",
    "url": "https://w3c.github.io/navigation-timing/",
    "value": [
      "navigate",
      "reload",
      "back_forward",
      "prerender"
    ]
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "members": [
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "connectEnd",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "connectStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "domComplete",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "domContentLoadedEventEnd",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "domContentLoadedEventStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "domInteractive",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "domLoading",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "domainLookupEnd",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "domainLookupStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "fetchStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "loadEventEnd",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "loadEventStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "navigationStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "redirectEnd",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "redirectStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "requestStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "responseEnd",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "responseStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "secureConnectionStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "unloadEventEnd",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "isReadOnly": true,
        "name": "unloadEventStart",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceTiming",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PerformanceTiming",
    "url": "https://w3c.github.io/navigation-timing/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "members": [
      {
        "from": "PerformanceNavigation",
        "isConst": true,
        "name": "TYPE_BACK_FORWARD",
        "type": {
          "name": "unsigned short"
        },
        "value": "2"
      },
      {
        "from": "PerformanceNavigation",
        "isConst": true,
        "name": "TYPE_NAVIGATE",
        "type": {
          "name": "unsigned short"
        },
        "value": "0"
      },
      {
        "from": "PerformanceNavigation",
        "isConst": true,
        "name": "TYPE_RELOAD",
        "type": {
          "name": "unsigned short"
        },
        "value": "1"
      },
      {
        "from": "PerformanceNavigation",
        "isConst": true,
        "name": "TYPE_RESERVED",
        "type": {
          "name": "unsigned short"
        },
        "value": "255"
      },
      {
        "from": "PerformanceNavigation",
        "isReadOnly": true,
        "name": "redirectCount",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "PerformanceNavigation",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "PerformanceNavigation",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PerformanceNavigation",
    "url": "https://w3c.github.io/navigation-timing/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "duration",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "entryType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "startTime",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PerformanceEntry",
    "url": "https://w3c.github.io/performance-timeline/"
  },
  {
    "name": "PerformanceEntryList",
    "type": {
      "name": "sequence",
      "params": [
        {
          "name": "PerformanceEntry"
        }
      ]
    },
    "url": "https://w3c.github.io/performance-timeline/"
  },
  {
    "members": [
      {
        "from": "PerformanceObserverInit",
        "isRequired": true,
        "name": "entryTypes",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      }
    ],
    "name": "PerformanceObserverInit",
    "url": "https://w3c.github.io/performance-timeline/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "PerformanceObserverEntryList",
        "name": "getEntries",
        "returnType": {
          "name": "PerformanceEntryList"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "type",
            "optional": true,
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "PerformanceObserverEntryList",
        "name": "getEntriesByName",
        "returnType": {
          "name": "PerformanceEntryList"
        }
      },
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "PerformanceObserverEntryList",
        "name": "getEntriesByType",
        "returnType": {
          "name": "PerformanceEntryList"
        }
      }
    ],
    "name": "PerformanceObserverEntryList",
    "url": "https://w3c.github.io/performance-timeline/"
  },
  {
    "args": [
      {
        "name": "entries",
        "type": {
          "name": "PerformanceObserverEntryList"
        }
      },
      {
        "name": "observer",
        "type": {
          "name": "PerformanceObserver"
        }
      }
    ],
    "name": "PerformanceObserverCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/performance-timeline/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "callback",
            "type": {
              "name": "PerformanceObserverCallback"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "from": "PerformanceObserver",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "options",
            "type": {
              "name": "PerformanceObserverInit"
            }
          }
        ],
        "from": "PerformanceObserver",
        "name": "observe",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "PerformanceObserver",
    "url": "https://w3c.github.io/performance-timeline/"
  },
  {
    "inheritsFrom": "PermissionDescriptor",
    "members": [
      {
        "defaultValue": "false",
        "from": "MidiPermissionDescriptor",
        "name": "sysex",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "PermissionDescriptor",
        "name": "embedee",
        "type": {
          "name": "HTMLIFrameElement"
        }
      },
      {
        "from": "PermissionDescriptor",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "PermissionName"
        }
      }
    ],
    "name": "MidiPermissionDescriptor",
    "url": "https://w3c.github.io/permissions/"
  },
  {
    "inheritsFrom": "PermissionDescriptor",
    "members": [
      {
        "defaultValue": "false",
        "from": "BluetoothPermissionDescriptor",
        "name": "acceptAllDevices",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothPermissionDescriptor",
        "name": "deviceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "BluetoothPermissionDescriptor",
        "name": "filters",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "BluetoothLEScanFilterInit"
            }
          ]
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "BluetoothPermissionDescriptor",
        "name": "optionalServices",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "BluetoothServiceUUID"
            }
          ]
        }
      },
      {
        "from": "PermissionDescriptor",
        "name": "embedee",
        "type": {
          "name": "HTMLIFrameElement"
        }
      },
      {
        "from": "PermissionDescriptor",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "PermissionName"
        }
      }
    ],
    "name": "BluetoothPermissionDescriptor",
    "url": "https://w3c.github.io/permissions/"
  },
  {
    "name": "PermissionState",
    "url": "https://w3c.github.io/permissions/",
    "value": [
      "granted",
      "denied",
      "prompt"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "PermissionStatus",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PermissionStatus",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "PermissionState"
        }
      }
    ],
    "name": "PermissionStatus",
    "url": "https://w3c.github.io/permissions/"
  },
  {
    "name": "PermissionName",
    "url": "https://w3c.github.io/permissions/",
    "value": [
      "geolocation",
      "notifications",
      "push",
      "midi",
      "camera",
      "microphone",
      "speaker",
      "device-info",
      "background-sync",
      "bluetooth",
      "persistent-storage"
    ]
  },
  {
    "inheritsFrom": "PermissionDescriptor",
    "members": [
      {
        "defaultValue": "false",
        "from": "PushPermissionDescriptor",
        "name": "userVisibleOnly",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "PermissionDescriptor",
        "name": "embedee",
        "type": {
          "name": "HTMLIFrameElement"
        }
      },
      {
        "from": "PermissionDescriptor",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "PermissionName"
        }
      }
    ],
    "name": "PushPermissionDescriptor",
    "url": "https://w3c.github.io/permissions/"
  },
  {
    "inheritsFrom": "PermissionDescriptor",
    "members": [
      {
        "from": "DevicePermissionDescriptor",
        "name": "deviceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PermissionDescriptor",
        "name": "embedee",
        "type": {
          "name": "HTMLIFrameElement"
        }
      },
      {
        "from": "PermissionDescriptor",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "PermissionName"
        }
      }
    ],
    "name": "DevicePermissionDescriptor",
    "url": "https://w3c.github.io/permissions/"
  },
  {
    "args": [
      {
        "name": "entries",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "IntersectionObserverEntry"
            }
          ]
        }
      },
      {
        "name": "observer",
        "type": {
          "name": "IntersectionObserver"
        }
      }
    ],
    "name": "IntersectionObserverCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/pointerevents/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "callback",
            "type": {
              "name": "IntersectionObserverCallback"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "IntersectionObserverInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "members": [
      {
        "from": "IntersectionObserver",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "Element"
            }
          }
        ],
        "from": "IntersectionObserver",
        "name": "observe",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "IntersectionObserver",
        "isReadOnly": true,
        "name": "root",
        "type": {
          "name": "Element",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "IntersectionObserver",
        "isReadOnly": true,
        "name": "rootMargin",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "IntersectionObserver",
        "name": "takeRecords",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "IntersectionObserverEntry"
            }
          ]
        }
      },
      {
        "from": "IntersectionObserver",
        "isReadOnly": true,
        "name": "thresholds",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "Element"
            }
          }
        ],
        "from": "IntersectionObserver",
        "name": "unobserve",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "IntersectionObserver",
    "url": "https://w3c.github.io/pointerevents/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "intersectionObserverEntryInit",
            "type": {
              "name": "IntersectionObserverEntryInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "IntersectionObserverEntry",
        "isReadOnly": true,
        "name": "boundingClientRect",
        "type": {
          "name": "DOMRectReadOnly"
        }
      },
      {
        "from": "IntersectionObserverEntry",
        "isReadOnly": true,
        "name": "intersectionRatio",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "IntersectionObserverEntry",
        "isReadOnly": true,
        "name": "intersectionRect",
        "type": {
          "name": "DOMRectReadOnly"
        }
      },
      {
        "from": "IntersectionObserverEntry",
        "isReadOnly": true,
        "name": "rootBounds",
        "type": {
          "name": "DOMRectReadOnly"
        }
      },
      {
        "from": "IntersectionObserverEntry",
        "isReadOnly": true,
        "name": "target",
        "type": {
          "name": "Element"
        }
      },
      {
        "from": "IntersectionObserverEntry",
        "isReadOnly": true,
        "name": "time",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      }
    ],
    "name": "IntersectionObserverEntry",
    "url": "https://w3c.github.io/pointerevents/"
  },
  {
    "members": [
      {
        "from": "IntersectionObserverEntryInit",
        "isRequired": true,
        "name": "boundingClientRect",
        "type": {
          "name": "DOMRectInit"
        }
      },
      {
        "from": "IntersectionObserverEntryInit",
        "isRequired": true,
        "name": "intersectionRect",
        "type": {
          "name": "DOMRectInit"
        }
      },
      {
        "from": "IntersectionObserverEntryInit",
        "isRequired": true,
        "name": "rootBounds",
        "type": {
          "name": "DOMRectInit"
        }
      },
      {
        "from": "IntersectionObserverEntryInit",
        "isRequired": true,
        "name": "target",
        "type": {
          "name": "Element"
        }
      },
      {
        "from": "IntersectionObserverEntryInit",
        "isRequired": true,
        "name": "time",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      }
    ],
    "name": "IntersectionObserverEntryInit",
    "url": "https://w3c.github.io/pointerevents/"
  },
  {
    "members": [
      {
        "defaultValue": "null",
        "from": "IntersectionObserverInit",
        "name": "root",
        "type": {
          "name": "Element",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "0px",
        "from": "IntersectionObserverInit",
        "name": "rootMargin",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "0",
        "from": "IntersectionObserverInit",
        "name": "threshold",
        "type": {
          "types": [
            {
              "name": "double"
            },
            {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          ]
        }
      }
    ],
    "name": "IntersectionObserverInit",
    "url": "https://w3c.github.io/pointerevents/"
  },
  {
    "members": [
      {
        "from": "ExampleFeature",
        "name": "calculateNotSoSecretResult",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "ExampleFeature",
        "name": "calculateSecretResult",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "ExampleFeature",
        "name": "getSecretBoolean",
        "returnType": {
          "name": "boolean"
        }
      }
    ],
    "name": "ExampleFeature",
    "url": "https://w3c.github.io/pointerlock/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "from": "SecureFeature",
        "name": "doAmazingThing",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      }
    ],
    "name": "SecureFeature",
    "url": "https://w3c.github.io/pointerlock/"
  },
  {
    "members": [
      {
        "from": "GlobalSecureContext",
        "isReadOnly": true,
        "name": "isSecureContext",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "GlobalSecureContext",
    "url": "https://w3c.github.io/pointerlock/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "from": "SensitiveFeature",
        "name": "getTheSecretDouble",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      }
    ],
    "name": "SensitiveFeature",
    "url": "https://w3c.github.io/pointerlock/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "AnotherSensitiveFeature",
        "name": "doThatPowerfulThing",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "AnotherSensitiveFeature",
    "url": "https://w3c.github.io/pointerlock/"
  },
  {
    "members": [
    ],
    "name": "Presentation",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "url",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "urls",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "DOMString"
                }
              ]
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "PresentationRequest",
        "name": "getAvailability",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PresentationAvailability"
            }
          ]
        }
      },
      {
        "from": "PresentationRequest",
        "name": "onconnectionavailable",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "presentationId",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "PresentationRequest",
        "name": "reconnect",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PresentationConnection"
            }
          ]
        }
      },
      {
        "from": "PresentationRequest",
        "name": "start",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PresentationConnection"
            }
          ]
        }
      }
    ],
    "name": "PresentationRequest",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "PresentationAvailability",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PresentationAvailability",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PresentationAvailability",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "PresentationConnectionAvailableEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "PresentationConnectionAvailableEvent",
        "isReadOnly": true,
        "name": "connection",
        "type": {
          "name": "PresentationConnection"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PresentationConnectionAvailableEvent",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "PresentationConnectionAvailableEventInit",
        "isRequired": true,
        "name": "connection",
        "type": {
          "name": "PresentationConnection"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PresentationConnectionAvailableEventInit",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "name": "PresentationConnectionState",
    "url": "https://w3c.github.io/presentation-api/",
    "value": [
      "connecting",
      "connected",
      "closed",
      "terminated"
    ]
  },
  {
    "name": "BinaryType",
    "url": "https://w3c.github.io/presentation-api/",
    "value": [
      "blob",
      "arraybuffer"
    ]
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "PresentationConnection",
        "name": "binaryType",
        "type": {
          "name": "BinaryType"
        }
      },
      {
        "from": "PresentationConnection",
        "name": "close",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "PresentationConnection",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PresentationConnection",
        "name": "onclose",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PresentationConnection",
        "name": "onconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PresentationConnection",
        "name": "onmessage",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PresentationConnection",
        "name": "onterminate",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "message",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "PresentationConnection",
        "name": "send",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "data",
            "type": {
              "name": "Blob"
            }
          }
        ],
        "from": "PresentationConnection",
        "name": "send",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "data",
            "type": {
              "name": "ArrayBuffer"
            }
          }
        ],
        "from": "PresentationConnection",
        "name": "send",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "data",
            "type": {
              "name": "ArrayBufferView"
            }
          }
        ],
        "from": "PresentationConnection",
        "name": "send",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "PresentationConnection",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "PresentationConnectionState"
        }
      },
      {
        "from": "PresentationConnection",
        "name": "terminate",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "PresentationConnection",
        "isReadOnly": true,
        "name": "url",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "PresentationConnection",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "name": "PresentationConnectionClosedReason",
    "url": "https://w3c.github.io/presentation-api/",
    "value": [
      "error",
      "closed",
      "wentaway"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "PresentationConnectionCloseEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "PresentationConnectionCloseEvent",
        "isReadOnly": true,
        "name": "message",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PresentationConnectionCloseEvent",
        "isReadOnly": true,
        "name": "reason",
        "type": {
          "name": "PresentationConnectionClosedReason"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PresentationConnectionCloseEvent",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "",
        "from": "PresentationConnectionCloseEventInit",
        "name": "message",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PresentationConnectionCloseEventInit",
        "isRequired": true,
        "name": "reason",
        "type": {
          "name": "PresentationConnectionClosedReason"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PresentationConnectionCloseEventInit",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "PresentationReceiver",
        "isReadOnly": true,
        "name": "connectionList",
        "type": {
          "name": "Promise",
          "params": [
            {
              "name": "PresentationConnectionList"
            }
          ]
        }
      }
    ],
    "name": "PresentationReceiver",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "PresentationConnectionList",
        "isReadOnly": true,
        "name": "connections",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "PresentationConnection"
            }
          ]
        }
      },
      {
        "from": "PresentationConnectionList",
        "name": "onconnectionavailable",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "PresentationConnectionList",
    "url": "https://w3c.github.io/presentation-api/"
  },
  {
    "members": [
      {
        "from": "PushManager",
        "name": "getSubscription",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PushSubscription",
              "params": [
                "nullable"
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "PushSubscriptionOptionsInit"
            }
          }
        ],
        "from": "PushManager",
        "name": "permissionState",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PushPermissionState"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "PushSubscriptionOptionsInit"
            }
          }
        ],
        "from": "PushManager",
        "name": "subscribe",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "PushSubscription"
            }
          ]
        }
      }
    ],
    "name": "PushManager",
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "members": [
      {
        "defaultValue": "null",
        "from": "PushSubscriptionOptionsInit",
        "name": "applicationServerKey",
        "type": {
          "name": "BufferSource",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "PushSubscriptionOptionsInit",
        "name": "userVisibleOnly",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PushSubscriptionOptionsInit",
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "PushSubscriptionOptions",
        "isReadOnly": true,
        "name": "applicationServerKey",
        "type": {
          "name": "ArrayBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PushSubscriptionOptions",
        "isReadOnly": true,
        "name": "userVisibleOnly",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PushSubscriptionOptions",
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "members": [
      {
        "from": "PushSubscription",
        "isReadOnly": true,
        "name": "endpoint",
        "type": {
          "name": "USVString"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "PushEncryptionKeyName"
            }
          }
        ],
        "from": "PushSubscription",
        "name": "getKey",
        "returnType": {
          "name": "ArrayBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "PushSubscription",
        "isReadOnly": true,
        "name": "options",
        "type": {
          "name": "PushSubscriptionOptions"
        }
      },
      {
        "from": "PushSubscription",
        "name": "unsubscribe",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "from": "PushSubscription"
      }
    ],
    "name": "PushSubscription",
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "name": "PushEncryptionKeyName",
    "url": "https://w3c.github.io/push-api/",
    "value": [
      "p256dh",
      "auth"
    ]
  },
  {
    "name": "JSON",
    "type": {
      "name": "any"
    },
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "members": [
      {
        "from": "PushMessageData",
        "name": "arrayBuffer",
        "returnType": {
          "name": "ArrayBuffer"
        }
      },
      {
        "from": "PushMessageData",
        "name": "blob",
        "returnType": {
          "name": "Blob"
        }
      },
      {
        "from": "PushMessageData",
        "name": "json",
        "returnType": {
          "name": "JSON"
        }
      },
      {
        "from": "PushMessageData",
        "name": "text",
        "returnType": {
          "name": "USVString"
        }
      }
    ],
    "name": "PushMessageData",
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "name": "PushMessageDataInit",
    "type": {
      "types": [
        {
          "name": "BufferSource"
        },
        {
          "name": "USVString"
        }
      ]
    },
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "inheritsFrom": "ExtendableEventInit",
    "members": [
      {
        "from": "PushEventInit",
        "name": "data",
        "type": {
          "name": "PushMessageDataInit"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PushEventInit",
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "PushEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "from": "PushEvent",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "PushMessageData",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PushEvent",
    "url": "https://w3c.github.io/push-api/"
  },
  {
    "name": "PushPermissionState",
    "url": "https://w3c.github.io/push-api/",
    "value": [
      "granted",
      "denied",
      "prompt"
    ]
  },
  {
    "name": "StorageType",
    "url": "https://w3c.github.io/quota-api/",
    "value": [
      "temporary",
      "persistent"
    ]
  },
  {
    "members": [
      {
        "from": "StorageInfo",
        "name": "quota",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "StorageInfo",
        "name": "usage",
        "type": {
          "name": "unsigned long long"
        }
      }
    ],
    "name": "StorageInfo",
    "url": "https://w3c.github.io/quota-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "StorageEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "StorageEvent",
        "isReadOnly": true,
        "name": "quota",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "StorageEvent",
        "isReadOnly": true,
        "name": "usage",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "StorageEvent",
    "url": "https://w3c.github.io/quota-api/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "0",
        "from": "StorageEventInit",
        "name": "quota",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "defaultValue": "0",
        "from": "StorageEventInit",
        "name": "usage",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "StorageEventInit",
    "url": "https://w3c.github.io/quota-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "StorageType"
            }
          },
          {
            "name": "rate",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "StorageWatcher",
        "name": "close",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "StorageWatcher",
        "name": "onstoragechange",
        "type": {
          "name": "EventListener"
        }
      },
      {
        "from": "StorageWatcher",
        "isReadOnly": true,
        "name": "rate",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "StorageWatcher",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "StorageType"
        }
      }
    ],
    "name": "StorageWatcher",
    "url": "https://w3c.github.io/quota-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "BeforeEvictEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "from": "BeforeEvictEvent",
        "isReadOnly": true,
        "name": "requestedBytes",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "BeforeEvictEvent",
    "url": "https://w3c.github.io/quota-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "EvictedEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "ServiceWorker"
      }
    ],
    "inheritsFrom": "ExtendableEvent",
    "members": [
      {
        "args": [
          {
            "name": "f",
            "type": {
              "name": "Promise",
              "params": [
                {
                  "name": "any"
                }
              ]
            }
          }
        ],
        "from": "ExtendableEvent",
        "name": "waitUntil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "EvictedEvent",
    "url": "https://w3c.github.io/quota-api/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "args": [
          {
            "name": "id",
            "optional": true,
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "RemotePlayback",
        "name": "cancelWatchAvailability",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "RemotePlayback",
        "name": "onconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "RemotePlayback",
        "name": "onconnecting",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "RemotePlayback",
        "name": "ondisconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "RemotePlayback",
        "name": "prompt",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "RemotePlayback",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "RemotePlaybackState"
        }
      },
      {
        "args": [
          {
            "name": "callback",
            "type": {
              "name": "RemotePlaybackAvailabilityCallback"
            }
          }
        ],
        "from": "RemotePlayback",
        "name": "watchAvailability",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "long"
            }
          ]
        }
      }
    ],
    "name": "RemotePlayback",
    "url": "https://w3c.github.io/remote-playback/"
  },
  {
    "name": "RemotePlaybackState",
    "url": "https://w3c.github.io/remote-playback/",
    "value": [
      "connecting",
      "connected",
      "disconnected"
    ]
  },
  {
    "args": [
      {
        "name": "available",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "RemotePlaybackAvailabilityCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/remote-playback/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "inheritsFrom": "PerformanceEntry",
    "members": [
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "connectEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "connectStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "decodedBodySize",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "domainLookupEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "domainLookupStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "encodedBodySize",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "fetchStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "initiatorType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "nextHopProtocol",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "redirectEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "redirectStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "requestStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "responseEnd",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "responseStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "secureConnectionStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "transferSize",
        "type": {
          "name": "unsigned long long"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "isReadOnly": true,
        "name": "workerStart",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceResourceTiming",
        "mapPattern": [
          "inherit",
          "attribute"
        ]
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "duration",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "entryType",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "PerformanceEntry",
        "isReadOnly": true,
        "name": "startTime",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      },
      {
        "from": "PerformanceEntry",
        "mapPattern": [
          "attribute"
        ]
      }
    ],
    "name": "PerformanceResourceTiming",
    "url": "https://w3c.github.io/resource-timing/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "Sensor",
        "name": "onactivate",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "isReadOnly": true,
        "name": "reading",
        "type": {
          "name": "SensorReading",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Sensor",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Sensor",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "SensorState"
        }
      },
      {
        "from": "Sensor",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "Sensor",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "members": [
      {
        "from": "SensorOptions",
        "name": "frequency",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "SensorOptions",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "name": "SensorState",
    "url": "https://w3c.github.io/sensors/",
    "value": [
      "idle",
      "activating",
      "activated",
      "errored"
    ]
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "from": "SensorReading",
        "isReadOnly": true,
        "name": "timeStamp",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      }
    ],
    "name": "SensorReading",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "errorEventInitDict",
            "type": {
              "name": "SensorErrorEventInit"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "SensorErrorEvent",
        "isReadOnly": true,
        "name": "error",
        "type": {
          "name": "Error"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "SensorErrorEvent",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "SensorErrorEventInit",
        "isRequired": true,
        "name": "error",
        "type": {
          "name": "Error"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "SensorErrorEventInit",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "proximitySensorOptions",
            "optional": true,
            "type": {
              "name": "ProximitySensorOptions"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "Sensor",
    "members": [
      {
        "from": "ProximitySensor",
        "isReadOnly": true,
        "name": "reading",
        "type": {
          "name": "ProximitySensorReading",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Sensor",
        "name": "onactivate",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "name": "onerror",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "Sensor",
        "isReadOnly": true,
        "name": "reading",
        "type": {
          "name": "SensorReading",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Sensor",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "Sensor",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "SensorState"
        }
      },
      {
        "from": "Sensor",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "ProximitySensor",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "attrs": [
      {
        "name": "SecureContext"
      }
    ],
    "inheritsFrom": "SensorReading",
    "members": [
      {
        "from": "ProximitySensorReading",
        "isReadOnly": true,
        "name": "distance",
        "type": {
          "name": "unrestricted double"
        }
      },
      {
        "from": "SensorReading",
        "isReadOnly": true,
        "name": "timeStamp",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      }
    ],
    "name": "ProximitySensorReading",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "inheritsFrom": "SensorOptions",
    "members": [
      {
        "from": "ProximitySensorOptions",
        "name": "direction",
        "type": {
          "name": "ProximitySensorDirection",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "Infinity",
        "from": "ProximitySensorOptions",
        "name": "max",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "-Infinity",
        "from": "ProximitySensorOptions",
        "name": "min",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "ProximitySensorOptions",
        "name": "position",
        "type": {
          "name": "ProximitySensorPosition",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "SensorOptions",
        "name": "frequency",
        "type": {
          "name": "double",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "ProximitySensorOptions",
    "url": "https://w3c.github.io/sensors/"
  },
  {
    "name": "ProximitySensorPosition",
    "url": "https://w3c.github.io/sensors/",
    "value": [
      "top-left",
      "top",
      "top-right",
      "middle-left",
      "middle",
      "middle-right",
      "bottom-left",
      "bottom",
      "bottom-right"
    ]
  },
  {
    "name": "ProximitySensorDirection",
    "url": "https://w3c.github.io/sensors/",
    "value": [
      "front",
      "rear",
      "left",
      "right",
      "top",
      "bottom"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "clientX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "clientY",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "force",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "TouchInit",
        "isRequired": true,
        "name": "identifier",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "pageX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "pageY",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "radiusX",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "radiusY",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "rotationAngle",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "screenX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0",
        "from": "TouchInit",
        "name": "screenY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "TouchInit",
        "isRequired": true,
        "name": "target",
        "type": {
          "name": "EventTarget"
        }
      }
    ],
    "name": "TouchInit",
    "url": "https://w3c.github.io/touch-events/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "touchInitDict",
            "type": {
              "name": "TouchInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "clientX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "clientY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "force",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "identifier",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "pageX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "pageY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "radiusX",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "radiusY",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "rotationAngle",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "screenX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "screenY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Touch",
        "isReadOnly": true,
        "name": "target",
        "type": {
          "name": "EventTarget"
        }
      }
    ],
    "name": "Touch",
    "url": "https://w3c.github.io/touch-events/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "TouchList",
        "name": "item",
        "returnType": {
          "name": "Touch",
          "params": [
            "nullable"
          ]
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "TouchList",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "TouchList",
    "url": "https://w3c.github.io/touch-events/"
  },
  {
    "inheritsFrom": "EventModifierInit",
    "members": [
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "TouchEventInit",
        "name": "changedTouches",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "Touch"
            }
          ]
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "TouchEventInit",
        "name": "targetTouches",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "Touch"
            }
          ]
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "TouchEventInit",
        "name": "touches",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "Touch"
            }
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "altKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "ctrlKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "metaKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierAltGraph",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierCapsLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierFn",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierFnLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierHyper",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierNumLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierScrollLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSuper",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSymbol",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSymbolLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "shiftKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "0",
        "from": "UIEventInit",
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "null",
        "from": "UIEventInit",
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "TouchEventInit",
    "url": "https://w3c.github.io/touch-events/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "TouchEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "UIEvent",
    "members": [
      {
        "from": "TouchEvent",
        "isReadOnly": true,
        "name": "altKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "TouchEvent",
        "isReadOnly": true,
        "name": "changedTouches",
        "type": {
          "name": "TouchList"
        }
      },
      {
        "from": "TouchEvent",
        "isReadOnly": true,
        "name": "ctrlKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "TouchEvent",
        "isReadOnly": true,
        "name": "metaKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "TouchEvent",
        "isReadOnly": true,
        "name": "shiftKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "TouchEvent",
        "isReadOnly": true,
        "name": "targetTouches",
        "type": {
          "name": "TouchList"
        }
      },
      {
        "from": "TouchEvent",
        "isReadOnly": true,
        "name": "touches",
        "type": {
          "name": "TouchList"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "TouchEvent",
    "url": "https://w3c.github.io/touch-events/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "UIEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "UIEvent",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "0",
        "from": "UIEventInit",
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "null",
        "from": "UIEventInit",
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "UIEventInit",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "FocusEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "UIEvent",
    "members": [
      {
        "from": "FocusEvent",
        "isReadOnly": true,
        "name": "relatedTarget",
        "type": {
          "name": "EventTarget",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FocusEvent",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "UIEventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "FocusEventInit",
        "name": "relatedTarget",
        "type": {
          "name": "EventTarget",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "0",
        "from": "UIEventInit",
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "null",
        "from": "UIEventInit",
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FocusEventInit",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "UIEventInit",
    "members": [
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "altKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "ctrlKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "metaKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierAltGraph",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierCapsLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierFn",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierFnLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierHyper",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierNumLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierScrollLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSuper",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSymbol",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSymbolLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "shiftKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "0",
        "from": "UIEventInit",
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "null",
        "from": "UIEventInit",
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "EventModifierInit",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "WheelEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "MouseEvent",
    "members": [
      {
        "from": "WheelEvent",
        "isConst": true,
        "name": "DOM_DELTA_LINE",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x01"
      },
      {
        "from": "WheelEvent",
        "isConst": true,
        "name": "DOM_DELTA_PAGE",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x02"
      },
      {
        "from": "WheelEvent",
        "isConst": true,
        "name": "DOM_DELTA_PIXEL",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x00"
      },
      {
        "from": "WheelEvent",
        "isReadOnly": true,
        "name": "deltaMode",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "WheelEvent",
        "isReadOnly": true,
        "name": "deltaX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "WheelEvent",
        "isReadOnly": true,
        "name": "deltaY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "WheelEvent",
        "isReadOnly": true,
        "name": "deltaZ",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "clientX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "clientY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "offsetX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "offsetY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "pageX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "pageY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "screenX",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "screenY",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "x",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "MouseEvent",
        "isReadOnly": true,
        "name": "y",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "WheelEvent",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "MouseEventInit",
    "members": [
      {
        "defaultValue": "0",
        "from": "WheelEventInit",
        "name": "deltaMode",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "WheelEventInit",
        "name": "deltaX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "WheelEventInit",
        "name": "deltaY",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "WheelEventInit",
        "name": "deltaZ",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "clientX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "clientY",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "screenX",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0.0",
        "from": "MouseEventInit",
        "name": "screenY",
        "type": {
          "name": "double"
        }
      }
    ],
    "name": "WheelEventInit",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "UIEventInit",
    "members": [
      {
        "defaultValue": "",
        "from": "InputEventInit",
        "name": "data",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "InputEventInit",
        "name": "isComposing",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "0",
        "from": "UIEventInit",
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "null",
        "from": "UIEventInit",
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "InputEventInit",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "KeyboardEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "UIEvent",
    "members": [
      {
        "from": "KeyboardEvent",
        "isConst": true,
        "name": "DOM_KEY_LOCATION_LEFT",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x01"
      },
      {
        "from": "KeyboardEvent",
        "isConst": true,
        "name": "DOM_KEY_LOCATION_NUMPAD",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x03"
      },
      {
        "from": "KeyboardEvent",
        "isConst": true,
        "name": "DOM_KEY_LOCATION_RIGHT",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x02"
      },
      {
        "from": "KeyboardEvent",
        "isConst": true,
        "name": "DOM_KEY_LOCATION_STANDARD",
        "type": {
          "name": "unsigned long"
        },
        "value": "0x00"
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "altKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "code",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "ctrlKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "keyArg",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "KeyboardEvent",
        "name": "getModifierState",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "isComposing",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "key",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "location",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "metaKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "repeat",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "KeyboardEvent",
        "isReadOnly": true,
        "name": "shiftKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "KeyboardEvent",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "EventModifierInit",
    "members": [
      {
        "defaultValue": "",
        "from": "KeyboardEventInit",
        "name": "code",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "KeyboardEventInit",
        "name": "isComposing",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "",
        "from": "KeyboardEventInit",
        "name": "key",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "0",
        "from": "KeyboardEventInit",
        "name": "location",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "defaultValue": "false",
        "from": "KeyboardEventInit",
        "name": "repeat",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "altKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "ctrlKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "metaKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierAltGraph",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierCapsLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierFn",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierFnLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierHyper",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierNumLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierScrollLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSuper",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSymbol",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "modifierSymbolLock",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventModifierInit",
        "name": "shiftKey",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "0",
        "from": "UIEventInit",
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "null",
        "from": "UIEventInit",
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "KeyboardEventInit",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "CompositionEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "UIEvent",
    "members": [
      {
        "from": "CompositionEvent",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "UIEvent",
        "isReadOnly": true,
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "CompositionEvent",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "UIEventInit",
    "members": [
      {
        "defaultValue": "",
        "from": "CompositionEventInit",
        "name": "data",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "0",
        "from": "UIEventInit",
        "name": "detail",
        "type": {
          "name": "long"
        }
      },
      {
        "defaultValue": "null",
        "from": "UIEventInit",
        "name": "view",
        "type": {
          "name": "Window",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "CompositionEventInit",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "MutationEvent",
        "isConst": true,
        "name": "ADDITION",
        "type": {
          "name": "unsigned short"
        },
        "value": "2"
      },
      {
        "from": "MutationEvent",
        "isConst": true,
        "name": "MODIFICATION",
        "type": {
          "name": "unsigned short"
        },
        "value": "1"
      },
      {
        "from": "MutationEvent",
        "isConst": true,
        "name": "REMOVAL",
        "type": {
          "name": "unsigned short"
        },
        "value": "3"
      },
      {
        "from": "MutationEvent",
        "isReadOnly": true,
        "name": "attrChange",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "MutationEvent",
        "isReadOnly": true,
        "name": "attrName",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MutationEvent",
        "name": "initMutationEvent",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "MutationEvent",
        "isReadOnly": true,
        "name": "newValue",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MutationEvent",
        "isReadOnly": true,
        "name": "prevValue",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MutationEvent",
        "isReadOnly": true,
        "name": "relatedNode",
        "type": {
          "name": "Node",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "MutationEvent",
    "url": "https://w3c.github.io/uievents/"
  },
  {
    "name": "AudioContextState",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "suspended",
      "running",
      "closed"
    ]
  },
  {
    "name": "AudioContextLatencyCategory",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "balanced",
      "interactive",
      "playback"
    ]
  },
  {
    "args": [
      {
        "name": "error",
        "type": {
          "name": "DOMException"
        }
      }
    ],
    "name": "DecodeErrorCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "args": [
      {
        "name": "decodedData",
        "type": {
          "name": "AudioBuffer"
        }
      }
    ],
    "name": "DecodeSuccessCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "baseLatency",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createAnalyser",
        "returnType": {
          "name": "AnalyserNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createBiquadFilter",
        "returnType": {
          "name": "BiquadFilterNode"
        }
      },
      {
        "args": [
          {
            "name": "numberOfChannels",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "sampleRate",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createBuffer",
        "returnType": {
          "name": "AudioBuffer"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createBufferSource",
        "returnType": {
          "name": "AudioBufferSourceNode"
        }
      },
      {
        "args": [
          {
            "defaultValue": "6",
            "name": "numberOfInputs",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createChannelMerger",
        "returnType": {
          "name": "ChannelMergerNode"
        }
      },
      {
        "args": [
          {
            "defaultValue": "6",
            "name": "numberOfOutputs",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createChannelSplitter",
        "returnType": {
          "name": "ChannelSplitterNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createConstantSource",
        "returnType": {
          "name": "ConstantSourceNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createConvolver",
        "returnType": {
          "name": "ConvolverNode"
        }
      },
      {
        "args": [
          {
            "name": "maxDelayTime",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createDelay",
        "returnType": {
          "name": "DelayNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createDynamicsCompressor",
        "returnType": {
          "name": "DynamicsCompressorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createGain",
        "returnType": {
          "name": "GainNode"
        }
      },
      {
        "args": [
          {
            "name": "feedforward",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          },
          {
            "name": "feedback",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createIIRFilter",
        "returnType": {
          "name": "IIRFilterNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createOscillator",
        "returnType": {
          "name": "OscillatorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createPanner",
        "returnType": {
          "name": "PannerNode"
        }
      },
      {
        "args": [
          {
            "name": "real",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "imag",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "PeriodicWaveConstraints"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createPeriodicWave",
        "returnType": {
          "name": "PeriodicWave"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "bufferSize",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "2",
            "name": "numberOfInputChannels",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "2",
            "name": "numberOfOutputChannels",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createScriptProcessor",
        "returnType": {
          "name": "ScriptProcessorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createStereoPanner",
        "returnType": {
          "name": "StereoPannerNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createWaveShaper",
        "returnType": {
          "name": "WaveShaperNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "currentTime",
        "type": {
          "name": "double"
        }
      },
      {
        "args": [
          {
            "name": "audioData",
            "type": {
              "name": "ArrayBuffer"
            }
          },
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "DecodeSuccessCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "DecodeErrorCallback"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "decodeAudioData",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "AudioBuffer"
            }
          ]
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "destination",
        "type": {
          "name": "AudioDestinationNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "listener",
        "type": {
          "name": "AudioListener"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "onstatechange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "resume",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "sampleRate",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "AudioContextState"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "suspend",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "BaseAudioContext",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "contextOptions",
            "optional": true,
            "type": {
              "name": "AudioContextOptions"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "BaseAudioContext",
    "members": [
      {
        "from": "AudioContext",
        "name": "close",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "mediaElement",
            "type": {
              "name": "HTMLMediaElement"
            }
          }
        ],
        "from": "AudioContext",
        "name": "createMediaElementSource",
        "returnType": {
          "name": "MediaElementAudioSourceNode"
        }
      },
      {
        "from": "AudioContext",
        "name": "createMediaStreamDestination",
        "returnType": {
          "name": "MediaStreamAudioDestinationNode"
        }
      },
      {
        "args": [
          {
            "name": "mediaStream",
            "type": {
              "name": "MediaStream"
            }
          }
        ],
        "from": "AudioContext",
        "name": "createMediaStreamSource",
        "returnType": {
          "name": "MediaStreamAudioSourceNode"
        }
      },
      {
        "from": "AudioContext",
        "name": "getOutputTimestamp",
        "returnType": {
          "name": "AudioTimestamp"
        }
      },
      {
        "from": "AudioContext",
        "isReadOnly": true,
        "name": "outputLatency",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "baseLatency",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createAnalyser",
        "returnType": {
          "name": "AnalyserNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createBiquadFilter",
        "returnType": {
          "name": "BiquadFilterNode"
        }
      },
      {
        "args": [
          {
            "name": "numberOfChannels",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "sampleRate",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createBuffer",
        "returnType": {
          "name": "AudioBuffer"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createBufferSource",
        "returnType": {
          "name": "AudioBufferSourceNode"
        }
      },
      {
        "args": [
          {
            "defaultValue": "6",
            "name": "numberOfInputs",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createChannelMerger",
        "returnType": {
          "name": "ChannelMergerNode"
        }
      },
      {
        "args": [
          {
            "defaultValue": "6",
            "name": "numberOfOutputs",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createChannelSplitter",
        "returnType": {
          "name": "ChannelSplitterNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createConstantSource",
        "returnType": {
          "name": "ConstantSourceNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createConvolver",
        "returnType": {
          "name": "ConvolverNode"
        }
      },
      {
        "args": [
          {
            "name": "maxDelayTime",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createDelay",
        "returnType": {
          "name": "DelayNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createDynamicsCompressor",
        "returnType": {
          "name": "DynamicsCompressorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createGain",
        "returnType": {
          "name": "GainNode"
        }
      },
      {
        "args": [
          {
            "name": "feedforward",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          },
          {
            "name": "feedback",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createIIRFilter",
        "returnType": {
          "name": "IIRFilterNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createOscillator",
        "returnType": {
          "name": "OscillatorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createPanner",
        "returnType": {
          "name": "PannerNode"
        }
      },
      {
        "args": [
          {
            "name": "real",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "imag",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "PeriodicWaveConstraints"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createPeriodicWave",
        "returnType": {
          "name": "PeriodicWave"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "bufferSize",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "2",
            "name": "numberOfInputChannels",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "2",
            "name": "numberOfOutputChannels",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createScriptProcessor",
        "returnType": {
          "name": "ScriptProcessorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createStereoPanner",
        "returnType": {
          "name": "StereoPannerNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createWaveShaper",
        "returnType": {
          "name": "WaveShaperNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "currentTime",
        "type": {
          "name": "double"
        }
      },
      {
        "args": [
          {
            "name": "audioData",
            "type": {
              "name": "ArrayBuffer"
            }
          },
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "DecodeSuccessCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "DecodeErrorCallback"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "decodeAudioData",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "AudioBuffer"
            }
          ]
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "destination",
        "type": {
          "name": "AudioDestinationNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "listener",
        "type": {
          "name": "AudioListener"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "onstatechange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "resume",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "sampleRate",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "AudioContextState"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "suspend",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "AudioContext",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "defaultValue": "interactive",
        "from": "AudioContextOptions",
        "name": "latencyHint",
        "type": {
          "types": [
            {
              "name": "AudioContextLatencyCategory"
            },
            {
              "name": "double"
            }
          ]
        }
      }
    ],
    "name": "AudioContextOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "AudioTimestamp",
        "name": "contextTime",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "AudioTimestamp",
        "name": "performanceTime",
        "type": {
          "name": "DOMHighResTimeStamp"
        }
      }
    ],
    "name": "AudioTimestamp",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "numberOfChannels",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "sampleRate",
            "type": {
              "name": "float"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "BaseAudioContext",
    "members": [
      {
        "from": "OfflineAudioContext",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "OfflineAudioContext",
        "name": "oncomplete",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "OfflineAudioContext",
        "name": "resume",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "OfflineAudioContext",
        "name": "startRendering",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "AudioBuffer"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "suspendTime",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "OfflineAudioContext",
        "name": "suspend",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "baseLatency",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createAnalyser",
        "returnType": {
          "name": "AnalyserNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createBiquadFilter",
        "returnType": {
          "name": "BiquadFilterNode"
        }
      },
      {
        "args": [
          {
            "name": "numberOfChannels",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "sampleRate",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createBuffer",
        "returnType": {
          "name": "AudioBuffer"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createBufferSource",
        "returnType": {
          "name": "AudioBufferSourceNode"
        }
      },
      {
        "args": [
          {
            "defaultValue": "6",
            "name": "numberOfInputs",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createChannelMerger",
        "returnType": {
          "name": "ChannelMergerNode"
        }
      },
      {
        "args": [
          {
            "defaultValue": "6",
            "name": "numberOfOutputs",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createChannelSplitter",
        "returnType": {
          "name": "ChannelSplitterNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createConstantSource",
        "returnType": {
          "name": "ConstantSourceNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createConvolver",
        "returnType": {
          "name": "ConvolverNode"
        }
      },
      {
        "args": [
          {
            "name": "maxDelayTime",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createDelay",
        "returnType": {
          "name": "DelayNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createDynamicsCompressor",
        "returnType": {
          "name": "DynamicsCompressorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createGain",
        "returnType": {
          "name": "GainNode"
        }
      },
      {
        "args": [
          {
            "name": "feedforward",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          },
          {
            "name": "feedback",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "double"
                }
              ]
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createIIRFilter",
        "returnType": {
          "name": "IIRFilterNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createOscillator",
        "returnType": {
          "name": "OscillatorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createPanner",
        "returnType": {
          "name": "PannerNode"
        }
      },
      {
        "args": [
          {
            "name": "real",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "imag",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "constraints",
            "optional": true,
            "type": {
              "name": "PeriodicWaveConstraints"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createPeriodicWave",
        "returnType": {
          "name": "PeriodicWave"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "bufferSize",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "2",
            "name": "numberOfInputChannels",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "2",
            "name": "numberOfOutputChannels",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "createScriptProcessor",
        "returnType": {
          "name": "ScriptProcessorNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createStereoPanner",
        "returnType": {
          "name": "StereoPannerNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "createWaveShaper",
        "returnType": {
          "name": "WaveShaperNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "currentTime",
        "type": {
          "name": "double"
        }
      },
      {
        "args": [
          {
            "name": "audioData",
            "type": {
              "name": "ArrayBuffer"
            }
          },
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "DecodeSuccessCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "DecodeErrorCallback"
            }
          }
        ],
        "from": "BaseAudioContext",
        "name": "decodeAudioData",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "AudioBuffer"
            }
          ]
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "destination",
        "type": {
          "name": "AudioDestinationNode"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "listener",
        "type": {
          "name": "AudioListener"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "onstatechange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "resume",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "sampleRate",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "BaseAudioContext",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "AudioContextState"
        }
      },
      {
        "from": "BaseAudioContext",
        "name": "suspend",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "OfflineAudioContext",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "OfflineAudioCompletionEvent",
        "isReadOnly": true,
        "name": "renderedBuffer",
        "type": {
          "name": "AudioBuffer"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "OfflineAudioCompletionEvent",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "name": "ChannelCountMode",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "max",
      "clamped-max",
      "explicit"
    ]
  },
  {
    "name": "ChannelInterpretation",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "speakers",
      "discrete"
    ]
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "AudioNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "AudioNodeOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AudioDestinationNode",
        "isReadOnly": true,
        "name": "maxChannelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "AudioDestinationNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "cancelTime",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioParam",
        "name": "cancelAndHoldAtTime",
        "returnType": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "cancelTime",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioParam",
        "name": "cancelScheduledValues",
        "returnType": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioParam",
        "isReadOnly": true,
        "name": "defaultValue",
        "type": {
          "name": "float"
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "endTime",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioParam",
        "name": "exponentialRampToValueAtTime",
        "returnType": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "endTime",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioParam",
        "name": "linearRampToValueAtTime",
        "returnType": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioParam",
        "isReadOnly": true,
        "name": "maxValue",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioParam",
        "isReadOnly": true,
        "name": "minValue",
        "type": {
          "name": "float"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "startTime",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "timeConstant",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "AudioParam",
        "name": "setTargetAtTime",
        "returnType": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "startTime",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioParam",
        "name": "setValueAtTime",
        "returnType": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "values",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "startTime",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "duration",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioParam",
        "name": "setValueCurveAtTime",
        "returnType": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioParam",
        "name": "value",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "AudioParam",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AudioScheduledSourceNode",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "AudioScheduledSourceNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "GainOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "GainNode",
        "isReadOnly": true,
        "name": "gain",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "GainNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "1.0",
        "from": "GainOptions",
        "name": "gain",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "GainOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "DelayOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "DelayNode",
        "isReadOnly": true,
        "name": "delayTime",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "DelayNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "0",
        "from": "DelayOptions",
        "name": "delayTime",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "1",
        "from": "DelayOptions",
        "name": "maxDelayTime",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "DelayOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "type": {
              "name": "AudioBufferOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "channelNumber",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "startInChannel",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioBuffer",
        "name": "copyFromChannel",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "source",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "channelNumber",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "startInChannel",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioBuffer",
        "name": "copyToChannel",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioBuffer",
        "isReadOnly": true,
        "name": "duration",
        "type": {
          "name": "double"
        }
      },
      {
        "args": [
          {
            "name": "channel",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioBuffer",
        "name": "getChannelData",
        "returnType": {
          "name": "Float32Array"
        }
      },
      {
        "from": "AudioBuffer",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioBuffer",
        "isReadOnly": true,
        "name": "numberOfChannels",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioBuffer",
        "isReadOnly": true,
        "name": "sampleRate",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "AudioBuffer",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "AudioBufferOptions",
        "isRequired": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "defaultValue": "1",
        "from": "AudioBufferOptions",
        "name": "numberOfChannels",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioBufferOptions",
        "name": "sampleRate",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "AudioBufferOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "AudioBufferSourceOptions",
            "type": {
              "name": "optional"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioScheduledSourceNode",
    "members": [
      {
        "from": "AudioBufferSourceNode",
        "name": "buffer",
        "type": {
          "name": "AudioBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "AudioBufferSourceNode",
        "isReadOnly": true,
        "name": "detune",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioBufferSourceNode",
        "name": "loop",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "AudioBufferSourceNode",
        "name": "loopEnd",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "AudioBufferSourceNode",
        "name": "loopStart",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "AudioBufferSourceNode",
        "isReadOnly": true,
        "name": "playbackRate",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "when",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "duration",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioBufferSourceNode",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioScheduledSourceNode",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "AudioBufferSourceNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "AudioBufferSourceOptions",
        "name": "buffer",
        "type": {
          "name": "AudioBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "0",
        "from": "AudioBufferSourceOptions",
        "name": "detune",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "false",
        "from": "AudioBufferSourceOptions",
        "name": "loop",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "0",
        "from": "AudioBufferSourceOptions",
        "name": "loopEnd",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0",
        "from": "AudioBufferSourceOptions",
        "name": "loopStart",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "1",
        "from": "AudioBufferSourceOptions",
        "name": "playbackRate",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "AudioBufferSourceOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ConstantSourceOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioScheduledSourceNode",
    "members": [
      {
        "from": "ConstantSourceNode",
        "isReadOnly": true,
        "name": "offset",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioScheduledSourceNode",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "ConstantSourceNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "defaultValue": "1",
        "from": "ConstantSourceOptions",
        "name": "offset",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "ConstantSourceOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "AudioContext"
            }
          },
          {
            "name": "options",
            "type": {
              "name": "MediaElementAudioSourceOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "MediaElementAudioSourceNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "MediaElementAudioSourceOptions",
        "isRequired": true,
        "name": "mediaElement",
        "type": {
          "name": "HTMLMediaElement"
        }
      }
    ],
    "name": "MediaElementAudioSourceOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "AudioWorklet"
      },
      {
        "identifiers": [
          "Worklet",
          "AudioWorklet"
        ],
        "name": "Global"
      }
    ],
    "inheritsFrom": "WorkletGlobalScope",
    "members": [
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "processorCtor",
            "type": {
              "name": "VoidFunction"
            }
          }
        ],
        "from": "AudioWorkletGlobalScope",
        "name": "registerProcessor",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "AudioWorkletGlobalScope",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "AudioWorkletNodeOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AudioWorkletNode",
        "name": "onmessage",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "message",
            "type": {
              "name": "any"
            }
          },
          {
            "name": "transfer",
            "optional": true,
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "object"
                }
              ]
            }
          }
        ],
        "from": "AudioWorkletNode",
        "name": "postMessage",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "AudioWorkletNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "AudioWorkletNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioWorkletNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioWorkletNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "from": "AudioWorkletNodeOptions",
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioWorkletNodeOptions",
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "AudioWorkletNodeOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "EventTarget",
    "members": [
      {
        "from": "AudioWorkletProcessor",
        "isReadOnly": true,
        "name": "contextInfo",
        "type": {
          "name": "AudioContextInfo"
        }
      },
      {
        "from": "AudioWorkletProcessor",
        "name": "onmessage",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "message",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "AudioWorkletProcessor",
        "name": "postMessage",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "AudioWorkletProcessor",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "defaultValue": "0",
        "from": "AudioParamDescriptor",
        "name": "defaultValue",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioParamDescriptor",
        "name": "maxValue",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioParamDescriptor",
        "name": "minValue",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioParamDescriptor",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AudioParamDescriptor",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "AudioContextInfo",
        "name": "currentTime",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "AudioContextInfo",
        "name": "sampleRate",
        "type": {
          "name": "float"
        }
      }
    ],
    "name": "AudioContextInfo",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "ScriptProcessorNode",
        "isReadOnly": true,
        "name": "bufferSize",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "ScriptProcessorNode",
        "name": "onaudioprocess",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "ScriptProcessorNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "AudioProcessingEvent",
        "isReadOnly": true,
        "name": "inputBuffer",
        "type": {
          "name": "AudioBuffer"
        }
      },
      {
        "from": "AudioProcessingEvent",
        "isReadOnly": true,
        "name": "outputBuffer",
        "type": {
          "name": "AudioBuffer"
        }
      },
      {
        "from": "AudioProcessingEvent",
        "isReadOnly": true,
        "name": "playbackTime",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "AudioProcessingEvent",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "name": "PanningModelType",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "equalpower",
      "HRTF"
    ]
  },
  {
    "name": "DistanceModelType",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "linear",
      "inverse",
      "exponential"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "PannerOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "PannerNode",
        "name": "coneInnerAngle",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PannerNode",
        "name": "coneOuterAngle",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PannerNode",
        "name": "coneOuterGain",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PannerNode",
        "name": "distanceModel",
        "type": {
          "name": "DistanceModelType"
        }
      },
      {
        "from": "PannerNode",
        "name": "maxDistance",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PannerNode",
        "isReadOnly": true,
        "name": "orientationX",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "PannerNode",
        "isReadOnly": true,
        "name": "orientationY",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "PannerNode",
        "isReadOnly": true,
        "name": "orientationZ",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "PannerNode",
        "name": "panningModel",
        "type": {
          "name": "PanningModelType"
        }
      },
      {
        "from": "PannerNode",
        "isReadOnly": true,
        "name": "positionX",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "PannerNode",
        "isReadOnly": true,
        "name": "positionY",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "PannerNode",
        "isReadOnly": true,
        "name": "positionZ",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "PannerNode",
        "name": "refDistance",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "PannerNode",
        "name": "rolloffFactor",
        "type": {
          "name": "double"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "PannerNode",
        "name": "setOrientation",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "PannerNode",
        "name": "setPosition",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "PannerNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "360",
        "from": "PannerOptions",
        "name": "coneInnerAngle",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "360",
        "from": "PannerOptions",
        "name": "coneOuterAngle",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "0",
        "from": "PannerOptions",
        "name": "coneOuterGain",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "inverse",
        "from": "PannerOptions",
        "name": "distanceModel",
        "type": {
          "name": "DistanceModelType"
        }
      },
      {
        "defaultValue": "10000",
        "from": "PannerOptions",
        "name": "maxDistance",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "1",
        "from": "PannerOptions",
        "name": "orientationX",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "PannerOptions",
        "name": "orientationY",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "PannerOptions",
        "name": "orientationZ",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "equalpower",
        "from": "PannerOptions",
        "name": "panningModel",
        "type": {
          "name": "PanningModelType"
        }
      },
      {
        "defaultValue": "0",
        "from": "PannerOptions",
        "name": "positionX",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "PannerOptions",
        "name": "positionY",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "PannerOptions",
        "name": "positionZ",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "1",
        "from": "PannerOptions",
        "name": "refDistance",
        "type": {
          "name": "double"
        }
      },
      {
        "defaultValue": "1",
        "from": "PannerOptions",
        "name": "rolloffFactor",
        "type": {
          "name": "double"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "PannerOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "forwardX",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "forwardY",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "forwardZ",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "positionX",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "positionY",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "positionZ",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "xUp",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "yUp",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "zUp",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "AudioListener",
        "name": "setOrientation",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "float"
            }
          }
        ],
        "from": "AudioListener",
        "name": "setPosition",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "upX",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "upY",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioListener",
        "isReadOnly": true,
        "name": "upZ",
        "type": {
          "name": "AudioParam"
        }
      }
    ],
    "name": "AudioListener",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "StereoPannerOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "StereoPannerNode",
        "isReadOnly": true,
        "name": "pan",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "StereoPannerNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "0",
        "from": "StereoPannerOptions",
        "name": "pan",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "StereoPannerOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ConvolverOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "ConvolverNode",
        "name": "buffer",
        "type": {
          "name": "AudioBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "ConvolverNode",
        "name": "normalize",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "ConvolverNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "from": "ConvolverOptions",
        "name": "buffer",
        "type": {
          "name": "AudioBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "ConvolverOptions",
        "name": "disableNormalization",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "ConvolverOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "AnalyserOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AnalyserNode",
        "name": "fftSize",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AnalyserNode",
        "isReadOnly": true,
        "name": "frequencyBinCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "Uint8Array"
            }
          }
        ],
        "from": "AnalyserNode",
        "name": "getByteFrequencyData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "Uint8Array"
            }
          }
        ],
        "from": "AnalyserNode",
        "name": "getByteTimeDomainData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "AnalyserNode",
        "name": "getFloatFrequencyData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "AnalyserNode",
        "name": "getFloatTimeDomainData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AnalyserNode",
        "name": "maxDecibels",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AnalyserNode",
        "name": "minDecibels",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AnalyserNode",
        "name": "smoothingTimeConstant",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "AnalyserNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "2048",
        "from": "AnalyserOptions",
        "name": "fftSize",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "defaultValue": "-30",
        "from": "AnalyserOptions",
        "name": "maxDecibels",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "-100",
        "from": "AnalyserOptions",
        "name": "minDecibels",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0.8",
        "from": "AnalyserOptions",
        "name": "smoothingTimeConstant",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "AnalyserOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ChannelSplitterOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "ChannelSplitterNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "6",
        "from": "ChannelSplitterOptions",
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "ChannelSplitterOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "ChannelSplitterOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "ChannelMergerNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "6",
        "from": "ChannelMergerOptions",
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "ChannelMergerOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "DynamicsCompressorOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "DynamicsCompressorNode",
        "isReadOnly": true,
        "name": "attack",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "DynamicsCompressorNode",
        "isReadOnly": true,
        "name": "knee",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "DynamicsCompressorNode",
        "isReadOnly": true,
        "name": "ratio",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "DynamicsCompressorNode",
        "isReadOnly": true,
        "name": "reduction",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "DynamicsCompressorNode",
        "isReadOnly": true,
        "name": "release",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "DynamicsCompressorNode",
        "isReadOnly": true,
        "name": "threshold",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "DynamicsCompressorNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "0.003",
        "from": "DynamicsCompressorOptions",
        "name": "attack",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "30",
        "from": "DynamicsCompressorOptions",
        "name": "knee",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "12",
        "from": "DynamicsCompressorOptions",
        "name": "ratio",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0.25",
        "from": "DynamicsCompressorOptions",
        "name": "release",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "-24",
        "from": "DynamicsCompressorOptions",
        "name": "threshold",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "DynamicsCompressorOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "name": "BiquadFilterType",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "lowpass",
      "highpass",
      "bandpass",
      "lowshelf",
      "highshelf",
      "peaking",
      "notch",
      "allpass"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "BiquadFilterOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "BiquadFilterNode",
        "isReadOnly": true,
        "name": "Q",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "BiquadFilterNode",
        "isReadOnly": true,
        "name": "detune",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "BiquadFilterNode",
        "isReadOnly": true,
        "name": "frequency",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "BiquadFilterNode",
        "isReadOnly": true,
        "name": "gain",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "frequencyHz",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "magResponse",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "phaseResponse",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "BiquadFilterNode",
        "name": "getFrequencyResponse",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "BiquadFilterNode",
        "name": "type",
        "type": {
          "name": "BiquadFilterType"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "BiquadFilterNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "1",
        "from": "BiquadFilterOptions",
        "name": "Q",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "BiquadFilterOptions",
        "name": "detune",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "350",
        "from": "BiquadFilterOptions",
        "name": "frequency",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "0",
        "from": "BiquadFilterOptions",
        "name": "gain",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "lowpass",
        "from": "BiquadFilterOptions",
        "name": "type",
        "type": {
          "name": "BiquadFilterType"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "BiquadFilterOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "type": {
              "name": "IIRFilterOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "args": [
          {
            "name": "frequencyHz",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "magResponse",
            "type": {
              "name": "Float32Array"
            }
          },
          {
            "name": "phaseResponse",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "IIRFilterNode",
        "name": "getFrequencyResponse",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "IIRFilterNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "from": "IIRFilterOptions",
        "isRequired": true,
        "name": "feedback",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      },
      {
        "from": "IIRFilterOptions",
        "isRequired": true,
        "name": "feedforward",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "double"
            }
          ]
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "IIRFilterOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "name": "OverSampleType",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "none",
      "2x",
      "4x"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "WaveShaperOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "WaveShaperNode",
        "name": "curve",
        "type": {
          "name": "Float32Array",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "WaveShaperNode",
        "name": "oversample",
        "type": {
          "name": "OverSampleType"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "WaveShaperNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "from": "WaveShaperOptions",
        "name": "curve",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "float"
            }
          ]
        }
      },
      {
        "defaultValue": "none",
        "from": "WaveShaperOptions",
        "name": "oversample",
        "type": {
          "name": "OverSampleType"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "WaveShaperOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "name": "OscillatorType",
    "url": "https://w3c.github.io/user-timing/",
    "value": [
      "sine",
      "square",
      "sawtooth",
      "triangle",
      "custom"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "OscillatorOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioScheduledSourceNode",
    "members": [
      {
        "from": "OscillatorNode",
        "isReadOnly": true,
        "name": "detune",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "from": "OscillatorNode",
        "isReadOnly": true,
        "name": "frequency",
        "type": {
          "name": "AudioParam"
        }
      },
      {
        "args": [
          {
            "name": "periodicWave",
            "type": {
              "name": "PeriodicWave"
            }
          }
        ],
        "from": "OscillatorNode",
        "name": "setPeriodicWave",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "OscillatorNode",
        "name": "type",
        "type": {
          "name": "OscillatorType"
        }
      },
      {
        "from": "AudioScheduledSourceNode",
        "name": "onended",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "start",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "defaultValue": "0",
            "name": "when",
            "optional": true,
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "AudioScheduledSourceNode",
        "name": "stop",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "OscillatorNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "AudioNodeOptions",
    "members": [
      {
        "defaultValue": "0",
        "from": "OscillatorOptions",
        "name": "detune",
        "type": {
          "name": "float"
        }
      },
      {
        "defaultValue": "440",
        "from": "OscillatorOptions",
        "name": "frequency",
        "type": {
          "name": "float"
        }
      },
      {
        "from": "OscillatorOptions",
        "name": "periodicWave",
        "type": {
          "name": "PeriodicWave"
        }
      },
      {
        "defaultValue": "sine",
        "from": "OscillatorOptions",
        "name": "type",
        "type": {
          "name": "OscillatorType"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNodeOptions",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      }
    ],
    "name": "OscillatorOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "BaseAudioContext"
            }
          },
          {
            "name": "options",
            "type": {
              "name": "PeriodicWaveOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
    ],
    "name": "PeriodicWave",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "PeriodicWaveConstraints",
        "name": "disableNormalization",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PeriodicWaveConstraints",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "inheritsFrom": "PeriodicWaveConstraints",
    "members": [
      {
        "from": "PeriodicWaveOptions",
        "name": "imag",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "float"
            }
          ]
        }
      },
      {
        "from": "PeriodicWaveOptions",
        "name": "real",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "float"
            }
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "PeriodicWaveConstraints",
        "name": "disableNormalization",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "PeriodicWaveOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "AudioContext"
            }
          },
          {
            "name": "options",
            "type": {
              "name": "MediaStreamAudioSourceOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "MediaStreamAudioSourceNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "MediaStreamAudioSourceOptions",
        "isRequired": true,
        "name": "mediaStream",
        "type": {
          "name": "MediaStream"
        }
      }
    ],
    "name": "MediaStreamAudioSourceOptions",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "context",
            "type": {
              "name": "AudioContext"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "AudioNodeOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "AudioNode",
    "members": [
      {
        "from": "MediaStreamAudioDestinationNode",
        "isReadOnly": true,
        "name": "stream",
        "type": {
          "name": "MediaStream"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCount",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelCountMode",
        "type": {
          "name": "ChannelCountMode"
        }
      },
      {
        "from": "AudioNode",
        "name": "channelInterpretation",
        "type": {
          "name": "ChannelInterpretation"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "defaultValue": "0",
            "name": "input",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "AudioNode"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "defaultValue": "0",
            "name": "output",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "connect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "context",
        "type": {
          "name": "AudioContext"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "input",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioNode"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          },
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "output",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "destination",
            "type": {
              "name": "AudioParam"
            }
          }
        ],
        "from": "AudioNode",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfInputs",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "AudioNode",
        "isReadOnly": true,
        "name": "numberOfOutputs",
        "type": {
          "name": "unsigned long"
        }
      }
    ],
    "name": "MediaStreamAudioDestinationNode",
    "url": "https://w3c.github.io/user-timing/"
  },
  {
    "members": [
      {
        "from": "BluetoothDataFilterInit",
        "name": "dataPrefix",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "from": "BluetoothDataFilterInit",
        "name": "mask",
        "type": {
          "name": "BufferSource"
        }
      }
    ],
    "name": "BluetoothDataFilterInit",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothLEScanFilterInit",
        "name": "manufacturerData",
        "type": {
          "name": "object"
        }
      },
      {
        "from": "BluetoothLEScanFilterInit",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "BluetoothLEScanFilterInit",
        "name": "namePrefix",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "BluetoothLEScanFilterInit",
        "name": "serviceData",
        "type": {
          "name": "object"
        }
      },
      {
        "from": "BluetoothLEScanFilterInit",
        "name": "services",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "BluetoothServiceUUID"
            }
          ]
        }
      }
    ],
    "name": "BluetoothLEScanFilterInit",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "RequestDeviceOptions",
        "name": "acceptAllDevices",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "RequestDeviceOptions",
        "name": "filters",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "BluetoothLEScanFilterInit"
            }
          ]
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "RequestDeviceOptions",
        "name": "optionalServices",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "BluetoothServiceUUID"
            }
          ]
        }
      }
    ],
    "name": "RequestDeviceOptions",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "Bluetooth",
        "name": "getAvailability",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "boolean"
            }
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "Bluetooth",
        "name": "onavailabilitychanged",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "Bluetooth",
        "isReadOnly": true,
        "name": "referringDevice",
        "type": {
          "name": "BluetoothDevice",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "RequestDeviceOptions"
            }
          }
        ],
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "Bluetooth",
        "name": "requestDevice",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothDevice"
            }
          ]
        }
      }
    ],
    "name": "Bluetooth",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "AllowedBluetoothDevice",
        "isRequired": true,
        "name": "allowedServices",
        "type": {
          "types": [
            {
              "name": "DOMString"
            },
            {
              "name": "sequence",
              "params": [
                {
                  "name": "UUID"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "AllowedBluetoothDevice",
        "isRequired": true,
        "name": "deviceId",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "AllowedBluetoothDevice",
        "isRequired": true,
        "name": "mayUseGATT",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "AllowedBluetoothDevice",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "BluetoothPermissionData",
        "isRequired": true,
        "name": "allowedDevices",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "AllowedBluetoothDevice"
            }
          ]
        }
      }
    ],
    "name": "BluetoothPermissionData",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "inheritsFrom": "PermissionStatus",
    "members": [
      {
        "from": "BluetoothPermissionResult",
        "name": "devices",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "BluetoothDevice"
            }
          ]
        }
      },
      {
        "from": "PermissionStatus",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PermissionStatus",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "PermissionState"
        }
      }
    ],
    "name": "BluetoothPermissionResult",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "initDict",
            "optional": true,
            "type": {
              "name": "ValueEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "ValueEvent",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "any"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ValueEvent",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "defaultValue": "null",
        "from": "ValueEventInit",
        "name": "value",
        "type": {
          "name": "any"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "ValueEventInit",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothDevice",
        "isReadOnly": true,
        "name": "gatt",
        "type": {
          "name": "BluetoothRemoteGATTServer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothDevice",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "BluetoothDevice",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothDevice",
        "name": "unwatchAdvertisements",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "BluetoothDevice",
        "name": "watchAdvertisements",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "BluetoothDevice",
        "isReadOnly": true,
        "name": "watchingAdvertisements",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "BluetoothDevice",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothManufacturerDataMap",
        "isReadOnly": true,
        "keyType": {
          "name": "unsigned short"
        },
        "valueType": {
          "name": "DataView"
        }
      }
    ],
    "name": "BluetoothManufacturerDataMap",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothServiceDataMap",
        "isReadOnly": true,
        "keyType": {
          "name": "UUID"
        },
        "valueType": {
          "name": "DataView"
        }
      }
    ],
    "name": "BluetoothServiceDataMap",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "init",
            "type": {
              "name": "BluetoothAdvertisingEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "appearance",
        "type": {
          "name": "unsigned short",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "device",
        "type": {
          "name": "BluetoothDevice"
        }
      },
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "manufacturerData",
        "type": {
          "name": "BluetoothManufacturerDataMap"
        }
      },
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "rssi",
        "type": {
          "name": "byte",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "serviceData",
        "type": {
          "name": "BluetoothServiceDataMap"
        }
      },
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "txPower",
        "type": {
          "name": "byte",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothAdvertisingEvent",
        "isReadOnly": true,
        "name": "uuids",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "UUID"
            }
          ]
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "BluetoothAdvertisingEvent",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "BluetoothAdvertisingEventInit",
        "name": "appearance",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "BluetoothAdvertisingEventInit",
        "isRequired": true,
        "name": "device",
        "type": {
          "name": "BluetoothDevice"
        }
      },
      {
        "from": "BluetoothAdvertisingEventInit",
        "name": "manufacturerData",
        "type": {
          "name": "Map"
        }
      },
      {
        "from": "BluetoothAdvertisingEventInit",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "BluetoothAdvertisingEventInit",
        "name": "rssi",
        "type": {
          "name": "byte"
        }
      },
      {
        "from": "BluetoothAdvertisingEventInit",
        "name": "serviceData",
        "type": {
          "name": "Map"
        }
      },
      {
        "from": "BluetoothAdvertisingEventInit",
        "name": "txPower",
        "type": {
          "name": "byte"
        }
      },
      {
        "from": "BluetoothAdvertisingEventInit",
        "name": "uuids",
        "type": {
          "name": "sequence",
          "params": [
            {
              "types": [
                {
                  "name": "DOMString"
                },
                {
                  "name": "unsigned long"
                }
              ]
            }
          ]
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "BluetoothAdvertisingEventInit",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothRemoteGATTServer",
        "name": "connect",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothRemoteGATTServer"
            }
          ]
        }
      },
      {
        "from": "BluetoothRemoteGATTServer",
        "isReadOnly": true,
        "name": "connected",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothRemoteGATTServer",
        "isReadOnly": true,
        "name": "device",
        "type": {
          "name": "BluetoothDevice"
        }
      },
      {
        "from": "BluetoothRemoteGATTServer",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "service",
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTServer",
        "name": "getPrimaryService",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothRemoteGATTService"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "service",
            "optional": true,
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTServer",
        "name": "getPrimaryServices",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothRemoteGATTService"
                }
              ]
            }
          ]
        }
      }
    ],
    "name": "BluetoothRemoteGATTServer",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothRemoteGATTService",
        "isReadOnly": true,
        "name": "device",
        "type": {
          "name": "BluetoothDevice"
        }
      },
      {
        "args": [
          {
            "name": "characteristic",
            "type": {
              "name": "BluetoothCharacteristicUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTService",
        "name": "getCharacteristic",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothRemoteGATTCharacteristic"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "characteristic",
            "optional": true,
            "type": {
              "name": "BluetoothCharacteristicUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTService",
        "name": "getCharacteristics",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothRemoteGATTCharacteristic"
                }
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "service",
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTService",
        "name": "getIncludedService",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothRemoteGATTService"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "service",
            "optional": true,
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTService",
        "name": "getIncludedServices",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothRemoteGATTService"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "BluetoothRemoteGATTService",
        "isReadOnly": true,
        "name": "isPrimary",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothRemoteGATTService",
        "isReadOnly": true,
        "name": "uuid",
        "type": {
          "name": "UUID"
        }
      }
    ],
    "name": "BluetoothRemoteGATTService",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "descriptor",
            "type": {
              "name": "BluetoothDescriptorUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTCharacteristic",
        "name": "getDescriptor",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothRemoteGATTDescriptor"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "descriptor",
            "optional": true,
            "type": {
              "name": "BluetoothDescriptorUUID"
            }
          }
        ],
        "from": "BluetoothRemoteGATTCharacteristic",
        "name": "getDescriptors",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothRemoteGATTDescriptor"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "BluetoothRemoteGATTCharacteristic",
        "isReadOnly": true,
        "name": "properties",
        "type": {
          "name": "BluetoothCharacteristicProperties"
        }
      },
      {
        "from": "BluetoothRemoteGATTCharacteristic",
        "name": "readValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "DataView"
            }
          ]
        }
      },
      {
        "from": "BluetoothRemoteGATTCharacteristic",
        "isReadOnly": true,
        "name": "service",
        "type": {
          "name": "BluetoothRemoteGATTService"
        }
      },
      {
        "from": "BluetoothRemoteGATTCharacteristic",
        "name": "startNotifications",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothRemoteGATTCharacteristic"
            }
          ]
        }
      },
      {
        "from": "BluetoothRemoteGATTCharacteristic",
        "name": "stopNotifications",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothRemoteGATTCharacteristic"
            }
          ]
        }
      },
      {
        "from": "BluetoothRemoteGATTCharacteristic",
        "isReadOnly": true,
        "name": "uuid",
        "type": {
          "name": "UUID"
        }
      },
      {
        "from": "BluetoothRemoteGATTCharacteristic",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "DataView",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "BluetoothRemoteGATTCharacteristic",
        "name": "writeValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "BluetoothRemoteGATTCharacteristic",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "authenticatedSignedWrites",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "broadcast",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "indicate",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "notify",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "read",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "reliableWrite",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "writableAuxiliaries",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "write",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothCharacteristicProperties",
        "isReadOnly": true,
        "name": "writeWithoutResponse",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "BluetoothCharacteristicProperties",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "from": "BluetoothRemoteGATTDescriptor",
        "isReadOnly": true,
        "name": "characteristic",
        "type": {
          "name": "BluetoothRemoteGATTCharacteristic"
        }
      },
      {
        "from": "BluetoothRemoteGATTDescriptor",
        "name": "readValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "DataView"
            }
          ]
        }
      },
      {
        "from": "BluetoothRemoteGATTDescriptor",
        "isReadOnly": true,
        "name": "uuid",
        "type": {
          "name": "UUID"
        }
      },
      {
        "from": "BluetoothRemoteGATTDescriptor",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "DataView",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "BluetoothRemoteGATTDescriptor",
        "name": "writeValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "BluetoothRemoteGATTDescriptor",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "CharacteristicEventHandlers",
        "name": "oncharacteristicvaluechanged",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "CharacteristicEventHandlers",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "BluetoothDeviceEventHandlers",
        "name": "ongattserverdisconnected",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "BluetoothDeviceEventHandlers",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "ServiceEventHandlers",
        "name": "onserviceadded",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onservicechanged",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onserviceremoved",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "ServiceEventHandlers",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "name": "UUID",
    "type": {
      "name": "DOMString"
    },
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "members": [
      {
        "args": [
          {
            "attrs": [
              {
                "name": "EnforceRange"
              }
            ],
            "name": "alias",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "BluetoothUUID",
        "isStatic": true,
        "name": "canonicalUUID",
        "returnType": {
          "name": "UUID"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "types": [
                {
                  "name": "DOMString"
                },
                {
                  "name": "unsigned long"
                }
              ]
            }
          }
        ],
        "from": "BluetoothUUID",
        "isStatic": true,
        "name": "getCharacteristic",
        "returnType": {
          "name": "UUID"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "types": [
                {
                  "name": "DOMString"
                },
                {
                  "name": "unsigned long"
                }
              ]
            }
          }
        ],
        "from": "BluetoothUUID",
        "isStatic": true,
        "name": "getDescriptor",
        "returnType": {
          "name": "UUID"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "types": [
                {
                  "name": "DOMString"
                },
                {
                  "name": "unsigned long"
                }
              ]
            }
          }
        ],
        "from": "BluetoothUUID",
        "isStatic": true,
        "name": "getService",
        "returnType": {
          "name": "UUID"
        }
      }
    ],
    "name": "BluetoothUUID",
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "name": "BluetoothServiceUUID",
    "type": {
      "types": [
        {
          "name": "DOMString"
        },
        {
          "name": "unsigned long"
        }
      ]
    },
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "name": "BluetoothCharacteristicUUID",
    "type": {
      "types": [
        {
          "name": "DOMString"
        },
        {
          "name": "unsigned long"
        }
      ]
    },
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "name": "BluetoothDescriptorUUID",
    "type": {
      "types": [
        {
          "name": "DOMString"
        },
        {
          "name": "unsigned long"
        }
      ]
    },
    "url": "https://w3c.github.io/web-animations/"
  },
  {
    "name": "NFCRecordType",
    "url": "https://w3c.github.io/web-nfc/",
    "value": [
      "empty",
      "text",
      "url",
      "json",
      "opaque"
    ]
  },
  {
    "name": "NFCRecordData",
    "type": {
      "types": [
        {
          "name": "DOMString"
        },
        {
          "name": "unrestricted double"
        },
        {
          "name": "ArrayBuffer"
        },
        {
          "name": "Dictionary"
        }
      ]
    },
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "members": [
      {
        "from": "NFCRecord",
        "name": "data",
        "type": {
          "name": "NFCRecordData"
        }
      },
      {
        "from": "NFCRecord",
        "name": "mediaType",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "NFCRecord",
        "name": "recordType",
        "type": {
          "name": "NFCRecordType"
        }
      }
    ],
    "name": "NFCRecord",
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "members": [
      {
        "from": "NFCMessage",
        "name": "data",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "NFCRecord"
            }
          ]
        }
      },
      {
        "from": "NFCMessage",
        "name": "url",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "NFCMessage",
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "name": "NFCPushMessage",
    "type": {
      "types": [
        {
          "name": "DOMString"
        },
        {
          "name": "ArrayBuffer"
        },
        {
          "name": "NFCMessage"
        }
      ]
    },
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "members": [
      {
        "args": [
          {
            "defaultValue": "any",
            "name": "target",
            "optional": true,
            "type": {
              "name": "NFCPushTarget"
            }
          }
        ],
        "from": "NFC",
        "name": "cancelPush",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "id",
            "optional": true,
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "NFC",
        "name": "cancelWatch",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "message",
            "type": {
              "name": "NFCPushMessage"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "NFCPushOptions"
            }
          }
        ],
        "from": "NFC",
        "name": "push",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "callback",
            "type": {
              "name": "MessageCallback"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "NFCWatchOptions"
            }
          }
        ],
        "from": "NFC",
        "name": "watch",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "long"
            }
          ]
        }
      }
    ],
    "name": "NFC",
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "args": [
      {
        "name": "message",
        "type": {
          "name": "NFCMessage"
        }
      }
    ],
    "name": "MessageCallback",
    "returnType": {
      "name": "void"
    },
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "name": "NFCPushTarget",
    "url": "https://w3c.github.io/web-nfc/",
    "value": [
      "tag",
      "peer",
      "any"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "true",
        "from": "NFCPushOptions",
        "name": "ignoreRead",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "any",
        "from": "NFCPushOptions",
        "name": "target",
        "type": {
          "name": "NFCPushTarget"
        }
      },
      {
        "defaultValue": "Infinity",
        "from": "NFCPushOptions",
        "name": "timeout",
        "type": {
          "name": "unrestricted double"
        }
      }
    ],
    "name": "NFCPushOptions",
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "name": "NFCWatchMode",
    "url": "https://w3c.github.io/web-nfc/",
    "value": [
      "web-nfc-only",
      "any"
    ]
  },
  {
    "members": [
      {
        "defaultValue": "",
        "from": "NFCWatchOptions",
        "name": "mediaType",
        "type": {
          "name": "USVString"
        }
      },
      {
        "defaultValue": "web-nfc-only",
        "from": "NFCWatchOptions",
        "name": "mode",
        "type": {
          "name": "NFCWatchMode"
        }
      },
      {
        "from": "NFCWatchOptions",
        "name": "recordType",
        "type": {
          "name": "NFCRecordType",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "defaultValue": "",
        "from": "NFCWatchOptions",
        "name": "url",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "NFCWatchOptions",
    "url": "https://w3c.github.io/web-nfc/"
  },
  {
    "members": [
      {
        "from": "BluetoothScanFilter",
        "name": "services",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "BluetoothServiceUUID"
            }
          ]
        }
      }
    ],
    "name": "BluetoothScanFilter",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "name": "VendorIDSource",
    "url": "https://w3c.github.io/webappsec-credential-management/",
    "value": [
      "bluetooth",
      "usb"
    ]
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "BluetoothAdvertisingData",
        "isReadOnly": true,
        "name": "appearance",
        "type": {
          "name": "unsigned short",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothAdvertisingData",
        "isReadOnly": true,
        "name": "manufacturerData",
        "type": {
          "name": "Map"
        }
      },
      {
        "from": "BluetoothAdvertisingData",
        "isReadOnly": true,
        "name": "rssi",
        "type": {
          "name": "byte",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "BluetoothAdvertisingData",
        "isReadOnly": true,
        "name": "serviceData",
        "type": {
          "name": "Map"
        }
      },
      {
        "from": "BluetoothAdvertisingData",
        "isReadOnly": true,
        "name": "txPower",
        "type": {
          "name": "byte",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "BluetoothAdvertisingData",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "inheritsFrom": "ServiceEventHandlers",
    "members": [
      {
        "from": "BluetoothGATTRemoteServer",
        "isReadOnly": true,
        "name": "connected",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothGATTRemoteServer",
        "isReadOnly": true,
        "name": "device",
        "type": {
          "name": "BluetoothDevice"
        }
      },
      {
        "from": "BluetoothGATTRemoteServer",
        "name": "disconnect",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "service",
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothGATTRemoteServer",
        "name": "getPrimaryService",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothGATTService"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "service",
            "optional": true,
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothGATTRemoteServer",
        "name": "getPrimaryServices",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothGATTService"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onserviceadded",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onservicechanged",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onserviceremoved",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "BluetoothGATTRemoteServer",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "inheritsFrom": "ServiceEventHandlers",
    "members": [
      {
        "from": "BluetoothGATTService",
        "isReadOnly": true,
        "name": "device",
        "type": {
          "name": "BluetoothDevice"
        }
      },
      {
        "args": [
          {
            "name": "characteristic",
            "type": {
              "name": "BluetoothCharacteristicUUID"
            }
          }
        ],
        "from": "BluetoothGATTService",
        "name": "getCharacteristic",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothGATTCharacteristic"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "characteristic",
            "optional": true,
            "type": {
              "name": "BluetoothCharacteristicUUID"
            }
          }
        ],
        "from": "BluetoothGATTService",
        "name": "getCharacteristics",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothGATTCharacteristic"
                }
              ]
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "service",
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothGATTService",
        "name": "getIncludedService",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothGATTService"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "service",
            "optional": true,
            "type": {
              "name": "BluetoothServiceUUID"
            }
          }
        ],
        "from": "BluetoothGATTService",
        "name": "getIncludedServices",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothGATTService"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "BluetoothGATTService",
        "isReadOnly": true,
        "name": "isPrimary",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "BluetoothGATTService",
        "isReadOnly": true,
        "name": "uuid",
        "type": {
          "name": "UUID"
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onserviceadded",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onservicechanged",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "ServiceEventHandlers",
        "name": "onserviceremoved",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "BluetoothGATTService",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "inheritsFrom": "CharacteristicEventHandlers",
    "members": [
      {
        "args": [
          {
            "name": "descriptor",
            "type": {
              "name": "BluetoothDescriptorUUID"
            }
          }
        ],
        "from": "BluetoothGATTCharacteristic",
        "name": "getDescriptor",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "BluetoothGATTDescriptor"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "descriptor",
            "optional": true,
            "type": {
              "name": "BluetoothDescriptorUUID"
            }
          }
        ],
        "from": "BluetoothGATTCharacteristic",
        "name": "getDescriptors",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "BluetoothGATTDescriptor"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "isReadOnly": true,
        "name": "instanceID",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "isReadOnly": true,
        "name": "properties",
        "type": {
          "name": "CharacteristicProperties"
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "name": "readValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "ArrayBuffer"
            }
          ]
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "isReadOnly": true,
        "name": "service",
        "type": {
          "name": "BluetoothGATTService"
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "name": "startNotifications",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "name": "stopNotifications",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "isReadOnly": true,
        "name": "uuid",
        "type": {
          "name": "UUID"
        }
      },
      {
        "from": "BluetoothGATTCharacteristic",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "ArrayBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "BluetoothGATTCharacteristic",
        "name": "writeValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "CharacteristicEventHandlers",
        "name": "oncharacteristicvaluechanged",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "BluetoothGATTCharacteristic",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "members": [
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "authenticatedSignedWrites",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "broadcast",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "indicate",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "notify",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "read",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "reliableWrite",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "writableAuxiliaries",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "write",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CharacteristicProperties",
        "isReadOnly": true,
        "name": "writeWithoutResponse",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "CharacteristicProperties",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "members": [
      {
        "from": "BluetoothGATTDescriptor",
        "isReadOnly": true,
        "name": "characteristic",
        "type": {
          "name": "BluetoothGATTCharacteristic"
        }
      },
      {
        "from": "BluetoothGATTDescriptor",
        "name": "readValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "ArrayBuffer"
            }
          ]
        }
      },
      {
        "from": "BluetoothGATTDescriptor",
        "isReadOnly": true,
        "name": "uuid",
        "type": {
          "name": "UUID"
        }
      },
      {
        "from": "BluetoothGATTDescriptor",
        "isReadOnly": true,
        "name": "value",
        "type": {
          "name": "ArrayBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "BluetoothGATTDescriptor",
        "name": "writeValue",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      }
    ],
    "name": "BluetoothGATTDescriptor",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "NavigatorBluetooth",
        "isReadOnly": true,
        "name": "bluetooth",
        "type": {
          "name": "Bluetooth"
        }
      }
    ],
    "name": "NavigatorBluetooth",
    "url": "https://w3c.github.io/webappsec-credential-management/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "HTMLInputElement",
        "isReadOnly": true,
        "name": "webkitEntries",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "FileSystemEntry"
            }
          ]
        }
      },
      {
        "from": "HTMLInputElement",
        "name": "webkitdirectory",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "HTMLInputElement",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "DataTransferItem",
        "name": "webkitGetAsEntry",
        "returnType": {
          "name": "FileSystemEntry",
          "params": [
            "nullable"
          ]
        }
      }
    ],
    "name": "DataTransferItem",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "err",
            "type": {
              "name": "DOMException"
            }
          }
        ],
        "from": "ErrorCallback",
        "name": "handleEvent",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "ErrorCallback",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "filesystem",
        "type": {
          "name": "FileSystem"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "fullPath",
        "type": {
          "name": "USVString"
        }
      },
      {
        "args": [
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "FileSystemEntryCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "ErrorCallback"
            }
          }
        ],
        "from": "FileSystemEntry",
        "name": "getParent",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "isDirectory",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "isFile",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "FileSystemEntry",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "inheritsFrom": "FileSystemEntry",
    "members": [
      {
        "from": "FileSystemDirectoryEntry",
        "name": "createReader",
        "returnType": {
          "name": "FileSystemDirectoryReader"
        }
      },
      {
        "args": [
          {
            "name": "path",
            "optional": true,
            "type": {
              "name": "USVString",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "FileSystemFlags"
            }
          },
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "FileSystemEntryCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "ErrorCallback"
            }
          }
        ],
        "from": "FileSystemDirectoryEntry",
        "name": "getDirectory",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "path",
            "optional": true,
            "type": {
              "name": "USVString",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "FileSystemFlags"
            }
          },
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "FileSystemEntryCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "ErrorCallback"
            }
          }
        ],
        "from": "FileSystemDirectoryEntry",
        "name": "getFile",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "filesystem",
        "type": {
          "name": "FileSystem"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "fullPath",
        "type": {
          "name": "USVString"
        }
      },
      {
        "args": [
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "FileSystemEntryCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "ErrorCallback"
            }
          }
        ],
        "from": "FileSystemEntry",
        "name": "getParent",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "isDirectory",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "isFile",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "FileSystemDirectoryEntry",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "FileSystemFlags",
        "name": "create",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "FileSystemFlags",
        "name": "exclusive",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "FileSystemFlags",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "entry",
            "type": {
              "name": "FileSystemEntry"
            }
          }
        ],
        "from": "FileSystemEntryCallback",
        "name": "handleEvent",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "FileSystemEntryCallback",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "successCallback",
            "type": {
              "name": "FileSystemEntriesCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "ErrorCallback"
            }
          }
        ],
        "from": "FileSystemDirectoryReader",
        "name": "readEntries",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "FileSystemDirectoryReader",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "entries",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "FileSystemEntry"
                }
              ]
            }
          }
        ],
        "from": "FileSystemEntriesCallback",
        "name": "handleEvent",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "FileSystemEntriesCallback",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "inheritsFrom": "FileSystemEntry",
    "members": [
      {
        "args": [
          {
            "name": "successCallback",
            "type": {
              "name": "FileCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "ErrorCallback"
            }
          }
        ],
        "from": "FileSystemFileEntry",
        "name": "file",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "filesystem",
        "type": {
          "name": "FileSystem"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "fullPath",
        "type": {
          "name": "USVString"
        }
      },
      {
        "args": [
          {
            "name": "successCallback",
            "optional": true,
            "type": {
              "name": "FileSystemEntryCallback"
            }
          },
          {
            "name": "errorCallback",
            "optional": true,
            "type": {
              "name": "ErrorCallback"
            }
          }
        ],
        "from": "FileSystemEntry",
        "name": "getParent",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "isDirectory",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "isFile",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "FileSystemEntry",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "FileSystemFileEntry",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "file",
            "type": {
              "name": "File"
            }
          }
        ],
        "from": "FileCallback",
        "name": "handleEvent",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "FileCallback",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "members": [
      {
        "from": "FileSystem",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "FileSystem",
        "isReadOnly": true,
        "name": "root",
        "type": {
          "name": "FileSystemDirectoryEntry"
        }
      }
    ],
    "name": "FileSystem",
    "url": "https://w3c.github.io/webappsec-csp/"
  },
  {
    "attrs": [
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "EventHandler",
    "members": [
      {
        "from": "MediaSession",
        "name": "metadata",
        "type": {
          "name": "MediaMetadata",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "MediaSession",
        "name": "onnexttrack",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSession",
        "name": "onpause",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSession",
        "name": "onplay",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSession",
        "name": "onplaypause",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSession",
        "name": "onprevioustrack",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSession",
        "name": "onseekbackward",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "MediaSession",
        "name": "onseekforward",
        "type": {
          "name": "EventHandler"
        }
      }
    ],
    "name": "MediaSession",
    "url": "https://w3c.github.io/webappsec-secure-contexts/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "init",
            "optional": true,
            "type": {
              "name": "MediaMetadataInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "MediaMetadata",
        "isReadOnly": true,
        "name": "album",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaMetadata",
        "isReadOnly": true,
        "name": "artist",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "MediaMetadata",
        "isReadOnly": true,
        "name": "artwork",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "MediaImage"
            }
          ]
        }
      },
      {
        "from": "MediaMetadata",
        "isReadOnly": true,
        "name": "title",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "MediaMetadata",
    "url": "https://w3c.github.io/webappsec-secure-contexts/"
  },
  {
    "members": [
      {
        "defaultValue": "",
        "from": "MediaMetadataInit",
        "name": "album",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "",
        "from": "MediaMetadataInit",
        "name": "artist",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "MediaMetadataInit",
        "name": "artwork",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "MediaImageInit"
            }
          ]
        }
      },
      {
        "defaultValue": "",
        "from": "MediaMetadataInit",
        "name": "title",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "MediaMetadataInit",
    "url": "https://w3c.github.io/webappsec-secure-contexts/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "init",
            "optional": true,
            "type": {
              "name": "MediaImageInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "MediaImage",
        "isReadOnly": true,
        "name": "sizes",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "MediaImage",
        "isReadOnly": true,
        "name": "src",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "MediaImage",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "MediaImage",
    "url": "https://w3c.github.io/webappsec-secure-contexts/"
  },
  {
    "members": [
      {
        "defaultValue": "",
        "from": "MediaImageInit",
        "name": "sizes",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "",
        "from": "MediaImageInit",
        "name": "src",
        "type": {
          "name": "USVString"
        }
      },
      {
        "defaultValue": "",
        "from": "MediaImageInit",
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "MediaImageInit",
    "url": "https://w3c.github.io/webappsec-secure-contexts/"
  },
  {
    "name": "SecurityPolicyViolationEventDisposition",
    "url": "https://w3c.github.io/webappsec/specs/content-security-policy/",
    "value": [
      "enforce",
      "report"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "optional": true,
            "type": {
              "name": "SecurityPolicyViolationEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "blockedURI",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "columnNumber",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "disposition",
        "type": {
          "name": "SecurityPolicyViolationEventDisposition"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "documentURI",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "effectiveDirective",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "lineNumber",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "originalPolicy",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "referrer",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "sourceFile",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "statusCode",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "SecurityPolicyViolationEvent",
        "isReadOnly": true,
        "name": "violatedDirective",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "SecurityPolicyViolationEvent",
    "url": "https://w3c.github.io/webappsec/specs/content-security-policy/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "blockedURI",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "columnNumber",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "disposition",
        "type": {
          "name": "SecurityPolicyViolationEventDisposition"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "documentURI",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "effectiveDirective",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "lineNumber",
        "type": {
          "name": "long"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "originalPolicy",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "referrer",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "sourceFile",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "statusCode",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "SecurityPolicyViolationEventInit",
        "name": "violatedDirective",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "SecurityPolicyViolationEventInit",
    "url": "https://w3c.github.io/webappsec/specs/content-security-policy/"
  },
  {
    "members": [
      {
        "from": "CredentialData",
        "isRequired": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "CredentialData",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "members": [
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Credential",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "inheritsFrom": "CredentialData",
    "members": [
      {
        "from": "SiteBoundCredentialData",
        "name": "iconURL",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredentialData",
        "name": "name",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "CredentialData",
        "isRequired": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "SiteBoundCredentialData",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "inheritsFrom": "Credential",
    "members": [
      {
        "from": "SiteBoundCredential",
        "isReadOnly": true,
        "name": "iconURL",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredential",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "SiteBoundCredential",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "inheritsFrom": "SiteBoundCredentialData",
    "members": [
      {
        "from": "PasswordCredentialData",
        "isRequired": true,
        "name": "password",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredentialData",
        "name": "iconURL",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredentialData",
        "name": "name",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "CredentialData",
        "isRequired": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "PasswordCredentialData",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "name": "CredentialBodyType",
    "type": {
      "types": [
        {
          "name": "FormData"
        },
        {
          "name": "URLSearchParams"
        }
      ]
    },
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "data",
            "type": {
              "name": "PasswordCredentialData"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "form",
            "type": {
              "name": "HTMLFormElement"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "SiteBoundCredential",
    "members": [
      {
        "from": "PasswordCredential",
        "name": "additionalData",
        "type": {
          "name": "CredentialBodyType",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "PasswordCredential",
        "name": "idName",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "PasswordCredential",
        "name": "passwordName",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredential",
        "isReadOnly": true,
        "name": "iconURL",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredential",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "PasswordCredential",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "inheritsFrom": "SiteBoundCredentialData",
    "members": [
      {
        "from": "FederatedCredentialData",
        "name": "protocol",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "FederatedCredentialData",
        "isRequired": true,
        "name": "provider",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredentialData",
        "name": "iconURL",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredentialData",
        "name": "name",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "CredentialData",
        "isRequired": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      }
    ],
    "name": "FederatedCredentialData",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "data",
            "type": {
              "name": "FederatedCredentialData"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "name": "Exposed",
        "value": "Window"
      }
    ],
    "inheritsFrom": "SiteBoundCredential",
    "members": [
      {
        "from": "FederatedCredential",
        "isReadOnly": true,
        "name": "protocol",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "FederatedCredential",
        "isReadOnly": true,
        "name": "provider",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredential",
        "isReadOnly": true,
        "name": "iconURL",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "SiteBoundCredential",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "id",
        "type": {
          "name": "USVString"
        }
      },
      {
        "from": "Credential",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "FederatedCredential",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "CredentialRequestOptions"
            }
          }
        ],
        "from": "CredentialsContainer",
        "name": "get",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "Credential",
              "params": [
                "nullable"
              ]
            }
          ]
        }
      },
      {
        "from": "CredentialsContainer",
        "name": "requireUserMediation",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "credential",
            "type": {
              "name": "Credential"
            }
          }
        ],
        "from": "CredentialsContainer",
        "name": "store",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "Credential"
            }
          ]
        }
      }
    ],
    "name": "CredentialsContainer",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "members": [
      {
        "from": "CredentialRequestOptions",
        "name": "federated",
        "type": {
          "name": "FederatedCredentialRequestOptions"
        }
      },
      {
        "defaultValue": "false",
        "from": "CredentialRequestOptions",
        "name": "password",
        "type": {
          "name": "boolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "CredentialRequestOptions",
        "name": "unmediated",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "CredentialRequestOptions",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "members": [
      {
        "from": "FederatedCredentialRequestOptions",
        "name": "protocols",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      },
      {
        "from": "FederatedCredentialRequestOptions",
        "name": "providers",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "USVString"
            }
          ]
        }
      }
    ],
    "name": "FederatedCredentialRequestOptions",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "name": "RequestCredentialsMode",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/",
    "value": [
      "omit",
      "same-origin",
      "include",
      "password"
    ]
  },
  {
    "name": "CredentialInfo",
    "type": {
      "types": [
        {
          "name": "PasswordCredential"
        },
        {
          "name": "RequestCredentials"
        }
      ]
    },
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "RequestInit",
        "name": "credentials",
        "type": {
          "name": "CredentialInfo"
        }
      }
    ],
    "name": "RequestInit",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "members": [
    ],
    "name": "ExampleCredentialRequestOptions",
    "url": "https://w3c.github.io/webappsec/specs/credentialmanagement/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "HTMLScriptElement",
        "name": "integrity",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "HTMLScriptElement",
    "url": "https://w3c.github.io/webappsec/specs/subresourceintegrity/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "DocumentOrShadowRoot",
        "isReadOnly": true,
        "name": "activeElement",
        "type": {
          "name": "Element",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "DocumentOrShadowRoot",
        "name": "caretPositionFromPoint",
        "returnType": {
          "name": "CaretPosition",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "DocumentOrShadowRoot",
        "name": "elementFromPoint",
        "returnType": {
          "name": "Element",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "double"
            }
          }
        ],
        "from": "DocumentOrShadowRoot",
        "name": "elementsFromPoint",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "Element"
            }
          ]
        }
      },
      {
        "from": "DocumentOrShadowRoot",
        "name": "getSelection",
        "returnType": {
          "name": "Selection",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "DocumentOrShadowRoot",
        "isReadOnly": true,
        "name": "styleSheets",
        "type": {
          "name": "StyleSheetList"
        }
      }
    ],
    "name": "DocumentOrShadowRoot",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/"
  },
  {
    "inheritsFrom": "DocumentFragment",
    "members": [
      {
        "from": "ShadowRoot",
        "isReadOnly": true,
        "name": "host",
        "type": {
          "name": "Element"
        }
      },
      {
        "attrs": [
          {
            "name": "TreatNullAs",
            "value": "EmptyString"
          }
        ],
        "from": "ShadowRoot",
        "name": "innerHTML",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "ShadowRoot",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "ShadowRootInit",
        "name": "delegatesFocus",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "ShadowRootInit",
        "isRequired": true,
        "name": "mode",
        "type": {
          "name": "ShadowRootMode"
        }
      }
    ],
    "name": "ShadowRootInit",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/"
  },
  {
    "name": "ShadowRootMode",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/",
    "value": [
      "open",
      "closed"
    ]
  },
  {
    "inheritsFrom": "HTMLElement",
    "members": [
      {
        "args": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "name": "AssignedNodesOptions"
            }
          }
        ],
        "from": "HTMLSlotElement",
        "name": "assignedNodes",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "Node"
            }
          ]
        }
      },
      {
        "from": "HTMLSlotElement",
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "HTMLSlotElement",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/"
  },
  {
    "members": [
      {
        "defaultValue": "false",
        "from": "AssignedNodesOptions",
        "name": "flatten",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "AssignedNodesOptions",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "EventInit",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/"
  },
  {
    "isPartial": true,
    "members": [
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "Event",
    "url": "https://w3c.github.io/webcomponents/spec/shadow/"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      },
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "GlobalCrypto",
        "isReadOnly": true,
        "name": "crypto",
        "type": {
          "name": "Crypto"
        }
      }
    ],
    "name": "GlobalCrypto",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "ArrayBufferView"
            }
          }
        ],
        "from": "Crypto",
        "name": "getRandomValues",
        "returnType": {
          "name": "ArrayBufferView"
        }
      },
      {
        "attrs": [
          {
            "name": "SecureContext"
          }
        ],
        "from": "Crypto",
        "isReadOnly": true,
        "name": "subtle",
        "type": {
          "name": "SubtleCrypto"
        }
      }
    ],
    "name": "Crypto",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "name": "AlgorithmIdentifier",
    "type": {
      "types": [
        {
          "name": "object"
        },
        {
          "name": "DOMString"
        }
      ]
    },
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "name": "HashAlgorithmIdentifier",
    "type": {
      "name": "AlgorithmIdentifier"
    },
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "members": [
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Algorithm",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "members": [
      {
        "from": "KeyAlgorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "KeyAlgorithm",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "name": "KeyType",
    "url": "https://w3c.github.io/webcrypto/Overview.html",
    "value": [
      "public",
      "private",
      "secret"
    ]
  },
  {
    "name": "KeyUsage",
    "url": "https://w3c.github.io/webcrypto/Overview.html",
    "value": [
      "encrypt",
      "decrypt",
      "sign",
      "verify",
      "deriveKey",
      "deriveBits",
      "wrapKey",
      "unwrapKey"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      },
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "from": "CryptoKey",
        "isReadOnly": true,
        "name": "algorithm",
        "type": {
          "name": "object"
        }
      },
      {
        "from": "CryptoKey",
        "isReadOnly": true,
        "name": "extractable",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "CryptoKey",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "KeyType"
        }
      },
      {
        "from": "CryptoKey",
        "isReadOnly": true,
        "name": "usages",
        "type": {
          "name": "object"
        }
      }
    ],
    "name": "CryptoKey",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "name": "KeyFormat",
    "url": "https://w3c.github.io/webcrypto/Overview.html",
    "value": [
      "raw",
      "spki",
      "pkcs8",
      "jwk"
    ]
  },
  {
    "attrs": [
      {
        "identifiers": [
          "Window",
          "Worker"
        ],
        "name": "Exposed"
      },
      {
        "name": "SecureContext"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "key",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "decrypt",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "baseKey",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "deriveBits",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "ArrayBuffer"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "baseKey",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "derivedKeyType",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "extractable",
            "type": {
              "name": "boolean"
            }
          },
          {
            "name": "keyUsages",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "KeyUsage"
                }
              ]
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "deriveKey",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "digest",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "key",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "encrypt",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "format",
            "type": {
              "name": "KeyFormat"
            }
          },
          {
            "name": "key",
            "type": {
              "name": "CryptoKey"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "exportKey",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "extractable",
            "type": {
              "name": "boolean"
            }
          },
          {
            "name": "keyUsages",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "KeyUsage"
                }
              ]
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "generateKey",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "format",
            "type": {
              "name": "KeyFormat"
            }
          },
          {
            "name": "keyData",
            "type": {
              "types": [
                {
                  "name": "BufferSource"
                },
                {
                  "name": "JsonWebKey"
                }
              ]
            }
          },
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "extractable",
            "type": {
              "name": "boolean"
            }
          },
          {
            "name": "keyUsages",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "KeyUsage"
                }
              ]
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "importKey",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "CryptoKey"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "key",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "sign",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "format",
            "type": {
              "name": "KeyFormat"
            }
          },
          {
            "name": "wrappedKey",
            "type": {
              "name": "BufferSource"
            }
          },
          {
            "name": "unwrappingKey",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "unwrapAlgorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "unwrappedKeyAlgorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "extractable",
            "type": {
              "name": "boolean"
            }
          },
          {
            "name": "keyUsages",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "KeyUsage"
                }
              ]
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "unwrapKey",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "CryptoKey"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "algorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          },
          {
            "name": "key",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "signature",
            "type": {
              "name": "BufferSource"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "verify",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "format",
            "type": {
              "name": "KeyFormat"
            }
          },
          {
            "name": "key",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "wrappingKey",
            "type": {
              "name": "CryptoKey"
            }
          },
          {
            "name": "wrapAlgorithm",
            "type": {
              "name": "AlgorithmIdentifier"
            }
          }
        ],
        "from": "SubtleCrypto",
        "name": "wrapKey",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "any"
            }
          ]
        }
      }
    ],
    "name": "SubtleCrypto",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "members": [
      {
        "from": "RsaOtherPrimesInfo",
        "name": "d",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "RsaOtherPrimesInfo",
        "name": "r",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "RsaOtherPrimesInfo",
        "name": "t",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaOtherPrimesInfo",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "members": [
      {
        "from": "JsonWebKey",
        "name": "alg",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "crv",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "d",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "dp",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "dq",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "e",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "ext",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "k",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "key_ops",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            }
          ]
        }
      },
      {
        "from": "JsonWebKey",
        "name": "kty",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "n",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "oth",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "RsaOtherPrimesInfo"
            }
          ]
        }
      },
      {
        "from": "JsonWebKey",
        "name": "p",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "q",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "qi",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "use",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "x",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "JsonWebKey",
        "name": "y",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "JsonWebKey",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "name": "BigInteger",
    "type": {
      "name": "Uint8Array"
    },
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "members": [
      {
        "from": "CryptoKeyPair",
        "name": "privateKey",
        "type": {
          "name": "CryptoKey"
        }
      },
      {
        "from": "CryptoKeyPair",
        "name": "publicKey",
        "type": {
          "name": "CryptoKey"
        }
      }
    ],
    "name": "CryptoKeyPair",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "RsaKeyGenParams",
        "isRequired": true,
        "name": "modulusLength",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "RsaKeyGenParams",
        "isRequired": true,
        "name": "publicExponent",
        "type": {
          "name": "BigInteger"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaKeyGenParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "RsaKeyGenParams",
    "members": [
      {
        "from": "RsaHashedKeyGenParams",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "HashAlgorithmIdentifier"
        }
      },
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "RsaKeyGenParams",
        "isRequired": true,
        "name": "modulusLength",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "RsaKeyGenParams",
        "isRequired": true,
        "name": "publicExponent",
        "type": {
          "name": "BigInteger"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaHashedKeyGenParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "KeyAlgorithm",
    "members": [
      {
        "from": "RsaKeyAlgorithm",
        "isRequired": true,
        "name": "modulusLength",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "RsaKeyAlgorithm",
        "isRequired": true,
        "name": "publicExponent",
        "type": {
          "name": "BigInteger"
        }
      },
      {
        "from": "KeyAlgorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaKeyAlgorithm",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "RsaKeyAlgorithm",
    "members": [
      {
        "from": "RsaHashedKeyAlgorithm",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "KeyAlgorithm"
        }
      },
      {
        "from": "RsaKeyAlgorithm",
        "isRequired": true,
        "name": "modulusLength",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "RsaKeyAlgorithm",
        "isRequired": true,
        "name": "publicExponent",
        "type": {
          "name": "BigInteger"
        }
      },
      {
        "from": "KeyAlgorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaHashedKeyAlgorithm",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "RsaHashedImportParams",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "HashAlgorithmIdentifier"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaHashedImportParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "RsaPssParams",
        "isRequired": true,
        "name": "saltLength",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaPssParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "RsaOaepParams",
        "name": "label",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "RsaOaepParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "EcdsaParams",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "HashAlgorithmIdentifier"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "EcdsaParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "name": "NamedCurve",
    "type": {
      "name": "DOMString"
    },
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "EcKeyGenParams",
        "isRequired": true,
        "name": "namedCurve",
        "type": {
          "name": "NamedCurve"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "EcKeyGenParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "KeyAlgorithm",
    "members": [
      {
        "from": "EcKeyAlgorithm",
        "isRequired": true,
        "name": "namedCurve",
        "type": {
          "name": "NamedCurve"
        }
      },
      {
        "from": "KeyAlgorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "EcKeyAlgorithm",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "EcKeyImportParams",
        "isRequired": true,
        "name": "namedCurve",
        "type": {
          "name": "NamedCurve"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "EcKeyImportParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "EcdhKeyDeriveParams",
        "isRequired": true,
        "name": "public",
        "type": {
          "name": "CryptoKey"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "EcdhKeyDeriveParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "AesCtrParams",
        "isRequired": true,
        "name": "counter",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "AesCtrParams",
        "isRequired": true,
        "name": "length",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AesCtrParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "KeyAlgorithm",
    "members": [
      {
        "from": "AesKeyAlgorithm",
        "isRequired": true,
        "name": "length",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "KeyAlgorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AesKeyAlgorithm",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "AesKeyGenParams",
        "isRequired": true,
        "name": "length",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AesKeyGenParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "AesDerivedKeyParams",
        "isRequired": true,
        "name": "length",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AesDerivedKeyParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "AesCbcParams",
        "isRequired": true,
        "name": "iv",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AesCbcParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "AesGcmParams",
        "name": "additionalData",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "from": "AesGcmParams",
        "isRequired": true,
        "name": "iv",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "AesGcmParams",
        "name": "tagLength",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "AesGcmParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "HmacImportParams",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "HashAlgorithmIdentifier"
        }
      },
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "HmacImportParams",
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "HmacImportParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "KeyAlgorithm",
    "members": [
      {
        "from": "HmacKeyAlgorithm",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "KeyAlgorithm"
        }
      },
      {
        "from": "HmacKeyAlgorithm",
        "isRequired": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "KeyAlgorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "HmacKeyAlgorithm",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "HmacKeyGenParams",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "HashAlgorithmIdentifier"
        }
      },
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "HmacKeyGenParams",
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "HmacKeyGenParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "HkdfParams",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "HashAlgorithmIdentifier"
        }
      },
      {
        "from": "HkdfParams",
        "isRequired": true,
        "name": "info",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "from": "HkdfParams",
        "isRequired": true,
        "name": "salt",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "HkdfParams",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "inheritsFrom": "Algorithm",
    "members": [
      {
        "from": "Pbkdf2Params",
        "isRequired": true,
        "name": "hash",
        "type": {
          "name": "HashAlgorithmIdentifier"
        }
      },
      {
        "attrs": [
          {
            "name": "EnforceRange"
          }
        ],
        "from": "Pbkdf2Params",
        "isRequired": true,
        "name": "iterations",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "Pbkdf2Params",
        "isRequired": true,
        "name": "salt",
        "type": {
          "name": "BufferSource"
        }
      },
      {
        "from": "Algorithm",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "Pbkdf2Params",
    "url": "https://w3c.github.io/webcrypto/Overview.html"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      },
      {
        "name": "Worker"
      },
      {
        "name": "exposed",
        "value": "Window"
      }
    ],
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "DetectedObject",
        "isReadOnly": true,
        "name": "boundingBox",
        "type": {
          "name": "DOMRectReadOnly"
        }
      }
    ],
    "name": "DetectedObject",
    "url": "https://wicg.github.io/shape-detection-api/"
  },
  {
    "name": "ImageBitmapSource",
    "type": {
      "types": [
        {
          "name": "CanvasImageSource"
        },
        {
          "name": "Blob"
        },
        {
          "name": "ImageData"
        }
      ]
    },
    "url": "https://wicg.github.io/shape-detection-api/"
  },
  {
    "members": [
      {
        "from": "FaceDetectorOptions",
        "name": "maxDetectedFaces",
        "type": {
          "name": "unsigned short"
        }
      }
    ],
    "name": "FaceDetectorOptions",
    "url": "https://wicg.github.io/shape-detection-api/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "faceDetectorOptions",
            "optional": true,
            "type": {
              "name": "FaceDetectorOptions"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "image",
            "type": {
              "name": "ImageBitmapSource"
            }
          }
        ],
        "from": "FaceDetector",
        "name": "detect",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "DetectedFace"
                }
              ]
            }
          ]
        }
      }
    ],
    "name": "FaceDetector",
    "url": "https://wicg.github.io/shape-detection-api/"
  },
  {
    "members": [
    ],
    "name": "DetectedFace",
    "url": "https://wicg.github.io/shape-detection-api/"
  },
  {
    "attrs": [
      {
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "image",
            "type": {
              "name": "ImageBitmapSource"
            }
          }
        ],
        "from": "BarcodeDetector",
        "name": "detect",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "DetectedBarcode"
                }
              ]
            }
          ]
        }
      }
    ],
    "name": "BarcodeDetector",
    "url": "https://wicg.github.io/shape-detection-api/"
  },
  {
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "DetectedBarcode",
        "isReadOnly": true,
        "name": "rawValue",
        "type": {
          "name": "DOMString"
        }
      }
    ],
    "name": "DetectedBarcode",
    "url": "https://wicg.github.io/shape-detection-api/"
  },
  {
    "members": [
      {
        "from": "USBDeviceFilter",
        "name": "classCode",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDeviceFilter",
        "name": "productId",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "USBDeviceFilter",
        "name": "protocolCode",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDeviceFilter",
        "name": "subclassCode",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDeviceFilter",
        "name": "vendorId",
        "type": {
          "name": "unsigned short"
        }
      }
    ],
    "name": "USBDeviceFilter",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "USBDeviceRequestOptions",
        "isRequired": true,
        "name": "filters",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "USBDeviceFilter"
            }
          ]
        }
      }
    ],
    "name": "USBDeviceRequestOptions",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "USB",
        "name": "getDevices",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "sequence",
              "params": [
                {
                  "name": "USBDevice"
                }
              ]
            }
          ]
        }
      },
      {
        "from": "USB",
        "name": "onconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "USB",
        "name": "ondisconnect",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "args": [
          {
            "name": "options",
            "type": {
              "name": "USBDeviceRequestOptions"
            }
          }
        ],
        "from": "USB",
        "name": "requestDevice",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "USBDevice"
            }
          ]
        }
      }
    ],
    "name": "USB",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "USBConnectionEventInit",
        "isRequired": true,
        "name": "device",
        "type": {
          "name": "USBDevice"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "USBConnectionEventInit",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInitDict",
            "type": {
              "name": "USBConnectionEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "attrs": [
          {
            "name": "SameObject"
          }
        ],
        "from": "USBConnectionEvent",
        "isReadOnly": true,
        "name": "device",
        "type": {
          "name": "USBDevice"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "USBConnectionEvent",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "inheritsFrom": "PermissionDescriptor",
    "members": [
      {
        "from": "USBPermissionDescriptor",
        "name": "filters",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "USBDeviceFilter"
            }
          ]
        }
      },
      {
        "from": "PermissionDescriptor",
        "name": "embedee",
        "type": {
          "name": "HTMLIFrameElement"
        }
      },
      {
        "from": "PermissionDescriptor",
        "isRequired": true,
        "name": "name",
        "type": {
          "name": "PermissionName"
        }
      }
    ],
    "name": "USBPermissionDescriptor",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "AllowedUSBDevice",
        "isRequired": true,
        "name": "productId",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "AllowedUSBDevice",
        "name": "serialNumber",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "AllowedUSBDevice",
        "isRequired": true,
        "name": "vendorId",
        "type": {
          "name": "octet"
        }
      }
    ],
    "name": "AllowedUSBDevice",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "inheritsFrom": "PermissionStorage",
    "members": [
      {
        "defaultValue": [
          "[",
          "]"
        ],
        "from": "USBPermissionStorage",
        "isRequired": true,
        "name": "allowedDevices",
        "type": {
          "name": "sequence",
          "params": [
            {
              "name": "AllowedUSBDevice"
            }
          ]
        }
      }
    ],
    "name": "USBPermissionStorage",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "inheritsFrom": "PermissionStatus",
    "members": [
      {
        "from": "USBPermissionResult",
        "name": "devices",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "USBDevice"
            }
          ]
        }
      },
      {
        "from": "PermissionStatus",
        "name": "onchange",
        "type": {
          "name": "EventHandler"
        }
      },
      {
        "from": "PermissionStatus",
        "isReadOnly": true,
        "name": "state",
        "type": {
          "name": "PermissionState"
        }
      }
    ],
    "name": "USBPermissionResult",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "args": [
          {
            "name": "interfaceNumber",
            "type": {
              "name": "octet"
            }
          }
        ],
        "from": "USBDevice",
        "name": "claimInterface",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "direction",
            "type": {
              "name": "USBDirection"
            }
          },
          {
            "name": "endpointNumber",
            "type": {
              "name": "octet"
            }
          }
        ],
        "from": "USBDevice",
        "name": "clearHalt",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "name": "close",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "configuration",
        "type": {
          "name": "USBConfiguration",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "configurations",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "USBConfiguration"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "setup",
            "type": {
              "name": "USBControlTransferParameters"
            }
          },
          {
            "name": "length",
            "type": {
              "name": "unsigned short"
            }
          }
        ],
        "from": "USBDevice",
        "name": "controlTransferIn",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "USBInTransferResult"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "setup",
            "type": {
              "name": "USBControlTransferParameters"
            }
          },
          {
            "name": "data",
            "optional": true,
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "USBDevice",
        "name": "controlTransferOut",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "USBOutTransferResult"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "deviceClass",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "deviceProtocol",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "deviceSubclass",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "deviceVersionMajor",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "deviceVersionMinor",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "deviceVersionSubminor",
        "type": {
          "name": "octet"
        }
      },
      {
        "args": [
          {
            "name": "endpointNumber",
            "type": {
              "name": "octet"
            }
          },
          {
            "name": "packetLengths",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "unsigned long"
                }
              ]
            }
          }
        ],
        "from": "USBDevice",
        "name": "isochronousTransferIn",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "USBIsochronousInTransferResult"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "endpointNumber",
            "type": {
              "name": "octet"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          },
          {
            "name": "packetLengths",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "unsigned long"
                }
              ]
            }
          }
        ],
        "from": "USBDevice",
        "name": "isochronousTransferOut",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "USBIsochronousOutTransferResult"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "manufacturerName",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "USBDevice",
        "name": "open",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "opened",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "productId",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "productName",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "interfaceNumber",
            "type": {
              "name": "octet"
            }
          }
        ],
        "from": "USBDevice",
        "name": "releaseInterface",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "name": "reset",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "interfaceNumber",
            "type": {
              "name": "octet"
            }
          },
          {
            "name": "alternateSetting",
            "type": {
              "name": "octet"
            }
          }
        ],
        "from": "USBDevice",
        "name": "selectAlternateInterface",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "configurationValue",
            "type": {
              "name": "octet"
            }
          }
        ],
        "from": "USBDevice",
        "name": "selectConfiguration",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "void"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "serialNumber",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "endpointNumber",
            "type": {
              "name": "octet"
            }
          },
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "USBDevice",
        "name": "transferIn",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "USBInTransferResult"
            }
          ]
        }
      },
      {
        "args": [
          {
            "name": "endpointNumber",
            "type": {
              "name": "octet"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferSource"
            }
          }
        ],
        "from": "USBDevice",
        "name": "transferOut",
        "returnType": {
          "name": "Promise",
          "params": [
            {
              "name": "USBOutTransferResult"
            }
          ]
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "usbVersionMajor",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "usbVersionMinor",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "usbVersionSubminor",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBDevice",
        "isReadOnly": true,
        "name": "vendorId",
        "type": {
          "name": "unsigned short"
        }
      }
    ],
    "name": "USBDevice",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "name": "USBRequestType",
    "url": "https://wicg.github.io/webusb/",
    "value": [
      "standard",
      "class",
      "vendor"
    ]
  },
  {
    "name": "USBRecipient",
    "url": "https://wicg.github.io/webusb/",
    "value": [
      "device",
      "interface",
      "endpoint",
      "other"
    ]
  },
  {
    "name": "USBTransferStatus",
    "url": "https://wicg.github.io/webusb/",
    "value": [
      "ok",
      "stall",
      "babble"
    ]
  },
  {
    "members": [
      {
        "from": "USBControlTransferParameters",
        "isRequired": true,
        "name": "index",
        "type": {
          "name": "unsigned short"
        }
      },
      {
        "from": "USBControlTransferParameters",
        "isRequired": true,
        "name": "recipient",
        "type": {
          "name": "USBRecipient"
        }
      },
      {
        "from": "USBControlTransferParameters",
        "isRequired": true,
        "name": "request",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBControlTransferParameters",
        "isRequired": true,
        "name": "requestType",
        "type": {
          "name": "USBRequestType"
        }
      },
      {
        "from": "USBControlTransferParameters",
        "isRequired": true,
        "name": "value",
        "type": {
          "name": "unsigned short"
        }
      }
    ],
    "name": "USBControlTransferParameters",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "USBInTransferResult",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "DataView"
        }
      },
      {
        "from": "USBInTransferResult",
        "isReadOnly": true,
        "name": "status",
        "type": {
          "name": "USBTransferStatus"
        }
      }
    ],
    "name": "USBInTransferResult",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "USBOutTransferResult",
        "isReadOnly": true,
        "name": "sWritten",
        "type": {
          "name": "unsigned long byte"
        }
      },
      {
        "from": "USBOutTransferResult",
        "isReadOnly": true,
        "name": "status",
        "type": {
          "name": "USBTransferStatus"
        }
      }
    ],
    "name": "USBOutTransferResult",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "USBIsochronousInTransferPacket",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "DataView"
        }
      },
      {
        "from": "USBIsochronousInTransferPacket",
        "isReadOnly": true,
        "name": "status",
        "type": {
          "name": "USBTransferStatus"
        }
      }
    ],
    "name": "USBIsochronousInTransferPacket",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "USBIsochronousInTransferResult",
        "isReadOnly": true,
        "name": "data",
        "type": {
          "name": "DataView"
        }
      },
      {
        "from": "USBIsochronousInTransferResult",
        "isReadOnly": true,
        "name": "packets",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "USBIsochronousInTransferPacket"
            }
          ]
        }
      }
    ],
    "name": "USBIsochronousInTransferResult",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "USBIsochronousOutTransferPacket",
        "isReadOnly": true,
        "name": "sWritten",
        "type": {
          "name": "unsigned long byte"
        }
      },
      {
        "from": "USBIsochronousOutTransferPacket",
        "isReadOnly": true,
        "name": "status",
        "type": {
          "name": "USBTransferStatus"
        }
      }
    ],
    "name": "USBIsochronousOutTransferPacket",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "members": [
      {
        "from": "USBIsochronousOutTransferResult",
        "isReadOnly": true,
        "name": "packets",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "USBIsochronousOutTransferPacket"
            }
          ]
        }
      }
    ],
    "name": "USBIsochronousOutTransferResult",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "device",
            "type": {
              "name": "USBDevice"
            }
          },
          {
            "name": "configurationValue",
            "type": {
              "name": "octet"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "USBConfiguration",
        "isReadOnly": true,
        "name": "configurationName",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "USBConfiguration",
        "isReadOnly": true,
        "name": "configurationValue",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBConfiguration",
        "isReadOnly": true,
        "name": "interfaces",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "USBInterface"
            }
          ]
        }
      }
    ],
    "name": "USBConfiguration",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "configuration",
            "type": {
              "name": "USBConfiguration"
            }
          },
          {
            "name": "interfaceNumber",
            "type": {
              "name": "octet"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "USBInterface",
        "isReadOnly": true,
        "name": "alternate",
        "type": {
          "name": "USBAlternateInterface"
        }
      },
      {
        "from": "USBInterface",
        "isReadOnly": true,
        "name": "alternates",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "USBAlternateInterface"
            }
          ]
        }
      },
      {
        "from": "USBInterface",
        "isReadOnly": true,
        "name": "claimed",
        "type": {
          "name": "boolean"
        }
      },
      {
        "from": "USBInterface",
        "isReadOnly": true,
        "name": "interfaceNumber",
        "type": {
          "name": "octet"
        }
      }
    ],
    "name": "USBInterface",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "deviceInterface",
            "type": {
              "name": "USBInterface"
            }
          },
          {
            "name": "alternateSetting",
            "type": {
              "name": "octet"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "USBAlternateInterface",
        "isReadOnly": true,
        "name": "alternateSetting",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBAlternateInterface",
        "isReadOnly": true,
        "name": "endpoints",
        "type": {
          "name": "FrozenArray",
          "params": [
            {
              "name": "USBEndpoint"
            }
          ]
        }
      },
      {
        "from": "USBAlternateInterface",
        "isReadOnly": true,
        "name": "interfaceClass",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBAlternateInterface",
        "isReadOnly": true,
        "name": "interfaceName",
        "type": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "USBAlternateInterface",
        "isReadOnly": true,
        "name": "interfaceProtocol",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBAlternateInterface",
        "isReadOnly": true,
        "name": "interfaceSubclass",
        "type": {
          "name": "octet"
        }
      }
    ],
    "name": "USBAlternateInterface",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "name": "USBDirection",
    "url": "https://wicg.github.io/webusb/",
    "value": [
      "in",
      "out"
    ]
  },
  {
    "name": "USBEndpointType",
    "url": "https://wicg.github.io/webusb/",
    "value": [
      "bulk",
      "interrupt",
      "isochronous"
    ]
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "alternate",
            "type": {
              "name": "USBAlternateInterface"
            }
          },
          {
            "name": "endpointNumber",
            "type": {
              "name": "octet"
            }
          },
          {
            "name": "direction",
            "type": {
              "name": "USBDirection"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "USBEndpoint",
        "isReadOnly": true,
        "name": "direction",
        "type": {
          "name": "USBDirection"
        }
      },
      {
        "from": "USBEndpoint",
        "isReadOnly": true,
        "name": "endpointNumber",
        "type": {
          "name": "octet"
        }
      },
      {
        "from": "USBEndpoint",
        "isReadOnly": true,
        "name": "packetSize",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "from": "USBEndpoint",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "USBEndpointType"
        }
      }
    ],
    "name": "USBEndpoint",
    "url": "https://wicg.github.io/webusb/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "ArrayBuffer",
        "isReadOnly": true,
        "name": "Length",
        "type": {
          "name": "unsigned long byte"
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "any"
            }
          }
        ],
        "from": "ArrayBuffer",
        "isStatic": true,
        "name": "isView",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "begin",
            "type": {
              "name": "long"
            }
          },
          {
            "name": "end",
            "optional": true,
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "ArrayBuffer",
        "name": "slice",
        "returnType": {
          "name": "ArrayBuffer"
        }
      }
    ],
    "name": "ArrayBuffer",
    "url": "https://www.khronos.org/registry/typedarray/specs/latest/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "length",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "Uint8ClampedArray"
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "octet",
              "params": [
                "array"
              ]
            }
          }
        ],
        "name": "Constructor"
      },
      {
        "args": [
          {
            "name": "buffer",
            "type": {
              "name": "ArrayBuffer"
            }
          },
          {
            "name": "Offset",
            "optional": true,
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "length",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "from": "Uint8ClampedArray",
        "isConst": true,
        "name": "BYTES_PER_ELEMENT",
        "type": {
          "name": "unsigned long"
        },
        "value": "1"
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Uint8ClampedArray",
        "name": "get",
        "returnType": {
          "name": "octet"
        },
        "specials": [
          "getter"
        ]
      },
      {
        "from": "Uint8ClampedArray",
        "isReadOnly": true,
        "name": "length",
        "type": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "attrs": [
              {
                "name": "Clamp"
              }
            ],
            "name": "value",
            "type": {
              "name": "octet"
            }
          }
        ],
        "from": "Uint8ClampedArray",
        "name": "set",
        "returnType": {
          "name": "void"
        },
        "specials": [
          "setter"
        ]
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "Uint8ClampedArray"
            }
          },
          {
            "name": "offset",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Uint8ClampedArray",
        "name": "set",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "array",
            "type": {
              "name": "octet",
              "params": [
                "array"
              ]
            }
          },
          {
            "name": "offset",
            "optional": true,
            "type": {
              "name": "unsigned long"
            }
          }
        ],
        "from": "Uint8ClampedArray",
        "name": "set",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "begin",
            "type": {
              "name": "long"
            }
          },
          {
            "name": "end",
            "optional": true,
            "type": {
              "name": "long"
            }
          }
        ],
        "from": "Uint8ClampedArray",
        "name": "subarray",
        "returnType": {
          "name": "Uint8ClampedArray"
        }
      }
    ],
    "name": "Uint8ClampedArray",
    "url": "https://www.khronos.org/registry/typedarray/specs/latest/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "buffer",
            "type": {
              "name": "ArrayBuffer"
            }
          },
          {
            "name": "Offset",
            "optional": true,
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "Length",
            "optional": true,
            "type": {
              "name": "unsigned long byte"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "members": [
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "getFloat32",
        "returnType": {
          "name": "float"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "getFloat64",
        "returnType": {
          "name": "double"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "getInt16",
        "returnType": {
          "name": "short"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "getInt32",
        "returnType": {
          "name": "long"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          }
        ],
        "from": "DataView",
        "name": "getInt8",
        "returnType": {
          "name": "byte"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "getUint16",
        "returnType": {
          "name": "unsigned short"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "getUint32",
        "returnType": {
          "name": "unsigned long"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          }
        ],
        "from": "DataView",
        "name": "getUint8",
        "returnType": {
          "name": "octet"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "float"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "setFloat32",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "double"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "setFloat64",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "short"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "setInt16",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "long"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "setInt32",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "byte"
            }
          }
        ],
        "from": "DataView",
        "name": "setInt8",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "unsigned short"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "setUint16",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "unsigned long"
            }
          },
          {
            "name": "littleEndian",
            "optional": true,
            "type": {
              "name": "boolean"
            }
          }
        ],
        "from": "DataView",
        "name": "setUint32",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "Offset",
            "type": {
              "name": "unsigned long byte"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "octet"
            }
          }
        ],
        "from": "DataView",
        "name": "setUint8",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "DataView",
    "url": "https://www.khronos.org/registry/typedarray/specs/latest/"
  },
  {
    "name": "GLenum",
    "type": {
      "name": "unsigned long"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLboolean",
    "type": {
      "name": "boolean"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLbitfield",
    "type": {
      "name": "unsigned long"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLbyte",
    "type": {
      "name": "byte"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLshort",
    "type": {
      "name": "short"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLint",
    "type": {
      "name": "long"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLsizei",
    "type": {
      "name": "long"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLintptr",
    "type": {
      "name": "long long"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLsizeiptr",
    "type": {
      "name": "long long"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLubyte",
    "type": {
      "name": "octet"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLushort",
    "type": {
      "name": "unsigned short"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLuint",
    "type": {
      "name": "unsigned long"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLfloat",
    "type": {
      "name": "unrestricted float"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "GLclampf",
    "type": {
      "name": "unrestricted float"
    },
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "members": [
      {
        "defaultValue": "true",
        "from": "WebGLContextAttributes",
        "name": "alpha",
        "type": {
          "name": "GLboolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "WebGLContextAttributes",
        "name": "antialias",
        "type": {
          "name": "GLboolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "WebGLContextAttributes",
        "name": "depth",
        "type": {
          "name": "GLboolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "WebGLContextAttributes",
        "name": "failIfMajorPerformanceCaveat",
        "type": {
          "name": "GLboolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "WebGLContextAttributes",
        "name": "preferLowPowerToHighPerformance",
        "type": {
          "name": "GLboolean"
        }
      },
      {
        "defaultValue": "true",
        "from": "WebGLContextAttributes",
        "name": "premultipliedAlpha",
        "type": {
          "name": "GLboolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "WebGLContextAttributes",
        "name": "preserveDrawingBuffer",
        "type": {
          "name": "GLboolean"
        }
      },
      {
        "defaultValue": "false",
        "from": "WebGLContextAttributes",
        "name": "stencil",
        "type": {
          "name": "GLboolean"
        }
      }
    ],
    "name": "WebGLContextAttributes",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "members": [
    ],
    "name": "WebGLObject",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "inheritsFrom": "WebGLObject",
    "members": [
    ],
    "name": "WebGLBuffer",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "inheritsFrom": "WebGLObject",
    "members": [
    ],
    "name": "WebGLFramebuffer",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "inheritsFrom": "WebGLObject",
    "members": [
    ],
    "name": "WebGLProgram",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "inheritsFrom": "WebGLObject",
    "members": [
    ],
    "name": "WebGLRenderbuffer",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "inheritsFrom": "WebGLObject",
    "members": [
    ],
    "name": "WebGLShader",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "inheritsFrom": "WebGLObject",
    "members": [
    ],
    "name": "WebGLTexture",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "members": [
    ],
    "name": "WebGLUniformLocation",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "members": [
      {
        "from": "WebGLActiveInfo",
        "isReadOnly": true,
        "name": "name",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "WebGLActiveInfo",
        "isReadOnly": true,
        "name": "size",
        "type": {
          "name": "GLint"
        }
      },
      {
        "from": "WebGLActiveInfo",
        "isReadOnly": true,
        "name": "type",
        "type": {
          "name": "GLenum"
        }
      }
    ],
    "name": "WebGLActiveInfo",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "members": [
      {
        "from": "WebGLShaderPrecisionFormat",
        "isReadOnly": true,
        "name": "precision",
        "type": {
          "name": "GLint"
        }
      },
      {
        "from": "WebGLShaderPrecisionFormat",
        "isReadOnly": true,
        "name": "rangeMax",
        "type": {
          "name": "GLint"
        }
      },
      {
        "from": "WebGLShaderPrecisionFormat",
        "isReadOnly": true,
        "name": "rangeMin",
        "type": {
          "name": "GLint"
        }
      }
    ],
    "name": "WebGLShaderPrecisionFormat",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "attrs": [
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "DOMString"
            }
          },
          {
            "name": "eventInit",
            "optional": true,
            "type": {
              "name": "WebGLContextEventInit"
            }
          }
        ],
        "name": "Constructor"
      }
    ],
    "inheritsFrom": "Event",
    "members": [
      {
        "from": "WebGLContextEvent",
        "isReadOnly": true,
        "name": "statusMessage",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "from": "Event",
        "name": "deepPath",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "EventTarget"
            }
          ]
        }
      },
      {
        "from": "Event",
        "isReadOnly": true,
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "WebGLContextEvent",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "inheritsFrom": "EventInit",
    "members": [
      {
        "from": "WebGLContextEventInit",
        "name": "statusMessage",
        "type": {
          "name": "DOMString"
        }
      },
      {
        "defaultValue": "false",
        "from": "EventInit",
        "name": "scoped",
        "type": {
          "name": "boolean"
        }
      }
    ],
    "name": "WebGLContextEventInit",
    "url": "https://www.khronos.org/registry/webgl/specs/1.0/"
  },
  {
    "name": "BufferDataSource",
    "type": {
      "types": [
        {
          "name": "ArrayBuffer"
        },
        {
          "name": "ArrayBufferView"
        }
      ]
    },
    "url": "https://www.khronos.org/registry/webgl/specs/latest/1.0/"
  },
  {
    "name": "TexImageSource",
    "type": {
      "types": [
        {
          "name": "ImageBitmap"
        },
        {
          "name": "ImageData"
        },
        {
          "name": "HTMLImageElement"
        },
        {
          "name": "HTMLCanvasElement"
        },
        {
          "name": "HTMLVideoElement"
        }
      ]
    },
    "url": "https://www.khronos.org/registry/webgl/specs/latest/1.0/"
  },
  {
    "name": "VertexAttribFVSource",
    "type": {
      "types": [
        {
          "name": "Float32Array"
        },
        {
          "name": "sequence",
          "params": [
            {
              "name": "GLfloat"
            }
          ]
        }
      ]
    },
    "url": "https://www.khronos.org/registry/webgl/specs/latest/1.0/"
  },
  {
    "attrs": [
      {
        "name": "NoInterfaceObject"
      }
    ],
    "members": [
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ACTIVE_ATTRIBUTES",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B89"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ACTIVE_TEXTURE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84E0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ACTIVE_UNIFORMS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B86"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ALIASED_LINE_WIDTH_RANGE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x846E"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ALIASED_POINT_SIZE_RANGE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x846D"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1906"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ALPHA_BITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D55"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ALWAYS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0207"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ARRAY_BUFFER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8892"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ARRAY_BUFFER_BINDING",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8894"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ATTACHED_SHADERS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B85"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BACK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0405"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0BE2"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_COLOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8005"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_DST_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80CA"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_DST_RGB",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80C8"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_EQUATION",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8009"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_EQUATION_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x883D"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_EQUATION_RGB",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8009"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_SRC_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80CB"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLEND_SRC_RGB",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80C9"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BLUE_BITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D54"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BOOL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B56"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BOOL_VEC2",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B57"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BOOL_VEC3",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B58"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BOOL_VEC4",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B59"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BROWSER_DEFAULT_WEBGL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x9244"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BUFFER_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8764"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BUFFER_USAGE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8765"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "BYTE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1400"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CCW",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0901"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CLAMP_TO_EDGE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x812F"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "COLOR_ATTACHMENT0",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CE0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "COLOR_BUFFER_BIT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x00004000"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "COLOR_CLEAR_VALUE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0C22"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "COLOR_WRITEMASK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0C23"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "COMPILE_STATUS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B81"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "COMPRESSED_TEXTURE_FORMATS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x86A3"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CONSTANT_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8003"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CONSTANT_COLOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8001"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CONTEXT_LOST_WEBGL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x9242"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CULL_FACE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B44"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CULL_FACE_MODE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B45"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CURRENT_PROGRAM",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B8D"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CURRENT_VERTEX_ATTRIB",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8626"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "CW",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0900"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DECR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1E03"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DECR_WRAP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8508"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DELETE_STATUS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B80"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_ATTACHMENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D00"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_BITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D56"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_BUFFER_BIT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x00000100"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_CLEAR_VALUE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B73"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_COMPONENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1902"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_COMPONENT16",
        "type": {
          "name": "GLenum"
        },
        "value": "0x81A5"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_FUNC",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B74"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_RANGE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B70"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_STENCIL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84F9"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_STENCIL_ATTACHMENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x821A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_TEST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B71"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DEPTH_WRITEMASK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B72"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DITHER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0BD0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DONT_CARE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1100"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DST_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0304"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DST_COLOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0306"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "DYNAMIC_DRAW",
        "type": {
          "name": "GLenum"
        },
        "value": "0x88E8"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ELEMENT_ARRAY_BUFFER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8893"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ELEMENT_ARRAY_BUFFER_BINDING",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8895"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "EQUAL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0202"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FASTEST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1101"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FLOAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1406"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FLOAT_MAT2",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B5A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FLOAT_MAT3",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B5B"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FLOAT_MAT4",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B5C"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FLOAT_VEC2",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B50"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FLOAT_VEC3",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B51"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FLOAT_VEC4",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B52"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAGMENT_SHADER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B30"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D40"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD1"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD3"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD2"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_BINDING",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CA6"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_COMPLETE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD5"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD6"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD9"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CD7"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRAMEBUFFER_UNSUPPORTED",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CDD"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRONT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0404"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRONT_AND_BACK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0408"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FRONT_FACE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B46"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FUNC_ADD",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8006"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FUNC_REVERSE_SUBTRACT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x800B"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "FUNC_SUBTRACT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x800A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "GENERATE_MIPMAP_HINT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8192"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "GEQUAL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0206"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "GREATER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0204"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "GREEN_BITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D53"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "HIGH_FLOAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DF2"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "HIGH_INT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DF5"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "IMPLEMENTATION_COLOR_READ_FORMAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B9B"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "IMPLEMENTATION_COLOR_READ_TYPE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B9A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INCR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1E02"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INCR_WRAP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8507"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1404"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INT_VEC2",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B53"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INT_VEC3",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B54"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INT_VEC4",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B55"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INVALID_ENUM",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0500"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INVALID_FRAMEBUFFER_OPERATION",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0506"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INVALID_OPERATION",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0502"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INVALID_VALUE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0501"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "INVERT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x150A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "KEEP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1E00"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LEQUAL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0203"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LESS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0201"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINEAR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2601"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINEAR_MIPMAP_LINEAR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2703"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINEAR_MIPMAP_NEAREST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2701"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINES",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0001"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINE_LOOP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0002"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINE_STRIP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0003"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINE_WIDTH",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B21"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LINK_STATUS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B82"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LOW_FLOAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DF0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LOW_INT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DF3"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LUMINANCE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1909"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "LUMINANCE_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x190A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B4D"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_CUBE_MAP_TEXTURE_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x851C"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_FRAGMENT_UNIFORM_VECTORS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DFD"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_RENDERBUFFER_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84E8"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_TEXTURE_IMAGE_UNITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8872"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_TEXTURE_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D33"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_VARYING_VECTORS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DFC"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_VERTEX_ATTRIBS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8869"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B4C"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_VERTEX_UNIFORM_VECTORS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DFB"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MAX_VIEWPORT_DIMS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D3A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MEDIUM_FLOAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DF1"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MEDIUM_INT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8DF4"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "MIRRORED_REPEAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8370"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NEAREST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2600"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NEAREST_MIPMAP_LINEAR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2702"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NEAREST_MIPMAP_NEAREST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2700"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NEVER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0200"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NICEST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1102"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NONE",
        "type": {
          "name": "GLenum"
        },
        "value": "0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NOTEQUAL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0205"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "NO_ERROR",
        "type": {
          "name": "GLenum"
        },
        "value": "0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ONE",
        "type": {
          "name": "GLenum"
        },
        "value": "1"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ONE_MINUS_CONSTANT_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8004"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ONE_MINUS_CONSTANT_COLOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8002"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ONE_MINUS_DST_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0305"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ONE_MINUS_DST_COLOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0307"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ONE_MINUS_SRC_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0303"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ONE_MINUS_SRC_COLOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0301"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "OUT_OF_MEMORY",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0505"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "PACK_ALIGNMENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D05"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "POINTS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0000"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "POLYGON_OFFSET_FACTOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8038"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "POLYGON_OFFSET_FILL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8037"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "POLYGON_OFFSET_UNITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2A00"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RED_BITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D52"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D41"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_ALPHA_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D53"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_BINDING",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CA7"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_BLUE_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D52"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_DEPTH_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D54"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_GREEN_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D51"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_HEIGHT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D43"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_INTERNAL_FORMAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D44"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_RED_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D50"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_STENCIL_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D55"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERBUFFER_WIDTH",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D42"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RENDERER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1F01"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "REPEAT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2901"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "REPLACE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1E01"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RGB",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1907"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RGB565",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D62"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RGB5_A1",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8057"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RGBA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1908"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "RGBA4",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8056"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLER_2D",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B5E"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLER_CUBE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B60"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLES",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80A9"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLE_ALPHA_TO_COVERAGE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x809E"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLE_BUFFERS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80A8"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLE_COVERAGE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80A0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLE_COVERAGE_INVERT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80AB"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SAMPLE_COVERAGE_VALUE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x80AA"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SCISSOR_BOX",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0C10"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SCISSOR_TEST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0C11"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SHADER_TYPE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B4F"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SHADING_LANGUAGE_VERSION",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B8C"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SHORT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1402"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SRC_ALPHA",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0302"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SRC_ALPHA_SATURATE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0308"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SRC_COLOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0300"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STATIC_DRAW",
        "type": {
          "name": "GLenum"
        },
        "value": "0x88E4"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_ATTACHMENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D20"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BACK_FAIL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8801"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BACK_FUNC",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8800"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BACK_PASS_DEPTH_FAIL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8802"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BACK_PASS_DEPTH_PASS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8803"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BACK_REF",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CA3"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BACK_VALUE_MASK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CA4"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BACK_WRITEMASK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8CA5"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D57"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_BUFFER_BIT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x00000400"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_CLEAR_VALUE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B91"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_FAIL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B94"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_FUNC",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B92"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_INDEX",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1901"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_INDEX8",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8D48"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_PASS_DEPTH_FAIL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B95"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_PASS_DEPTH_PASS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B96"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_REF",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B97"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_TEST",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B90"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_VALUE_MASK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B93"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STENCIL_WRITEMASK",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0B98"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "STREAM_DRAW",
        "type": {
          "name": "GLenum"
        },
        "value": "0x88E0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "SUBPIXEL_BITS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0D50"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1702"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE0",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE1",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C1"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE10",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84CA"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE11",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84CB"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE12",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84CC"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE13",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84CD"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE14",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84CE"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE15",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84CF"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE16",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D0"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE17",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D1"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE18",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D2"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE19",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D3"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE2",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C2"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE20",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D4"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE21",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D5"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE22",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D6"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE23",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D7"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE24",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D8"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE25",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84D9"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE26",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84DA"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE27",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84DB"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE28",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84DC"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE29",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84DD"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE3",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C3"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE30",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84DE"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE31",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84DF"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE4",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C4"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE5",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C5"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE6",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C6"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE7",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C7"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE8",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C8"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE9",
        "type": {
          "name": "GLenum"
        },
        "value": "0x84C9"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_2D",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0DE1"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_BINDING_2D",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8069"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_BINDING_CUBE_MAP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8514"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_CUBE_MAP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8513"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8516"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8518"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
        "type": {
          "name": "GLenum"
        },
        "value": "0x851A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_CUBE_MAP_POSITIVE_X",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8515"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8517"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8519"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_MAG_FILTER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2800"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_MIN_FILTER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2801"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_WRAP_S",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2802"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TEXTURE_WRAP_T",
        "type": {
          "name": "GLenum"
        },
        "value": "0x2803"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TRIANGLES",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0004"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TRIANGLE_FAN",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0006"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "TRIANGLE_STRIP",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0005"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNPACK_ALIGNMENT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0CF5"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x9243"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNPACK_FLIP_Y_WEBGL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x9240"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
        "type": {
          "name": "GLenum"
        },
        "value": "0x9241"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNSIGNED_BYTE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1401"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNSIGNED_INT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1405"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNSIGNED_SHORT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1403"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNSIGNED_SHORT_4_4_4_4",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8033"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNSIGNED_SHORT_5_5_5_1",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8034"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "UNSIGNED_SHORT_5_6_5",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8363"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VALIDATE_STATUS",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B83"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VENDOR",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1F00"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERSION",
        "type": {
          "name": "GLenum"
        },
        "value": "0x1F02"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
        "type": {
          "name": "GLenum"
        },
        "value": "0x889F"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_ATTRIB_ARRAY_ENABLED",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8622"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
        "type": {
          "name": "GLenum"
        },
        "value": "0x886A"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_ATTRIB_ARRAY_POINTER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8645"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_ATTRIB_ARRAY_SIZE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8623"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_ATTRIB_ARRAY_STRIDE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8624"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_ATTRIB_ARRAY_TYPE",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8625"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VERTEX_SHADER",
        "type": {
          "name": "GLenum"
        },
        "value": "0x8B31"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "VIEWPORT",
        "type": {
          "name": "GLenum"
        },
        "value": "0x0BA2"
      },
      {
        "from": "WebGLRenderingContextBase",
        "isConst": true,
        "name": "ZERO",
        "type": {
          "name": "GLenum"
        },
        "value": "0"
      },
      {
        "args": [
          {
            "name": "texture",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "activeTexture",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "attachShader",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bindAttribLocation",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "buffer",
            "type": {
              "name": "WebGLBuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bindBuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "framebuffer",
            "type": {
              "name": "WebGLFramebuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bindFramebuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "renderbuffer",
            "type": {
              "name": "WebGLRenderbuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bindRenderbuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "texture",
            "type": {
              "name": "WebGLTexture",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bindTexture",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "red",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "green",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "blue",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "alpha",
            "type": {
              "name": "GLclampf"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "blendColor",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "mode",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "blendEquation",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "modeRGB",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "modeAlpha",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "blendEquationSeparate",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "sfactor",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "dfactor",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "blendFunc",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "srcRGB",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "dstRGB",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "srcAlpha",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "dstAlpha",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "blendFuncSeparate",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "ArrayBuffer",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "usage",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bufferData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "ArrayBufferView"
            }
          },
          {
            "name": "usage",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bufferData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "size",
            "type": {
              "name": "GLsizeiptr"
            }
          },
          {
            "name": "usage",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bufferData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "GLintptr"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "BufferDataSource"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "bufferSubData",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "isReadOnly": true,
        "name": "canvas",
        "type": {
          "name": "HTMLCanvasElement"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "checkFramebufferStatus",
        "returnType": {
          "name": "GLenum"
        }
      },
      {
        "args": [
          {
            "name": "mask",
            "type": {
              "name": "GLbitfield"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "clear",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "red",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "green",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "blue",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "alpha",
            "type": {
              "name": "GLclampf"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "clearColor",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "depth",
            "type": {
              "name": "GLclampf"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "clearDepth",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "s",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "clearStencil",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "red",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "green",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "blue",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "alpha",
            "type": {
              "name": "GLboolean"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "colorMask",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "compileShader",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "internalformat",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "border",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "ArrayBufferView"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "compressedTexImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "xoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "yoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "format",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "data",
            "type": {
              "name": "ArrayBufferView"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "compressedTexSubImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "internalformat",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "border",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "copyTexImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "xoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "yoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "copyTexSubImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "createBuffer",
        "returnType": {
          "name": "WebGLBuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "createFramebuffer",
        "returnType": {
          "name": "WebGLFramebuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "createProgram",
        "returnType": {
          "name": "WebGLProgram",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "createRenderbuffer",
        "returnType": {
          "name": "WebGLRenderbuffer",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "createShader",
        "returnType": {
          "name": "WebGLShader",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "createTexture",
        "returnType": {
          "name": "WebGLTexture",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "mode",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "cullFace",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "buffer",
            "type": {
              "name": "WebGLBuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "deleteBuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "framebuffer",
            "type": {
              "name": "WebGLFramebuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "deleteFramebuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "deleteProgram",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "renderbuffer",
            "type": {
              "name": "WebGLRenderbuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "deleteRenderbuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "deleteShader",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "texture",
            "type": {
              "name": "WebGLTexture",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "deleteTexture",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "func",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "depthFunc",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "flag",
            "type": {
              "name": "GLboolean"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "depthMask",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "zNear",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "zFar",
            "type": {
              "name": "GLclampf"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "depthRange",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "detachShader",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "cap",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "disable",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "disableVertexAttribArray",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "mode",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "first",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "count",
            "type": {
              "name": "GLsizei"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "drawArrays",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "mode",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "count",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "GLintptr"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "drawElements",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "isReadOnly": true,
        "name": "drawingBufferHeight",
        "type": {
          "name": "GLsizei"
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "isReadOnly": true,
        "name": "drawingBufferWidth",
        "type": {
          "name": "GLsizei"
        }
      },
      {
        "args": [
          {
            "name": "cap",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "enable",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "enableVertexAttribArray",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "finish",
        "returnType": {
          "name": "void"
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "flush",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "attachment",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "renderbuffertarget",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "renderbuffer",
            "type": {
              "name": "WebGLRenderbuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "framebufferRenderbuffer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "attachment",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "textarget",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "texture",
            "type": {
              "name": "WebGLTexture",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "framebufferTexture2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "mode",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "frontFace",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "generateMipmap",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getActiveAttrib",
        "returnType": {
          "name": "WebGLActiveInfo",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getActiveUniform",
        "returnType": {
          "name": "WebGLActiveInfo",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getAttachedShaders",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "WebGLShader"
            },
            [
              "nullable"
            ]
          ]
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getAttribLocation",
        "returnType": {
          "name": "GLint"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getBufferParameter",
        "returnType": {
          "name": "any"
        }
      },
      {
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getContextAttributes",
        "returnType": {
          "name": "WebGLContextAttributes",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getError",
        "returnType": {
          "name": "GLenum"
        }
      },
      {
        "args": [
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getExtension",
        "returnType": {
          "name": "object",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "attachment",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getFramebufferAttachmentParameter",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getParameter",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getProgramInfoLog",
        "returnType": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getProgramParameter",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getRenderbufferParameter",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getShaderInfoLog",
        "returnType": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getShaderParameter",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "shadertype",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "precisiontype",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getShaderPrecisionFormat",
        "returnType": {
          "name": "WebGLShaderPrecisionFormat",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getShaderSource",
        "returnType": {
          "name": "DOMString",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "from": "WebGLRenderingContextBase",
        "name": "getSupportedExtensions",
        "returnType": {
          "name": "sequence",
          "params": [
            {
              "name": "DOMString"
            },
            [
              "nullable"
            ]
          ]
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getTexParameter",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getUniform",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          },
          {
            "name": "name",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getUniformLocation",
        "returnType": {
          "name": "WebGLUniformLocation",
          "params": [
            "nullable"
          ]
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getVertexAttrib",
        "returnType": {
          "name": "any"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "getVertexAttribOffset",
        "returnType": {
          "name": "GLintptr"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "mode",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "hint",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "buffer",
            "type": {
              "name": "WebGLBuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isBuffer",
        "returnType": {
          "name": "GLboolean"
        }
      },
      {
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isContextLost",
        "returnType": {
          "name": "boolean"
        }
      },
      {
        "args": [
          {
            "name": "cap",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isEnabled",
        "returnType": {
          "name": "GLboolean"
        }
      },
      {
        "args": [
          {
            "name": "framebuffer",
            "type": {
              "name": "WebGLFramebuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isFramebuffer",
        "returnType": {
          "name": "GLboolean"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isProgram",
        "returnType": {
          "name": "GLboolean"
        }
      },
      {
        "args": [
          {
            "name": "renderbuffer",
            "type": {
              "name": "WebGLRenderbuffer",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isRenderbuffer",
        "returnType": {
          "name": "GLboolean"
        }
      },
      {
        "args": [
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isShader",
        "returnType": {
          "name": "GLboolean"
        }
      },
      {
        "args": [
          {
            "name": "texture",
            "type": {
              "name": "WebGLTexture",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "attrs": [
          {
            "name": "WebGLHandlesContextLoss"
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "isTexture",
        "returnType": {
          "name": "GLboolean"
        }
      },
      {
        "args": [
          {
            "name": "width",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "lineWidth",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "linkProgram",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "param",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "pixelStorei",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "factor",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "units",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "polygonOffset",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "format",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pixels",
            "type": {
              "name": "ArrayBufferView",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "readPixels",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "internalformat",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "renderbufferStorage",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "name": "GLclampf"
            }
          },
          {
            "name": "invert",
            "type": {
              "name": "GLboolean"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "sampleCoverage",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "scissor",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "shader",
            "type": {
              "name": "WebGLShader"
            }
          },
          {
            "name": "source",
            "type": {
              "name": "DOMString"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "shaderSource",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "func",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "ref",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "mask",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "stencilFunc",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "face",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "func",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "ref",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "mask",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "stencilFuncSeparate",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "mask",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "stencilMask",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "face",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "mask",
            "type": {
              "name": "GLuint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "stencilMaskSeparate",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "fail",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "zfail",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "zpass",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "stencilOp",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "face",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "fail",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "zfail",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "zpass",
            "type": {
              "name": "GLenum"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "stencilOpSeparate",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "internalformat",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "border",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "format",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pixels",
            "type": {
              "name": "ArrayBufferView",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "texImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "internalformat",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "format",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "source",
            "type": {
              "name": "TexImageSource"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "texImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "param",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "texParameterf",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pname",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "param",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "texParameteri",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "xoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "yoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "format",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "pixels",
            "type": {
              "name": "ArrayBufferView",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "texSubImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "level",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "xoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "yoffset",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "format",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "source",
            "type": {
              "name": "TexImageSource"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "texSubImage2D",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform1f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform1fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "GLfloat"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform1fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform1i",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "long"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform1iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Int32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform1iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform2f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform2fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "GLfloat"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform2fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform2i",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Int32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform2iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "long"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform2iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform3f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform3fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "GLfloat"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform3fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform3i",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Int32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform3iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "long"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform3iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "w",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform4f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "GLfloat"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform4fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform4fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "w",
            "type": {
              "name": "GLint"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform4i",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "Int32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform4iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "v",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "long"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniform4iv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "transpose",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniformMatrix2fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "transpose",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "GLfloat"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniformMatrix2fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "transpose",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniformMatrix3fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "transpose",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "GLfloat"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniformMatrix3fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "transpose",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "Float32Array"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniformMatrix4fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "location",
            "type": {
              "name": "WebGLUniformLocation",
              "params": [
                "nullable"
              ]
            }
          },
          {
            "name": "transpose",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "value",
            "type": {
              "name": "sequence",
              "params": [
                {
                  "name": "GLfloat"
                }
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "uniformMatrix4fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram",
              "params": [
                "nullable"
              ]
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "useProgram",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "program",
            "type": {
              "name": "WebGLProgram"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "validateProgram",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib1f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "values",
            "type": {
              "name": "VertexAttribFVSource"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib1fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib2f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "values",
            "type": {
              "name": "VertexAttribFVSource"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib2fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib3f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "values",
            "type": {
              "name": "VertexAttribFVSource"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib3fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "x",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "z",
            "type": {
              "name": "GLfloat"
            }
          },
          {
            "name": "w",
            "type": {
              "name": "GLfloat"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib4f",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "values",
            "type": {
              "name": "VertexAttribFVSource"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttrib4fv",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "name": "GLuint"
            }
          },
          {
            "name": "size",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "type",
            "type": {
              "name": "GLenum"
            }
          },
          {
            "name": "normalized",
            "type": {
              "name": "GLboolean"
            }
          },
          {
            "name": "stride",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "offset",
            "type": {
              "name": "GLintptr"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "vertexAttribPointer",
        "returnType": {
          "name": "void"
        }
      },
      {
        "args": [
          {
            "name": "x",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "y",
            "type": {
              "name": "GLint"
            }
          },
          {
            "name": "width",
            "type": {
              "name": "GLsizei"
            }
          },
          {
            "name": "height",
            "type": {
              "name": "GLsizei"
            }
          }
        ],
        "from": "WebGLRenderingContextBase",
        "name": "viewport",
        "returnType": {
          "name": "void"
        }
      }
    ],
    "name": "WebGLRenderingContextBase",
    "url": "https://www.khronos.org/registry/webgl/specs/latest/1.0/"
  },
  {
    "members": [
    ],
    "name": "WebGLRenderingContext",
    "url": "https://www.khronos.org/registry/webgl/specs/latest/1.0/"
  }
]